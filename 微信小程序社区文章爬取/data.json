{"title": "关于小程序内分享行为的进一步规范 ", "author": "Rolan", "pub_time": "2020-12-29 17:09", "content": "为避免误导和骚扰用户，给广大用户良好的使用体验，微信官方对小程序分享活动进一步规范。一、要求清晰明确活动内容，不允许带有误导成分1、分享活动需明确告知用户活动完整信息，包括不限于整体规则、活动步骤和活动利益结果。不允许在流程中以概率事件或者不确定的获利结果诱导用户参与；违规案例一：如下助力获取抽奖机会类分享活动，分享者作为发起者发起抽奖组队活动，邀请好友组队可获取抽奖机会。分享活动的实际获利结果具有随机性，严重影响用户体验。违规案例二：如下砍价免费拿商品类分享活动，通过获得免费商品的噱头诱导用户分享活动给好友，不同好友助力砍价金额不确定，且活动页面未明确说明需邀请多少好友才能满足活动规则获得收益。导致大部分用户花费大量时间精力参与分享活动却收益微小或根本无法获得收益，破坏用户体验的同时也造成对被分享者的严重骚扰。2、分享活动需保证活动信息真实性和准确性，不允许存在标题党式信息进行夸大误导宣传；违规案例一：如下助力拆红包分享活动中，小程序通过分享卡片内容“百元现金天天领”“点一下就有钱”等文案夸大活动信息，诱导被分享者点击进入小程序参与。违规案例二：如下助力好友领奖励分享活动中，小程序通过分享卡片内容中“请查收你的奖励”等字眼诱导被分享者进入分享活动，而分享者进入小程序无法获得任何利益，只是为分享者完成助力。分享页面表述内容与实际实现的效果不符，造成用户误解或误导用户点击。3、分享活动相关信息需在页面显著标示，不允许使用小微字体、灰色字体等用户难以注意、识别等方式影响用户获取信息和阅读；4、分享活动收益和最终收益获取都需满足即时性要求，不允许要求用户长期参与才可获得；违规案例一：如下种树得水果类分享活动，用户通过分享好友获得的水滴用于种植虚拟果树，当果树达到指定等级可免费获得实物水果，分享者需通过长期分享小程序活动不断获得水滴，累计虚拟果树达到指定等级才能获得收益。最终收益未满足即时性要求。违规案例二：养动物得实物类分享活动，用户通过分享好友获得狗粮用于养殖虚拟宠物，当宠物达到指定级别可免费兑换实物商品，分享者需通过长期分享小程序活动累计获取狗粮，才能兑换最终实物商品。最终收益未满足即时性要求。二、要求控制活动传播规模，避免滥用社交关系造成骚扰1、组队组团类分享活动的参与总人数需限制在5人内；违规案例一：如下小程序组队参与分享活动总人数超过5人，滥用社交关系对用户造成骚扰。如小程序内存在以上几类或其他形式的违规内容，请开发者重视并及时整改。一经发现将根据违规程度对该小程序阶梯封禁分享能力或朋友圈二维码识别能力直至封号处理。三、如出现恶意对抗类行为，将加重处理。恶意对抗行为是指故意实施违反平台规则的行为。包括且不限于通过IP对抗、二维码对抗、乱码对抗、页面绕过、屏蔽审核人员帐号等方式，让平台在审核过程中无法完整体验小程序相关分享活动页面。对存在对抗的分享活动和帐号，平台将按照情节严重程度进行从重处理直至封号。四、为了实现上述目标，避免误导和骚扰用户，平台将根据现实状况更新规则。文章转载自微信官方社区"}
{"title": "谈谈小程序这4年 ", "author": "Rolan", "pub_time": "2021-1-5 14:04", "content": "2020年12月2日，科技媒体“晓程序观察”正式更名为“产业新经济”，宣布其报道领域将从小程序升级为数字经济。 对大多数人来说，这件事其实很小，放到魔幻事件频出的2020，更显微不足道。不过对我——这个在小程序生态观察、报道了近2年的媒体人来说，它在某种意义上，是小程序行业媒体走向消亡的标志。 消亡一词可能有点夸张，但不再有媒体专注小程序生态观察，基本成为一个既定事实。 19年年初，新榜旗下的“量子程序”停更，几个月后，传来卖给“见实”的消息，而后者，聚焦的是企业增长和私域流量领域；爱范儿旗下的“知晓程序”，其主编与另一位编辑在19年、20年先后出走，此后账号更新频次不定，阅读明显下滑；我负责的“晓程序速报”也不好过，20年初的时候被老板“战略性”放弃，此后多番争取无果，于是选择离开。如今，该账号已彻底沦为企业产品的宣传号。 小程序行业媒体的集体消亡，不等同于小程序生态的衰败。相反，经过4年的发展，小程序能力已基本释放完全、整个生态渐趋成熟。 当然，生态成熟不等于没有问题，而是“总体向好，局部动乱”。至于为什么用这八个字概括，请看下文分解。一、大局已定：新平台基本不再有 19年7月，从支付宝小程序峰会回来后，我在得到APP上发布了一篇笔记，内容谈及了小程序生态的“群雄逐鹿”。当时快刀青衣在底下评论，大意是说从技术层面看，微信小程序和支付宝小程序更有戏。 如今从平台数据上看，这种判断是站得住脚的，确实是AT的小程序生态更为繁荣。微信小程序日活4亿，支付宝小程序月活6亿（没有计入蚂蚁森林、蚂蚁庄园的数据）。 而且AT的小程序不止支付宝和微信两个平台，支付宝小程序打通阿里大生态，包括UC浏览器、高德地图、淘宝、天猫、微博等应用，腾讯也在高日活的QQ和QQ浏览器，搭建起了小程序，并且做出差异化发展，目前QQ小程序发展还不错，已有过百万小程序（包括小游戏）。 最早提出“轻应用”概念（无需下载，即搜即用）的百度，在2018年也开始发力智能小程序，而且它很聪明（鸡贼）的一点，就是将手百中的百度百科、百度知道、百度经验、百度文库等搜索结果都换成了小程序，所以月活很快破5亿（我对这个数据是存疑的）。 字节跳动家的小程序（头条+抖音+火山，彼此是打通的）捂得最严实，和对方PR交流新功能细节，得到的回应基本都是无可奉告。他们对小程序很摇摆，你说它不想做吧，但偶尔还是会更新。 最吊诡的是抖音小程序和抖音小店的关系，之前一家KA本来想做小程序，结果被挖去做小店。小程序之于字跳，目前可能更多还是防御性策略，真正“大力出奇迹”的时机还没到。 360小程序主打PC大屏，19年7月刚开启公测的时候，我的第一感觉是360疯了，现在回过头去看当时的想法，是我先入为主了。 PC小程序的需求是存在的，因为移动互联网时代，开发者都转向了移动端，PC上的应用服务越来越少，很多用户在PC上找不到需要的服务，只能掏出手机来用；而360小程序要补充的就是这一场景。不过目前还没有太多成绩跑出来。 你不一定听过快应用，但你（安卓用户）可能无意间用过它，负一屏卡片、应用商城关键词搜索和首页推荐等场景都能找到它的身影。快应用的数据还不错，12月初快应用联盟公布了成绩：10亿+覆盖设备数、5亿+月活跃用户数、40亿+月使用量级。 还有网易云音乐，也推出了小程序，但它做的不是平台，定位主要是APP功能的延伸。至于其他的应用，未来基本也不会再搭建小程序平台，一来没场景，二来进入成本太高。 因此，小程序未来基本会保持BBAT+360+快应用的格局，在发展边界上会有点小摩擦，但总体来看还是会比较和谐的（因为开发者可以同时入驻不同平台，不会像电商那样要求商家二选一，而且在当下反垄断的大背景下，更不可能要求开发者多选一）。二、都是流量：哪里效果好就往哪里跑 前面提到的小程序平台至少有7个（不是6个，阿里生态的小程序是打通的，但微信和QQ的小程序属于两套体系），受各自应用属性的影响，其小程序行业分布各自迥异。 微信小程序比较平衡，占比较高的行业分别是游戏、工具、网络购物和内容资讯（包括视频）；QQ小程序偏年轻化，现阶段主打休闲娱乐、个性化功能、社交、创意精美工具，以及校园（更多是对QQ玩法的补充，可以视作QQ的插件）；支付宝小程序金融属性较强，排在前三的分别是生活服务、金融保险和电商；百度智能小程序和字节跳动小程序比较相近，主要是新闻资讯、工具和教育；360小程序的TOP3行业是工具、办公和电商；快应用的主要品类则是新闻阅读、图书阅读、生活服务和实用工具。 （数据来源：阿拉丁指数、360、QuestMobile、快应用） 工具类小程序是比较吃香的，基本每个平台都可以入驻，赚取多渠道流量和广告收入。但更多的开发者，都属于一开始试水多个平台，最终重点运营单一平台的类型。 之前采访过的“青团社兼职”，最开始就是同时运营微信和支付宝小程序，后者被验证拉新和留存效果都更好，加之有平台流量扶持，后来团队就将运营重心转向支付宝小程序。 还有花开一树的章斌团队，之前在微信上推出过多款面向年轻人的社交类小程序，不过没有爆款。 后来QQ小程序上线后，他们第一时间入驻其中，由于产品在用户画像上与QQ高度重合，加之QQ在社交分享的开放能力上远超微信，很快就跑出了爆款，其中一款小程序3个月时间累计获客1700万（这是1年前采访的数据，现在应该更高了）。 至于这段时间再度被炒热的社区团购，其中很重要的载体就是小程序，而自带社交属性的微信小程序天然契合这种商业模式。开发者都是用脚投票的精明人，哪个平台流量多，就会迁徙到哪个平台。三、艰难求存：排名靠前的服务商也不好过 服务商是每个生态都不可或缺的重要角色，小程序也不例外。 据不完全统计，目前市场上的第三方服务商就超过4万家。此次疫情加快了企业数字化转型的速度，这群能够为企业提供线上转型、数字化营销服务的小程序服务商也因此备受关注。 受关注是一回事，活得好不好就是另一回事了。事实上，排名靠前的服务商也不好过，下面分享我观察到的两个行业“切片”。 第一个是有赞。财报显示，2018年至2020年上半年，有赞持续亏损，累计亏损接近15亿元。2020年第三季虽然亏损收窄，但中小商家续费率低依然不容乐观。 所以有赞做了很多“开源”的动作，2019年8月，接入百度智能小程序；2020年9月，先后接入支付宝小程序和QQ小程序；2020年10月，接入小红书，有赞客接入微信视频号。 它就是希望通过接入更多顶流，帮助商家拓展更多经营场景，沉淀更多私域流量。而这些动作的下一步目标，就是卖有赞的一系列营销工具帮商家运营私域流量，这样就能将单客价值发挥到最大。 第二个是我的上家，一家行业内还算知名的小程序服务商。它也有自己的焦虑。 从一开始只提供标准的小程序模板制作，到开始提供代运营，到尝试给KA做定制（虽然没成功），再到布局微信圈子、直播、企业微信、视频号等新工具，就是想找到SaaS收入外的第二增长曲线。 2019年年底，它们就在准备一个新工具，对外宣传的能力是打通小程序、个人微信、企业微信和公众号，亮点是可以帮助上家盘活私域流量。 但是，这当中存在一个悖论，很多中小商家根本没有自家的私域流量，又谈何盘活？中小店主不懂社交裂变，更不懂用户思维和内容营销，如果光靠自己运营，是很难将微信的公域流量引入自家的私域流量池的，那商家要它何用？ 大服务商尚且如此，小服务商的处境可想而知。四、幸存者偏差：小程序可能没想象中那么繁荣 2020年7月，阿拉丁指数在《2020年上半年小程序互联网发展白皮书》中提到一个变化，仅两个月，疫情助力小程序完成了对用户和市场的教育和普及。 当时看到这个观点，我的态度是警惕的，为什么警惕呢？ 因为自己曾陷入幸存者偏差的误区：自己观察小程序行业久了，便以为大家对小程序也有了解。后来一次偶然机会跟身边的同龄人谈起了小程序，结果他们表示完全没听过，我当时就震惊了。 此外，不少人对小程序的认知也存在偏差，认为小程序就是微信小程序，以为小程序就只有常用的那么几个。要知道，支持打开小程序的应用至少就超过30个，小程序本身的数量更惊人，已经达450万个（阿拉丁指数数据）。 但450万的体量，谈得上繁荣吗，或者说能满足大家对繁荣的定义吗？ 如果对标国内APP 357万的体量（工信部数据，截至2020年9月），小程序生态的发展算是超预期的；但如果从用户普及程度看，小程序显然还有一段不短的路要走。 那2021，继续走起！"}
{"title": "腾讯Q3收入增速29% 小程序经济圈带动消费复苏最强音 ", "author": "Rolan", "pub_time": "2020-11-12 18:37", "content": "腾讯控股（HK，00700）发布2020年三季报，实现营业收入1254.47亿元，同比增长29%，Non-IFRS净利润323.03亿元，同比增长32%，再度高于彭博中位数预期。\r\n　　其中，小程序在杂货和服装等零售类别的交易增加，以及在线下交易的渗透率上升带动微信商业支付日活跃账户数及每名用户的交易额同比增长强劲。\r\n　　今年微信生态的一系列变化备受市场关注。1月，微信推出视频号；2月，小程序直播启动公测；10月，视频号释放了多个重要功能，包括直播、1-30分钟长视频、和微信小商店以及搜一搜打通连接等。\r\n　　\"社交\"不再是微信的唯一标签，因为用户对线上服务需求的激增，微信快速做成变化，通过一系列数字化服务工具，为众多行业提供新的商业增长机会。\r\n　　微信以小程序为纽带，集结微信支付、广告营销、视频号、搜一搜等，C To B连接功能进一步发力，且服务覆盖的范围更广、更加下沉。\r\n\r\n    小程序经济圈繁荣 加速B端商业服务能力建设\r\n　　财报显示，三季度腾讯加强微信内场景的相互联动来提高用户发现内容及服务的效率，例如让用户可在对话框中长按信息内的字词以直接进行搜索，从而查找小程序、公众号及朋友圈的相关内容及服务。用户也可以在朋友圈发帖时加入话题标签，其朋友可在点击话题标签后获取公众号、视频信息流及H5页面的搜寻结果。\r\n　　当初低调面世的\"小程序\"，如今已经成了微信生态的核心。以小程序为纽带，连结微信支付、企业微信、微信搜一搜、微信AI等能力，形成了行业与产业持续共建的\"小程序经济圈\"，为众多行业商家提供商业新增长机会。\r\n　　2020年，小程序围绕数字化经营工具进行了三大能力释放，分别是小程序直播、微信小商店以及开放标准化电商解决方案，再加上近期打通视频号、搜一搜等连接功能，小程序正加速完善商业服务闭环的能力。\r\n　　数据显示，小程序日活突破4亿、体量超百万级、覆盖200个细分行业。官方数据显示，小程序上线至今，微信第三方服务商数量超过40000家，\"小程序从业者\"人数达536万。\r\n　　截至今年8月，小程序商品交易GMV同比增长115%，而品牌商家自营GMV同比增长210%。其中，增长最快的行业是日化、奢侈品、购物中心和百货等，如沃尔玛、家乐福、完美日记等。《2020码上经济影响力报告》披露，在零售领域，小程序成为零售门店新线上入口，会员拉新规模提升6倍。\r\n　　在微信一系列数字化营销工具的助力下，沃尔玛已经实现了线上线下全渠道发展。线下，沃尔玛通过腾讯的优屏、扫码购等数字化工具提升了客流数字化程度，并不断提升用户体验与营销效果；线上，借助直享商城，沃尔玛搭建了到家小程序，满足了顾客对全域的消费需求。截至2020年7月，沃尔玛小程序注册用户总数已经突破7000万，用户日均登陆页面次数同比增长300%，客单价同比增长22%。\r\n　　微信小商店的推出进一步降低广大个体、中长尾商家进入小程序生态的门槛，于8月20日起全量开放后，微信小商店支持售卖的商品类目已经超过2000个。\r\n　　值得注意的是，来自C端用户与B端商户的双向需求是刺激微信生态一系列功能升级的根本原因。微信的这些基础工具暂无收费化趋势，并一直保持服务工具特性不变。利用一系列数字化服务工具，诸多零售品牌乃至广大中小商家的新活力释放，小程序经济圈繁荣活跃。\r\n　　在用户体验至上和连接衣食住行实际需求的两大追求下，在简与繁的取舍中，除了社交，微信被应用于越来越多C端及B端的商业化场景中。而这些，对于用户使用时间留存，无疑也将带来正面效果。其C To B、To G优势尽显，拉动腾讯在智慧城市、智慧交通、智慧零售等多领域产业互联网业务快速发展。\r\n　　华创证券分析认为，以\"小程序\"为载体，加之支付、广告营销、视频等各类内容流量互动，直播乃至搜索入口等服务功能完善，\"小程序经济圈\"不断爆发活力，广告、支付等业务都将直接获得正面拉动。\r\n　　双维度下沉\r\n　　不仅仅是头部品牌会将小程序做为线下到线上数字化转型的助力，小程序经济圈生态价值还体现在服务众多中小微商家，其加速下沉到三四线城市乃至县域经济的\"毛细血管\"中。\r\n　　最新财报显示，微信商业支付日活跃账户数及每名用户的交易额同比增长强劲，使得总支付金额同比增长超过30%，主要是由于线下交易的渗透率上升，以及小程序在杂货及服装等零售类别的交易增加。\r\n　　从微信支付最近几年加速下沉地区线下支付发展，到小程序的低成本、低门槛，再到小商店的零成本、零门槛，都体现了腾讯\"下沉\"服务的力度不断增加。\r\n　　随着\"码上经济\"的兴起，小到小店主、出租车司机甚至小摊小贩等中小商家都在使用微信支付。数字经济时代，移动支付的普及率越来越高，并已经打破城乡界限，从城市走向乡村。\r\n　　数据显示，微信支付在县城的首选比例高达83%，乡镇及农村的为78%，均高于城市用户的76%。与此同时，近两年微信支付在县域及乡村的小店数量也累计增长65%，日均交易笔数则累计增长91%。就连国家深度贫困地区\"三区三州\"，在今年4月的微信支付交易笔数也创新高。\r\n　　《2020码上经济影响力报告》显示，2019全年，微信生态带来的码上经济规模已高达8.58万亿元，微信支付个体商户与商家占全国79.4%。笔数背后，是越来越多的中小商家们被连接、甚至被激活。\r\n　　微信生态不仅带动了中小企业的数字化转型，还成功拉动了就业。据测算，2019年微信带动就业机会2963万个，其中直接带动就业机会达2601万个，同比增长16%。"}
{"title": "视频号将打通小程序，这意味着什么？ ", "author": "Rolan", "pub_time": "2021-1-8 09:20", "content": "根据消息显示，近日视频号链接小程序的功能正在进行灰度测试，虽然距离上线的时间还很远，但是从微信对于视频号的定位来看，未来其将会作为主要端口来进行运营。现阶段的视频号上线才不过半年多的时间，前几天刚刚上线了打赏、连麦、美颜等功能，可以说视频号的功能正在不断完善，一个渐趋完整的视频号也即将展现在我们的眼前。现在大部分的直播平台都具备了上文提到的功能，视频号虽然推出了直播功能，但是毕竟时间还很短，整个生态体系的搭建还处于初级阶段，并不完善。所以在面对其他竞争对手的时候，还是有一定的局限性的。但是视频号如果可以快速与小程序打通，这就不一样了。这样一来，视频号博主便可以在号主页加入“商店”功能，这样在直播的时候便可以轻松进行带货了。视频号的商业价值视频号的功能类似于一个直播平台，生态体系基本搭建完成了。视频号主可以发布短视频，然后再进行直播，并通过视频号内功能按键，用户可以对视频号博主进行打赏。当然了，视频号主如果选择带货的话，也可以直接进行相关的操作。其实在此之前有赞就已经打通了视频号，只不过视频号现在进行测试的是让大多数的小程序都能接入视频号内，这个范围更广泛，功能也会更加全面。而一旦视频号搭建完成，其商业价值也就体现出来了。在微信的体系内，有公众号、企业号，还有小程序等多种功能性产品，在内容生态体系的搭建上已经是十分完备了。无论是新闻资讯，还是各种功能性的工具产品，都能在微信平台内轻松获得各种类型的服务。视频号则是以视频的形式来进行各种内容输出，大大提升了传播范围和用户的可接受程度，也是当前最为有效的内容输出方式。所以，在视频号成型之后，大V博主、企业、中小企业卖家都可以选择进驻视频号，通过视频的方式来进行卖货，大大提升了微信端的用户转化率。也就是说，利用视频号的升级，大多数的商业企业主体都可以在上面从事经营性业务，此前通过公众号积攒的粉丝在消费上要更频繁，商家与用户之间的联系也将更加紧密。从微信的平台角度来看，视频号将成为其又一个大流量入口，充满商机。视频号对电商行业平台的冲击首先，阿里的主营电商业务将会面临巨大的挑战。我们都知道阿里最大的问题就是来自于流量，所以这几年的阿里不断通过收购流量入口来弥补自身流量的不足。事实是，单靠其自身的流量是无法满足不断变化的市场的，而且它自己的流量终究是有限的，不会无限制增长，一旦达到顶点，以后再想增长就困难了。如今视频号打通小程序，正式进入电商市场，会进一步分食阿里的份额;其次，类似于京东等电商平台也会遭受一定的冲击，不过它们与腾讯是合作关系，依然还能获得微信的流量入口，在这点上就要比阿里好很多。我们也都注意到，阿里现在主要是支持天猫店铺的发展，个体户的C店在淘宝已经是很难做了。所以，这一部分用户极大可能要转移到视频号等平台，通过公域流量结合私域流量的方式来进行运作。腾讯多年来一直都想进入电商行业，奈何阿里一家独大，多次运作都没有好的结果，只能是选择去支持京东。现如今借助于视频号，腾讯可以在电商领域大展拳脚，它怎么可能舍得放弃这么好的一个机会?随着视频号功能的不断完善，腾讯必将会在电商领域重整旗鼓，阿里们以后的日子不会好过了。如何才能做好视频号?初期的视频号仅仅是作为一个短视频平台来操作的，它起到的是宣传和商品展示的作用。现在的视频号上线了直播功能，如果再和小程序打通的话，就能进行直播带货。不同于其他的直播平台，视频号是植根于微信的，它要比其他的直播平台诚信度更高。因此，用户在微信视频号上进行操作的开放程度也会更高一些。视频号可以接入小程序，也就意味着微信就算是自己做供应链只能是与其他的第三方渠道商处于对等的地位，可以预料到的是届时将会有很多的中小企业平台通过小程序为视频号博主进行供货，这是一种方式;此前的小程序推广是通过微信来进行的，现在则可以利用视频号来进行操作。那么，也就是说小程序与视频号，在功能性产品与直播的角度上也是可以进行联通的，这将会为开发者提供更多可想象的空间。笔者认为视频号之所以能有很大的创意空间，一方面是有微信在背后支撑，一方面是公众号和小程序生态已经颇为完善了，它们与视频号进行联动必然会产生很多新的创新创业模式，届时才是微信大生态的成型状态。"}
{"title": "微信三年谋局，小程序展现“胜负欲” ", "author": "Rolan", "pub_time": "2020-4-7 00:02", "content": "在腾讯的产业互联网全盘规划下，小程序已经成为了关键所在。这篇文章从小程序的成长过程入手，分析了小程序过去以及未来的谋局策略。微信如何谋局？小程序如何成为关键“胜负手”？感兴趣的话快来读看看这篇文章吧。在腾讯全面拥抱产业互联网的全盘规划上，小程序已成为关键战场的“胜负手”。3月18日晚，腾讯发布2019年Q4及全年财报：微信月活再增长至11.65亿，第四季度日均消息数增长15%。小程序日均交易笔数同比增长超过一倍，交易总额超过8000亿元。疫情期间，小程序生态大放异彩。今年1月20日至2月13日期间，政务行业小程序用户环比增长近60%；医疗类小程序用户环比增长347%，教育行业小程序活跃用户环比增长485%；除夕到初七，小程序生鲜果蔬业态交易笔数增长149%，社区电商业态交易笔数增长322%。不仅是小程序平台的繁荣，这个庞大生态体呈现出的商业价值正在给腾讯贡献新红利——智慧零售。疫情期间，腾讯通过助力40+家零售商跑通“导购运营+社群+直播”模式线上迅速回血，2月部分商家小程序日销售额环比12月提升1100%。其中，26家小程序日均销售过百万，7家小程序月销过亿。图 /腾讯官方模式跑通背后，小程序的商业潜力也被充分挖掘。而最新的财报中，与小程序生态息息相关的两个关键指标——腾讯社交及其他广告收入、金融支付收入都保持了超预期增长。如果将企业发展比作下棋，棋势好比战略，在势厚时可以大胆进“取”，在势薄时则需耐心锻“造”。腾讯转型这盘棋，目前恰好处于“造势”关键阶段：看全局整体，仁者见仁；但若细观局部战场，某些决定性扭转已开始。01 小程序造富之路：从跳一跳到电商帝国小程序是一手经历了张小龙“长期思考”的落子。2011年，微信的横空出世，最终让很多投资人松了口气。风水轮回，六年后小程序诞生时，一度重演微信当年的舆论冷眼，但经历三年多市场大考，小程序价值被充分论证，并成为被券商眼中腾讯下一个十年的重要支撑。比如国金证券就坚定给出结论：我们认为腾讯已经找到了下一个战略增长点——金融科技。微信是金融科技业务成功的立足点，也是云计算、智慧零售等创新业务的支点。微信小程序不但是腾讯进军电商、线下零售的王牌，还促使腾讯云在PaaS/SaaS业务上取得先手。而2016年9月开放内测到被券商们作为研报题眼，小程序用了三年多的时间，相比移动互联网轰轰烈烈的速度，小程序更显稳扎稳打，最终成就了腾讯今天这一厚实的棋形——“处处可活”。如果复盘小程序的成长，可以看出它经历了三个阶段，在每个阶段里面，都用与生俱来的“用完即走”产品哲学以及深厚累积的用户认知来破局的。第一阶段是探路普及，既有线下扫码触达的用户普及，也有线上社交传播的用户共鸣。在线下方面，从理念中的在小程序刚开始出现在大众视野时，互联网最火热的变量是共享单车，以摩拜单车为例，需要扫描车身二维码再导流到APP，用户为了骑车还得耗费流量下载庞大的应用程序。而这个痛点恰恰与微信团队设计小程序的初衷对上了：小程序的用完即走与轻量感，一个未来必然的趋势，因为APP还要下载安装，网页的体验又太糟糕。这让摩拜选择尝试小程序，成了最早的线下用小程序的商家，也顺利让小程序打通了这一路径。在线上方面，2017年12月28日微信上线小游戏，同时重点推荐了“跳一跳”，一款充分击中用户体验感、真正意义上让小程序红起来的游戏。公开数据显示，截至2018年1月，跳一跳已经积累了3.1亿玩家，有史以来单款游戏用户规模达到的最大水平。至此，第一阶段的用户普及已经目的达成，接下来的小程序就顺势而为走向了电商化的第二阶段。首先是拓展线下合作伙伴，与摩拜单车一样的逻辑，很多线下产业都因为“用完即走”的轻盈感而开始探索小程序，并将小程序视为自己的必选项。比如最早首先打开智慧零售场景的永辉超市，在面对如何解决用户排队和数字化问题时，选择小程序来破题，小程序开发、上线后，其会员增速是以前APP推广时期的2倍，留存率是60%；沃尔玛也选择了小程序中的“扫码购”，后来做到了每天30%的支付通过小程序完成。再者是与线上合作伙伴共成长，这就有赖于微信在C端的强大用户认知优势，敞开大门，让自身转变为新商业模式的“处女地”，蘑菇街便是这一思路的经典代表，其借价格优势贴近下沉市场，通过拼团等社交化形式在微信中裂变传播，而小程序也为蘑菇街创造出更多即时性购买场景，让更多对互联网不敏感的用户更便捷地购买商品。在刚刚过去的2019年，无疑是小程序完成第二阶段的大成之年，兴业证券明确指出，轻度+O2O等多个用户场景拓展驱动小程序GMV翻倍。2019年，小程序电商已经进一步成为继传统电商、直播电商、社交电商后的线上新形态。从数据层面来看，小程序的交易体量也表现强劲，2019年小程序累计创造了超过8000亿的交易额，同比去年的数额增长160%，其中增长最快是电商和零售行业。其GMV体量已经与拼多多十分接近，GMV增速为160%，明显高于三大主流电商平台阿里、京东及拼多多。02 盘活生态圈：被疫情改写的用户习惯可以说，小程序的电商化布局已经到了收官阶段，接下来要盘活的是形成小程序生态圈这一路棋。一年前，张小龙就对小程序的未来有了清晰注解——“让创造者体现价值和回报”。他强调，“很多人看不懂为什么小程序要去中心化。如果不去中心化的话，腾讯自己垄断了头部几个小程序，那就没有外部的开发者什么事了。看起来腾讯可以短期获利，但这个生态就没有了。”今年1月，微信开放平台副总经理杜嘉辉曾对外指明小程序年度路径——“助力商家打造商业闭环”。小程序计划推出大量用于“商业化”的功能：直播组件、搜索页运营、订阅消息、一物一码、扫一扫识物、封面广告、交易保障等。让用户保持高留存，商家更容易赚到钱，盘活一个交投活跃的电商生态。与之对应的是，春节以来，小程序前后发布了“直播”和“订单管理”两大商业化工具，打造电商生态的雄心壮志颇为明显。从数据表现来看，仅38女神节期间，2000个主播累计直播时长近900小时，每个用户平均点赞数达到了280次，分享次数最高的直播间达到2万次。通过小程序直播，部分品牌的订单量增长近12倍，部分品牌交易额增长5倍，还有品牌单日销售额突破2000万元大关。而订单管理功能则进一步完善了小程序电商的交易环节，帮助商家提供更全面服务。现在，已有当当购物、戴森Dyson、洽洽优选官方商城、蓝月亮优选官方商城等多个小程序商家接入了交易保障服务，用户可以探索更多商家，进行交易保障服务的完整体验。目前，小程序交易保障的商家和服务商接入在内测中，微信将根据商家申请情况逐步开放内测，为优质商家提供小程序卡片背书标识、交易保障官方组件，以及搜索等更多场景的流量倾斜，带来更多交易与转化，实现品牌生意增长。在券商们看来，小程序正在成为大而全的线上生活场景。由于小程序连接C-B的天然属性，决定了其商业价值在未来将主要从B端获取，其商业化的潜力取决于该生态创造的社会增量价值。这意味着，小程序的第三阶段是招“一子解双征”的胜负手，成功的话就能让微信成功扎根消费互联网，拥抱产业互联网。在稳住C端用户矩阵和时长以外，开拓小程序新生态，用企业微信等产品矩阵一并培养B端用户认知，最终实现变现共赢。而即将到来的2020年第一季度，这组数据或将更加抢眼，因为战“疫”期间的小程序已经全面爆发，根据阿拉丁小程序统计平台和阿拉丁指数的估算，全网小程序在2月份数量突破390万，日活达到4.5亿。阿拉丁数据显示，战“疫”的在线经济高光时刻，大大促进了传统行业大迁移以及互联网企业大进军小程序：在最近两个月新增的60多万小程序中，传统行业是最多的，包括但不限于餐饮、商场、品牌、渠道等。这些都是过去需要花巨大成本和时间去教育的行业。因为疫情，倒逼了商家快速拥抱新技术去连接新用户。仅仅在2月份，接到中国知名餐饮和线下品牌实体店要做小程序的咨询数量就超过了过去一年的。以往少见的工具类工具类在2月份TOP100榜单中占比达 10%，教育类占比达到了7%。一旦用户的认知被改写，习惯就会被固定下来，无论C端还是B端，这将成为微信小程序生态圈最大的推动力。03 腾讯的先发优势：C端护城河给予的底气从2019年开始，各大互联网巨头已经意识到了小程序的战略重要性，纷纷布局，虽然这盘棋对手频频下子，但腾讯下得并不急，甚至有些“佛系”。给予腾讯这种徐徐图之底气的是他的C端护城河。如同腾讯每次在新业务上的攻城略地一样，他开局之本就在于从PC到移动互联时代，始终稳坐基础通讯工具的王座，而且，几乎没有对手。东吴证券曾经对此做过系统的分析，他们将用户的获取比喻为互联网公司的护城河，并明确这一定义的要点在于“用户”而不是“流量”。由此出发来分析不同互联网公司所处的流量层级，可以发现腾讯拥有的微信和QQ被归纳入了基础通讯工具层级，东吴证券说这是“互联网皇冠明珠”，通讯是最底层、最基础的互联网使用需求，属于必须、高频、覆盖面广的应用场景，用户规模的天花板很高，用户需求同质化，因此网络效应最明显，用户的获取成本很低，用户自身的转换成本却非常高，导致公司留存用户的成本就很低，因此最容易形成强大壁垒。这条护城河让腾讯的整个生态体系以通信为基础，微信和 QQ是整个业务体系的根基和树干，腾讯生态金字塔的基石，通讯+社交具有强网络效应和高转移成本，使得公司的用户资产非常庞大且稳固，然后在这个基础上通过游戏、广告、其他增值服务和金融与云业务变现。这个被完美的复刻到了微信小程序身上，基于不可撼动的C端社交优势，超过10亿的大流量底盘保障用户触达，其自带腾讯的社交基因，在社交关系和分享裂变方面存在着天然优势。展望下一步，小程序配合企业微信、公众号及支付业务，完善的交易生态正在形成：小程序为商家搭建了交易场景，而企业微信、公众号和微信支付则为商家提供了经营工具，包括营销获客、企业资金与成员管理、客户关系与售后管理等增值服务，近期企业微信客户朋友圈功能也正式开放。对腾讯密切关注职业投资人李国飞就在他的投资框架分享中反复谈及这个词，他说：“我们投资的公司一定要有强大的竞争力，如何评估呢？我认为标准只有一个，就是是否拥有很宽的护城河。”“只有那些护城河很深的公司，才能持续在没完没了的激烈的竞争中取胜，最终成为市值很大的公司。”而在他看来，护城河的深度最强的几乎都是互联网公司，比如转移成本非常高的代表，微信和Facebook，朋友们都在那里，一个人转移没用。而他特别提出的一点是，护城河的宽度要经常检讨，无论看起来是何等坚不可摧，柯达被数码技术彻底打垮，IBM几十年在一些对可靠性要求极高的行业如金融业有如同上帝一般的地位，但最近十年在廉价云计算的冲击下狼狈不堪。而在这个意义上来说，腾讯或许是个好棋手，这一次，他或许已经再次找到了维护C端护城河的“妙手”。"}
{"title": "阿拉丁数据：2020社区团购类小程序次月平均留存率为31% ", "author": "Rolan", "pub_time": "2021-1-14 10:00", "content": "日前，小程序服务商阿拉丁发布的《2020年小程序互联网发展白皮书》提到，2020年全网小程序已超600万，其中，微信小程序数量超380万，日活跃用户超4亿，MAU为8.3亿，人均单日使用时长超1200s，微信小程序的交易规模突破2万亿。 从阿拉丁统计的数据来看，网络购物小程序的活跃用户和新增用户均在2020年2月达到全年峰值，二维码扫码、社群是网络购物小程序活跃与新增用户的重要来源。\r\n据悉，电商平台和社区团购成为2020年网络购物小程序的主要模式，用户在导购、生鲜、社区团购类小程序上停留时间也相对较长。用户平均停留在导购小程序时长约1500秒，生鲜电商小程序约1050秒，社区团购小程序约850秒，远超传统电商平台。\r\n《2020年小程序互联网发展白皮书》数据显示，阿拉丁指数TOP100榜单中社区团购的上榜数量逐月攀升，到年末时，已有6家稳定上榜的社区团购玩家，分别是兴盛优选、十荟团、同程生活、美团优选、多多买菜以及橙心优选。其中，兴盛优选上榜次数多达12次，十荟团多达10次。\r\n值得一提的是，2月之后社区团购小程序活跃用户留存一直保持较高水平，2020年的次月平均留存率约31%，活跃用户主要分布在中部和东南地区，湖北、广东、湖南三省的活跃用户数占比最多，总体约占42.3%。"}
{"title": "小程序的共识、分歧、悖论与通解 ", "author": "Rolan", "pub_time": "2021-1-8 09:18", "content": "一个很好的概念出现，往往会迅速引爆舆论，跟随者众，又会在人们未觉中悄悄退场，热度难以长久。突然起来的风潮就像是一场加多了催化剂的实验，弊端在于容易引来更多的跟风者并造成损失，好处是缩短了那些真正值得投入的概念的试错周期。在热度褪去后，这些概念中的一部分是真哑了火，比如新零售和私域流量，还有一部分却是进入了“闷声发财”的阶段，比如小程序。今年微信公开课的邀请函上，主论坛位列第一的毫无疑问是视频号，但列在第二的却是小程序，排在微信支付和企业微信之前。这引起了奇偶派的注意，通过查阅，我们发现了一组有意思的数据。2020年1月，百度智能小程序宣布月活超过3亿，到9月时沈抖在百度联盟峰会上透露，智能小程序月活已经超过了5亿。数据背后是趋势，有人从媒体不再关注小程序得出消极的观点，但我们却坚定的认为小程序正在做大做强。这由2020年的时代背景和企业策略，共同决定。01 共识先说时代背景，疫情在一些线上领域带来了增长，小程序绝对是其中之一。不管是各地的健康码，还是宅经济对健康类和购物类小程序的带动，都加速了小程序的普及。这很契合巨头们在2020年的一项共同策略：服务化。几年前盛行的“下半场”理论，其实对应的无非是C端流量粗浅转移至线上的过程告一段落，红利期结束。显然，接下来的策略有两种，一种转做B端，一种是深耕这些C端流量。可惜的是，当时市面上一窝蜂都是转型to B的号声。但在2020年，我们会注意到，互联网头部玩家在不约而同尝试做深服务，靠服务化来寻找增长是共识。具体的做法就是给拳头产品镀金，比如强化了微信、百度APP、支付宝的服务属性。这背后还有一个共识，那就是服务化这件事，基本靠小程序来承载。比如微信，2020年底上线了“腾讯出行服务”，从名字上就能直观感受到微信向服务化的靠拢。我们都知道，衣食住行是腾讯一直想要完成的闭环，这么多年都没能完成，最终还是靠小程序落了下来。百度，则把服务化视作年移动生态的两大核心战略之一。从模式上来讲有三种，复杂关键的领域比如健康和电商，百度会自建服务，工具类服务为了避免重复一般采取聚合模式，一些不方便单独做的服务比如房产则采取共建模式。但如果看这些服务的呈现形式，那就只有一种，即小程序。反倒是像阿里、美团这些平台通过小程序来实现服务化，并不明显。有句话说互联网的本质是连接，腾讯连接的是人和其他人，百度连接的是人和信息，服务化对他们的主业都具有承载延伸的作用。但阿里是连接人和商品，本质上它直接提供的就是交易服务，所以小程序对它而言并不如其他两家重要。不过阿里发力服务化一年，一个显著的特征是，支付宝APP跟做“本地生活服务”的美团，越长越像了。按照国际惯例，阿里给出了一个新名词，即胡晓明提出的“数字生活新服务”。总体来看，从高喊to B到蒙头深耕服务，是互联网巨头的共同转变。而这种服务化，就基本靠小程序来实现，所以小程序才会被百度列为移动生态的三大支柱之一，在微信公开课的座次中紧随视频号。02 分歧关于小程序该怎么做，BAT之间存在着明显分歧。在巨头们“以超级APP+小程序”的服务化策略中，载体是超级APP，巨头们的分歧同时存在于超级APP的内与外。在内：比如微信，对平台而言其根本就在于社交。群聊、公众号、朋友圈这些功能，归根结底都是要为社交提供支持，而不是成为营销导流的入口，把社交环境搞得乌烟瘴气。但对更多的商家和小程序开发者而言，微信就是个超大流量池，群聊和朋友圈这些入口都是肥肉。所以在开不开放某个入口的问题上，双方存在根本性的矛盾，再加上微信内需要导流的可不止小程序这一个领域，所以小程序能在微信获得的入口支持有限。至于阿里，从入口角度讲，支付宝甚至连首页下拉的服务中心（微信内为常用小程序）都没做。这或许是因为支付宝首页显示的，已经基本都是与购物和生活有关的服务了，这也是我认为，小程序提供的服务能力对百度和微信更有意义的原因。因为对百度APP而言，尤其是搜索那部分来的流量，都是抱有明确需求的。过去百度是引导需求至各个服务平台，现在则是通过各个小程序的服务，在百度APP内完成需求。更形象的表述是，过去用户用百度是搜完即走，现在百度要把用户的搜索直链服务。所以智能小程序在百度APP内的入口极多，按照他们官方的说法，目前有80多个入口，包括百度APP首页下拉的服务中心。在外：开放与封闭的探讨，自互联网诞生伊始至今一直没有定论。在自家超级APP以外，也就是其他APP上采取的主张，才是各家做小程序最核心的差异所在。阿里是著名的流量黑洞，只有从外界买流量的习惯，基本不向外输送流量。比如最近很热闹的虾米音乐关停，再联想一下UC的现状，看看微博，对阿里而言，小程序对外开放是个伪命题，基本也就是止步于支付宝淘宝这些APP的小程序互相打通一下。腾讯，倒一向是主张开放的。但万事逃不开一个“利”字，微信做小程序的初衷是什么，是留住用户，是流量集中，而不是分散。所以在小程序的开放上，腾讯或许还没有阿里做的力度大，起码支付宝的小程序还打通了UC、高德、淘宝这几个自家APP。百度的思路和背后逻辑，跟腾讯完全相反。腾讯是因为社交的特殊属性，所以用户很稳，做小程序是希望留住更多流量，不希望流量外溢到其他APP去；而百度是流量充沛，但希望能通过更多服务用户需求，来留住他们。一个证明是，数据显示，百度APP的用户登录比例已经接近70%了。从具体的做法上讲，就是成立开源联盟，只需要开发一次小程序，就可以在多个百度系及非百度系的平台上运行。这个开源联盟是百度在2018年上线智能小程序后不久就推出的，当时百度直接公开了全部50多万行源代码，一些平台比如WiFi万能钥匙很快就决定采用百度的底层架构，在此基础上开发自己平台的小程序。我们来分析一下原因。18年底，WiFi万能钥匙宣布的数据是月活超过8亿。但WiFi万能钥匙最显著的两个特点就是低频和用完即走，用户不会经常打开，打开后也不会多做停留。这就是典型的有流量，但是希望提供更多服务，留住用户。到现在，这个开源联盟的成员已经达到了55个。对开发者而言，这是极大的降低了开发成本，和后期的运维费用；对这些平台尤其是百度而言，这代表着在推动服务化的进程中能“得道多助”，快速的通过小程序覆盖更多服务场景。依旧是用结果来印证，智能小程序已经可以在政务、购物、旅游等271个细分场景提供服务能力了。03 悖论与通解继续思考小程序的链条，开发之后的下一环显然是分发，这个阶段事实上存在一个悖论，而平台们已经意识到并在着手解决它。回归本质，小程序是存在的意义是什么？是做不常用APP的轻量化，为的是更简单的解决一些低频需求。但微信和支付宝的小程序，如果是用户主动需要使用，原本通常怎么实现呢？答案是用户需要明确知道该打开哪些小程序，才能得到服务，解决自己的需求。但既然是低频，不常用的服务，用户怎么会知道该用哪个小程序，甚至哪个小程序最好呢。这个筛选和比较小程序的步骤，对用户而言极为艰难，一点也不方便。思来想去，微小但常用的一些功能，可能会同时满足用户熟知和不希望单独下载APP这两个需求，比如增长绝大部分依赖小程序实现的“顺丰速递”；其次就是其他巨头APP的微信小程序，但这种情况一来头部效应明显，二来量不大用户完全可以点开其它APP，比如滴滴出行。但以上两种情况，远不足以代表用户全部的使用场景和需求。我们作为用户会有一个切身体会，微信小程序的日常使用中主要出现两类场景中：1.     通过社交传递来的小程序。比如刚加的好友分享来的名片，比如朋友分享来的跳一跳，再比如熟人分享来的的抢票助力；2.     从线下被引导使用的小程序。比如小程序最初设想中汽车站购票场景，比如在餐厅用餐时的点餐系统，再比如疫情中的各类健康码。我们会发现，用户原本对微信小程序的应用，很难脱离这两类场景。显然，微信小程序的分发逻辑存在问题，用户往往面临五花八门的低频需求找不到该用什么小程序的尴尬，但原本这才应该是小程序真正的价值。直到去年1月的微信公开课，故意没去现场却依然刷了屏的张小龙给出了答案。他对这个问题的思考是：“搜索应该是小程序的一个主要流量来源”。作为搜索行业的老大哥，百度也有类似的认知，提出的概念是搜索直链服务。为了倒腾这个搜索，去年一年，腾讯和阿里都在非常积极地探索搜索。腾讯要买搜狗，阿里在创新事业群内做了夸克。这样做的好处，一来是能获得更多自带需求的流量，当用户一次搜索就代表着一类需求时，针对这些需求该分发什么小程序来提供服务，也就变得明确了。二来是生态和机会的问题。从PC切换至移动互联网时代，搜索面临的就是壁垒问题，搜索引擎根本无力打通一座座信息孤岛。但在小程序生态中，作为平台方，打通这些轻量级应用之间的壁垒轻而易举。对百度（微信）们而言，回归（达到）PC时代搜索引擎对网站们的感知与掌控，为用户提供更精准的答案与服务分发，完全是可行之事。但是搜索这个领域，毕竟是百度深耕多年的大本营。无论是市场份额，还是技术积累上来看，腾讯阿里们想要获得更多自带明确需求的流量，想要获得掌控一套生态的机会，都还长路漫漫。04 终从胡晓明那句“数字生活新服务将是下一个十年最大的互联网红利”中，我们可以清楚地感知到，盲目to B的焦虑正在被缓解，巨头们已经意识到，粗浅转移至线上的C端流量，还有巨大的服务需求没有得到满足。2020是外部环境逼迫着用户更深度的适用互联网服务的一年，也是作为各家服务化战略核心执行者的小程序，大步向前的一年。不造声势，没有铺天盖地的讨论，并不代表一个好概念的消亡，还有可能是它在被验证后正在踏实发展。社区团购今年声势最浩大的概念，其中佼佼者兴盛优选，不就没做web和APP开发，只做了小程序吗？小程序的故事，才刚刚开篇。"}
{"title": "重磅：小程序将可分享到朋友圈 ", "author": "Rolan", "pub_time": "2020-7-8 00:11", "content": "编者按：本文来自微信公众号 “见实”（ID:jianshishijie） ，作者：见实，36氪经授权发布。昨天（6日）深夜，几张小程序截图在行业中流传，截图显示，小程序已可正式分享到朋友圈。这表明，微信最大的流量池将向小程序敞开，毫无疑问，小程序也将迎来更大一轮爆发。如下四张截图，正是部分行业群内流传的小程序被分享到朋友圈的全过程：第一张图：分享选项页面第二张图：点击分享到朋友圈按钮，弹出分享到朋友圈样式预览第三张图：用户分享到朋友圈时的过程页第四张图：分享小程序到朋友圈成功后的呈现见实第一时间找到这个小程序的开发者“阿康”，被证实截图为真。他表示，上述部分截图是小程序在开发者模式下分享到朋友圈的路径。除此外，见实还打开了微信公开课的官方小程序，及更多小程序，发现“分享到朋友圈”按钮已经被明确显示出来，虽然暂时为灰色不可点击，这表明微信开放“小程序分享到朋友圈”功能的时间日近。在微信开发者平台，和分享功能相关的官方文档已经做出更新。在这个转发分享相关的API文档“wx.showShareMenu”里，\"shareTimeline\"之意正是表示“分享到朋友圈”。当夜，部分开发者尝试将文档所示范代码加入到自己的小程序后，发现即可实现分享到朋友圈功能。他们还发现，目前暂时只有安卓版小程序可以实现，iOS版（苹果）或将在后续迭代中释放。这一功能被创业者期盼许久，可以说从小程序被推出的第一天开始就不断被提及，直至现在。不论从任何一个角度看，朋友圈都是微信生态中流量最多、吸引用户时间最多的场景之一。开放分享到朋友圈功能，意味着小程序赛道的流量更加充足，创业者获取流量（被用户关系链推荐）的能力极大增强，门槛则进一步降低，而用户更容易发现和推荐优秀小程序，爆款小程序也将更多涌现。如果细读开发者文档，会看到微信官方明确给出两个方式可选：1、发送给好友按钮，和分享到朋友圈按钮同时出现；2、仅出现发送给好友按钮。不论哪一种，都不能单独存在分享到朋友圈的按钮。背后意思或是：给用户自行选择的权力，防止开发者仅留“分享到朋友圈”按钮，从而强制用户分享到朋友圈。“小程序可分享到朋友圈”这一功能的推出，在今年5月时就已在一些小圈子内讨论。同时被讨论的还有另外4个非常重磅、业界期待的功能，或也将在近期陆续推出。另据部分资深从业者深夜、凌晨在朋友圈发出的消息，7月7日（也就是今天），微信或会正式推出这一功能。只是这一消息尚没有得到微信官方确认。同样，尚无法确认的还有，小游戏暂时仍未确定是否可以分享到朋友圈。以及，该功能是否有小程序的类目限制等。这些消息仍在进一步了解中。"}
{"title": "复盘 | 从V0.1到V1.2，记一次无人售卖机对接的经历 ", "author": "Rolan", "pub_time": "2020-4-14 00:03", "content": "文章从版本迭代的实操层面出发，对无人售卖机对接的项目进行了复盘总结并分享了相关经验。背景小汪所在公司里有一台无人售卖机，是公司买回来的，放在茶水间内部使用的，由公司内另一团队在购买的时候做了个简单的程序，将无人售卖机的支付系统对接到了公司的支付中台上。Image by Crystal Chen from Pixabay就是上图这种随处可见的售卖机，用户选商品后扫码付款。就在一个平静的早上，小汪突然接到通知，公司买了数十台同样的售卖机回来，打算放在整栋大楼各个楼层里，用来推广社区电商APP。调研这是小汪公司买的售卖机，由于品牌原因就不放实图了，分为售卖机、云控系统两部分。于是小汪就开始找到原来负责对接的团队（简称团队B），了解这台售卖机的对接流程：用户在售卖机上选择商品后，售卖机侧告诉我方包括商品名称、价格、设备号等订单信息；我方创建一个支付订单，并生成一条支付链接，然后返回给售卖机；售卖机在那个小小屏幕上展示出二维码，让用户扫码支付；我方系统发现订单被支付后，向售卖机侧发送开闸指令。其实研究，就是支付和开闸而已。但是原来开发的团队告诉小汪：售卖机系统从向我方请求下单，到掉落截止时间，一共就60秒！我方要创建订单、返回链接、售卖机生成二维码并展示、用户扫码支付、我方通知售卖机开闸……更坑的是，我方如果把握不好这60s，超时发给售卖机，售卖机依然会返回成功，但却不掉落商品！售卖机没有提供其他任何接口于是小汪简单想了一下方案后，赶紧纠集商务与项目的同事与售卖机的供应商电话沟通，结果总结一个词：要钱！方案 V0.1跟领导商议之后，小汪纠集了团队B与自己的团队，大家头脑风暴一轮后，定义了第一版本方案。版本：V0.1目的：宣传推广自家APP需求：一开始想在售卖机边上贴上我们平台的广告，用户扫码下载APP注册成新用户后，再通过APP扫码购买可获得新人价（1分购），如果直接扫码下单则不享受优惠。将方案与领导汇报后，期间方向变为，推广商城的微信小程序版本，要求用户必须注册登录才能完成支付，注册登录后可以享受持续的折扣优惠。原因如下：（1）下载APP扫码享受新人优惠但是由于售卖机在写字楼内，用户体量有限，拉新效果差，而且用户可能用了一次就把APP删了，后期转化率低；（2）下载APP扫码享受持续优惠可以增加APP的持续活跃度，但门槛依然有点高（3）使用微信直接扫码进入小程序门槛低且目前小程序活跃度比APP高，是个不错的选择（4）领导要求用户必须注册登录后才能购买不能只是访问了小程序就能享受优惠，必须实现拉新作用。可以利用微信联登、微信小程序授权手机号登录，优化用户登录体验。（5）后天就要上线会后小汪赶紧调整好方案同步给技术大大们，但是当晚上技术团队传来消息，由于不同项目组使用的域名不一样，需要售卖机那边换一下来我方下单的域名。于是小汪连夜连线售卖机的商务，这个终于不用加钱了，但是要排期实现，而且对小汪晚上打扰他十分不满！并郑重表示他们不是全时提供售后的！也就是说，2天内把域名换了是不现实的了。方案 V1.0第二天一大早，小汪再次召集了自己的团队和团队B，大家商讨如何处理，技术大大们讨论后说，对方不换域名这个没什么，我们自己内部做一下转发吧，至少能挺一段时间。然后边与技术团队讨论，小汪一边确认了方案V 1.0版本：V1.0目的：用户拉新、活跃需求：用户通过支付宝、微信扫码后，跳到商城对应的H5、微信小程序页面，登录完进行支付，支付成功后导流到对应版本的商城中。我们设定一个固定的优惠比例，对售卖机传过来的价格打折。技术要点：当用户需要用支付宝购买时，通过微信提供的 “扫普通链接二维码打开小程序” 功能，用户用支付宝扫描时，进入H5版本商城，用微信扫描时，进入微信小程序对应页面，这样就只需要一个二维码即可解决不同工具扫描的问题。小汪火急火燎的把方案汇报给领导，没问题了立即跟技术同步投入开发，最后在deadline过后次日凌晨完成了对接。方案 V1.1系统上线后第一天，大家都很积极，由于饮品打折后确认划算，而且操作轻松，当天购买的人络绎不绝。次日，公司运营打呼不好！由于我们相对来说太便宜了，居然被一些用户几十瓶几十瓶的买，售卖机都快被掏空了！加之售卖机那个坑爹的60s限制，头一天有些用户的饮料没掉落，开始跑来要退款了，于是小汪就开始着手V1.1 版本，同时让运营与领导协商重新定折扣比例。版本：V1.1目的：限制用户高频购买、增加退款功能需求：用户一天享受一定次数的优惠，超过后就只能原价购买。如果用户完成支付后，我方系统从支付宝/微信获得的支付时间发现已经距离接收到售卖机的订单超过58秒时，不再向售卖机发放开闸指令，而是自动退款。关于饮料没掉落用户跑来要退款的问题，在咨询售卖机供应商后，供应商表示可以加钱给我们查询掉落状态的接口……小汪与运营沟通后，指定了一套退款流程：如果用户反馈没掉饮料，我们就先让用户出示订单支付成功的凭证，然后查询我方系统是否存在该订单；如果存在，再查询售卖机云控系统，云控系统要是显示没掉落商品，则退款；如果显示已掉落，用户坚持的话，则联系物业查看楼栋监控。新版本两天就开发测试好了，系统上线后，退款率下降了些，同时刷单现象也明显减少，但是依然有的用户就不断买直到触发限购。方案 V1.2机器开始正常运作了，每天能为平台带来不少的订单，更重要的是小程序和H5商城的访问量，此时小汪就开始思考如果让这些买饮料的人更好的导流到商城。同时运营也提出，现在这套系统没有后台，每天要向技术要前一天的订单报表，再跟售卖机云控系统中的订单进行人手比对，体验非常糟糕。于是就有了V1.2版本。版本：V1.2目的：更好的向商城导流、帮助运营改善核对订单的压力需求：将售卖机支付成功后跳转的页面变为在商城后台广告管理中可以配置，这样用户支付成功后不再是固定进入商城首页，而是可以跳到最新的活动页、专题页，更吸引用户的注意。引入新用户优惠，如果用户是新注册的，享受新用户折扣。在商城后台增加订单查看功能，同时支持选择日期后上传售卖机云控系统导出的订单列表，进行自动对账，如果系统发现我方传了开闸指令，但是售卖机云控系统显示并未掉落商品的，则系统自动发起退款。又过了几天，售卖机的运营终于稳定了下来，至此，无人售卖机的对接暂告一段落。总结在这次与无人售卖机对接的过程中，小汪总结了一些经验：硬件要与业务场景相辅相成的，如果有机会能参与到采购流程中，必须先于供应商约定对接、售后等事宜，为未来业务拓展打好基础。在做用户补贴时，一定要提前做好用户白名单、黑名单、限购、预警策略，还可以对接一些第三方的风控平台，如网易易盾、腾讯云天御等产品，对用户手机号、设备、IP进行风险预测，最大的避免黑产风险。面对突发需求时，应多想想该需求未来的发展方向、可能存在的问题，同时尽可能复用已有的功能。这次对接中，登录、订单、支付等功能都是使用社区商城已有功能，减少了重复“造轮子”的时间。新设计的功能，在规划的未来场景中，应该具备复用的可能性，这样一旦遇到需求变更，或者需求终止，就可以更加的从容。本文由 @iCheer 原创发布于人人都是产品经理。未经许可，禁止转载题图来自Unsplash，基于CC0协议"}
{"title": "“小程序经济圈”标签化 腾讯的逻辑不止步于电商 ", "author": "Rolan", "pub_time": "2020-11-13 09:16", "content": "多年来，没有电商基因与不断尝试、从未放弃的两个标签一直伴随腾讯，今年6月份，腾讯上线了微信小程序“小鹅拼拼”，10月份，用户开店后在小程序进行直播和卖货的“微信小商店”也上线了。当外界还在讨论腾讯这到底算不算直接下场做电商时，如今腾讯刚发布的第三季度财报，却侧面反映了腾讯的逻辑绝不止步于电商，腾讯正在构建的“小程序经济圈”的巨大价值正在裂变凸显。11月12日，腾讯发布了第三季度财报，其中的一组数据显示，微信及WECHAT的月活跃帐户12.1亿，去年同期为11.51亿，市场预估12.1亿；QQ的智能终端月活跃账户数6.174亿。收费增值服务账户数同比增长25%至2.13亿，主要来自视频及音乐内容服务会员数的增长。视频服务会员数同比增长20%至1.2亿，音乐服务会员数同比增长46%至约5200万。从去年同期的11.51亿到如今的12.1亿，微信及WECHAT的月活跃账户数据，在已经很庞大的基础上，又有了一个增长。算力智库创始人燕丽对经济观察网记者说，依托微信的生态，今年小程序服务是腾讯的一大亮点，在数字化过程中，中国存在大量的小企业，它们的数字化营销以及数字化系统，小程序开发、微商系统这些都是地面作战非常重要的工具。今年以来，微信不断更新功能：通过小程序、视频号、小程序直播、微信小商店、搜一搜等内容与流量互动，帮助商家实现从线下到线上的转移，同时形成自己的私域流量，这些功能降低门槛，提供更多连接B端的服务功能。依托微信庞大的用户基础，经过一段时间的沉淀积累，“小程序经济圈”雏形已现。小程序的日活跃用户在2020年已超过4亿，覆盖超过200个细分行业，小程序超过百万级体量，小程序从业者536万。与此同时，微信生态里活跃的第三方服务商也已超过4万家。去年，小程序的交易额就已突破8000亿元。在2020年1-8月，小程序实物商品GMV（成交总额）同比增长115%，品牌商家自营GMV同比增长210%，增长最快的行业是日化、奢侈品、购物中心和百货，日化行业的增长高达1710%。今年1月9日，在2020微信公开课PRO现场发布的《码上经济影响力报告》显示，2019年，微信催生的码上经济规模超过8.58万亿元，带动码上经济就业机会2601万个。据微信\"码上经济课题组\"测算，2019年，微信生态带来的码上经济规模约占我国GDP(99.0865万亿元)的9%。数据背后，腾讯的发展逻辑到底是怎样的？今年5月7日，马化腾在《人民日报》发表的《推动上“云”用“数” 建设产业互联网》一文显示，新基建、数据要素和产业互联网紧密相连、互相促进。有专家将三者关系类比成“路—油—车”。只要“路—油—车”三者协同发展，我们一定能够构建出一个包括线上线下企业、政府部门、科研院所、公益机构和广大用户在内，充满韧性的数字生态共同体。对于腾讯在其中的角色，马化腾也提到，腾讯在其中将秉承“科技向善”理念，专注做好连接和工具，立足成为各行各业的数字化助手，与合作伙伴共建新生态，助力新基建、数据要素和产业互联网的深度融合。机构也把更多的目光投向这里。兴业证券表示，长期看好小程序生态释放的价值。浦银国际认为，微信小程序已逐渐成为私域流量电商的标配。浦银国际首次覆盖腾讯(700.HK)，给予\"买入\"评级，12个月目标价为700港元。"}
{"title": "从微信小程序到鸿蒙js开发【10】——CSS3动画&JS动画&定时器 ... ... ", "author": "Rolan", "pub_time": "2021-2-22 14:51", "content": "在进入APP时，通常都会有一个欢迎界面，用于展示APP的名称、logo，并预先加载部分数据。既然是欢迎页面，自然少不了一些动画元素。简单运用了CSS3和JS的动画效果，progress组件以及倒计时撸了一个欢迎页面。直接上效果：\r\n\r\n1、基于CSS3的动画效果\r\n1.1 给动画元素设置animation属性。\r\n\r\nanimation-name：动画名\r\nanimation-duration：动画持续时间\r\nanimation-delay：动画开始前延迟时间\r\nanimation-iteration-count：动画重复次数\r\nanimation-timing-function：动画执行速度\r\nanimation-fill-mode：动画模式\r\n\r\n\r\n1.2 用\"@keyframes 动画名\"匹配设置动画规则。\r\n@keyframes an1 {\r\n        from {\r\n            transform: rotate(180deg);\r\n            opacity: 0.3;\r\n        }\r\n        to {\r\n            transform: rotate(360deg);\r\n            opacity: 1.0;\r\n        }\r\n}\r\n复制代码\r\n除from，to外，还可以使用百分比（如20%{...})方式设置动画途中的效果。\r\n以上两步，就实现了gif图中HUAWEI的logo旋转和逐渐清晰的动画效果。\r\n2、基于JS的动画效果\r\n2.1 动画元素给定id/ref等可以用于元素匹配的属性。\r\n\r\n复制代码\r\n2.2 在onShow()方法中获取元素实例，并用animate()方法给定动画规则和基本属性。注意这一步在onInit()和onReady()中执行是没有效果的。\r\nanimate()接受两个参数，第一个为数组，指定动画的关键帧效果。第二个为对象，指定动画的基本属性。\r\n2.3 调用play()方法开始动画执行。\r\n    onShow() {\r\n        // 设置动画\r\n        let textImg = this.$element(\"textImg\").animate([\r\n            {\r\n                transform: {translateY: '200px'}, opacity: 0.1\r\n            },\r\n            {\r\n                transform: {translateY: '0px'}, opacity: 1\r\n            }\r\n        ], {\r\n            duration: 5000,\r\n            easing: \"linear-out-slow-in\",\r\n            fill: \"forwards\",\r\n            iterations: 1\r\n        });\r\n        textImg.play();\r\n        ......\r\n    }\r\n复制代码\r\n这个方法在开发者文档中未找到说明，但证实可用，且IDE也是有提示的。\r\n\r\n\r\ntransform其中的key输入却是没有提示了。\r\n\r\n**这里写完后会有红线说缺少属性，但运行是没问题的，可以忽略。**如果看着难受可以把数组单独声明为一个变量，再作为animate()方法入参。\r\n以上三步，就实现了gif图中\"litemall\"字样从下方上移并逐渐清晰的动画效果。\r\n对比CSS3的动画技术，使用JS实现动画会更有灵活性。可以在onShow()中定义动画，在用户进行一定操作后再执行。CSS3的只能在页面显示后一定时间执行，但可以用百分比的形式定义更丰富的动画渐变效果。\r\n3、JS定时器\r\nsetTimeout()和setInterval()两个定时函数在鸿蒙中可以无缝对接使用。\r\ngif图中的倒计时使用setInterval()实现每1秒倒数一个数并改变省略号的个数，在倒数到0时清除定时器。为防止僵尸线程影响性能，切记调用clearTimeout()和clearInterval()清除掉定时器。\r\n倒计时部分，hml视图层：\r\n    \r\n        \r\n        \r\n            {{ loading }}\r\n        \r\n    \r\n    \r\n        {{ seconds }}\r\n    \r\n复制代码\r\ncss渲染层：\r\n.loading {\r\n    width: 100%;\r\n    height: 150px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\nprogress {\r\n    width: 120px;\r\n    height: 120px;\r\n}\r\n.loading>text {\r\n    font-size: 40px;\r\n    color: #666666;\r\n}\r\n.count {\r\n    position: fixed;\r\n    bottom: 385px;\r\n    left: 225px;\r\n    font-size: 60px;\r\n    color: #666666;\r\n}\r\n复制代码\r\njs逻辑层：\r\n    onShow() {\r\n    ......\r\n        // 设置倒计时\r\n        let iv = setInterval(() => {\r\n            let suffix;\r\n            switch (this.seconds % 3) {\r\n                case 2:\r\n                suffix = \"...\";\r\n                break;\r\n                case 1:\r\n                suffix = \"..\";\r\n                break;\r\n                default:\r\n                suffix = \".\";\r\n                break;\r\n            }\r\n            this.loading = \"数据加载中\" + suffix;\r\n            this.seconds--;\r\n            if (this.seconds == 0) {\r\n                clearInterval(iv);\r\n            }\r\n        }, 1000);\r\n    }\r\n复制代码\r\n页面会在动画播放完成后跳转到商城首页，使用setTimeout()设置定时跳转即可。这里在播放动画时预加载了首页需要的数据，作为页面参数跳转，可以加快商城页的展示速度，提升用户体验。\r\n    onInit() {\r\n        // 首页数据预加载\r\n        // 获取广告图片\r\n        fetch.fetch({\r\n            ......\r\n        });\r\n        // 获取推荐商品\r\n        fetch.fetch({\r\n            ......\r\n        });\r\n        // 获取一级分类\r\n        fetch.fetch({\r\n            ......\r\n        });\r\n    },\r\n    onShow() {\r\n        // 设置定时跳转\r\n        let to = setTimeout(() => {\r\n            router.replace({\r\n                uri: \"pages/index/index\",\r\n                params: {\r\n                    ad: this.ad,\r\n                    newGoods: this.newGoods,\r\n                    hotGoods: this.hotGoods,\r\n                    types: this.types\r\n                }\r\n            });\r\n            clearTimeout(to);\r\n        }, 6000);\r\n    ......\r\n    }\r\n复制代码\r\n4、微信小程序的动画效果\r\n最后写一写微信小程序的动画实现，在wxss中同样支持CSS3的动画属性：\r\n.happy {\r\n  font-size: 50rpx;\r\n  color: #e20a0b;\r\n  animation-name: an1;\r\n  animation-duration: 5s;\r\n  animation-delay: 500ms;\r\n  animation-iteration-count: infinite;\r\n  animation-direction: normal;\r\n  animation-fill-mode: forwards;\r\n  animation-timing-function: linear;\r\n}\r\n@keyframes an1 {\r\n  from {\r\n    transform: translateX(0px);\r\n    opacity: 0.5;\r\n  }\r\n  to {\r\n    transform: translateX(300px);\r\n    opacity: 1;\r\n  }\r\n}\r\n复制代码\r\n需注意的是animation-name属性IDE的提示是带有双引号的，需要去除，否则不起效果。\r\n\r\n微信小程序的动画JS实现方式和鸿蒙有很大不同，是通过微信提供的API定义并实现动画。接口提供了丰富的方法，可在开发者文档查阅。\r\nPage({\r\n\r\n  /**\r\n   * 页面的初始数据\r\n   */\r\n  data: {\r\n    an2: null\r\n  },\r\n\r\n  onShow: function () {\r\n    let an2 = wx.createAnimation({\r\n      delay: 500,\r\n      duration: 5000,\r\n      timingFunction: 'ease-in-out'\r\n    });\r\n    an2.translate(100, 300).step();\r\n    an2.rotate(90).opacity(0.1).step();\r\n    this.setData({\r\n      an2: an2.export()\r\n    })\r\n  },\r\n}\r\n复制代码\r\n动画基本属性作为createAnimation()方法的入参，动画关键帧由一连串的方法流式操作给出，以step()结束。这里一个动画的执行的时间是duration给定的时间。动画对象需使用export()导出到data中，并和页面元素的animation属性绑定。\r\n\r\n  新年快乐\r\n\r\n复制代码\r\n作者：HarmonyOS技术社区来源：掘金著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"}
{"title": "微信小程序：实现简单的拼券功能（uniCloud） ", "author": "Rolan", "pub_time": "2021-2-19 09:51", "content": "使用uniApp+uniCloud实现了一个简单的拼券功能，整个需求与京东的拼券和拼多多的砍一刀类似。\r\n分享方：\r\n\r\n分享优惠券信息，请好友帮忙助力（授权登录后可操作）\r\n若邀请人数不足，则提示还差多少人\r\n若邀请人数满足，则可使用该券\r\n\r\n助力方：\r\n\r\n点击好友发送的分享信息框进入小程序\r\n点击助力按钮，即可帮好友助力（助力即授权登录）\r\n若助力成功，则提示助力成功\r\n若好友已助力完毕，则提示助力已满\r\n\r\n数据库设计\r\n\r\nuser 用户表，存用户信息\r\ncoupons 优惠券表，存优惠券信息\r\nuser-coupons 用户的优惠券表，存用户与优惠券的对应关系（只要用户操作过该优惠券，如：领取、分享，则回插上一条数据）\r\n\r\n地址\r\n\r\n插件市场：ext.dcloud.net.cn/plugin?id=4…\r\n\r\n\r\ngithub：github.com/oyai32/oyyl…\r\n\r\n截图"}
{"title": "极客前端开发者劳卜精彩解读：通过微信小程序看前端利弊 ", "author": "admin", "pub_time": "2016-10-12 18:26", "content": "前言虽然内测名额十分稀少，但依赖中国广大开发者的破解和分享精神，在网络上很快出现了开发工具的破解版本和API文档。然而可能是微信的妥协或者早已预料，9月24日微信官方发布了不需要破解就可以使用的微信小程序开发者工具和文档，对于费劲心思破解完的开发者来说应该瞬间整个人都不好了。以下便是微信提供的开发工具和文档地址：https://mp.weixin.qq.com/debug/wxadoc/dev/?t=1474644087418作为一名具有极客精神的前端开发者，我也马上在这股热潮中试了下水，下载了小程序开发工具。下面是登陆后的界面：从整个结构布局来看这款IDE工具可以分为三个部分，首先左侧为导航操作区域，中间是目录或展示区域，右侧为调试区域（很像Chrome的调试工具）。下面我就以前端的角度分别从代码角度和宏观角度介绍下自己对于微信小程序的看法。代码角度纵观整个开发文档，微信小程序的前端技术主要可以分为“框架”、“组件”和“API接口”。1.框架微信提供了一套自己的用于开发小程序的前端框架，和目前主流的前端框架相比，其既有类似的地方，也有特殊的地方。特殊的地方在于其只能在微信小程序开发工具内使用，并做了相对严格的使用和配置限制，开发者必须按照其规定的用法来使用。一些外部的框架和插件在小程序里都是无法使用的，同时由于框架并非运行在浏览器中，所以 JavaScript 在 web 中一些能力都无法使用，如document，window等。而相似的地方在于其包含了和其他框架一样的“逻辑层”和“视图层”，以数据驱动为主，不操作DOM元素等。下面以代码为例子来介绍：（1）数据绑定<view> {{message}} // page.js\r\nPage({\r\n    data: {\r\n      message: 'Hello MINA!'\r\n    }\r\n})Page() 方法用来注册一个页面。接受一个 OBJECT 参数，其指定页面的初始数据、生命周期函数、事件处理函数等。这乍一看怎么和目前流行的Vue框架语法十分类似呢，Vue代码如下： {{message}} // page.js\r\nnew Vue({\r\n  data: {\r\n    message: 'Hello MINA!'\r\n  }\r\n})都是双括号插值语法，连数据初始化和双向绑定的格式都一样，好吧，就当纯属巧合吧。这里需要注意的是，微信小程序提供了WXML后缀的文件类型，其实就是类似XML的标签语言文件。（2）列表渲染 {{item}} // page.js\r\nPage({\r\n    data: {\r\n      array: [1, 2, 3, 4, 5]\r\n    }\r\n})这样的列表渲染语法相信学过Angular和Vue的同学都比较容易掌握，都是非常的类似，当然还有条件渲染等。（3）事件绑定 {{count}} Page({\r\n    data: {\r\n      count: 1\r\n    },\r\n    add: function(e) {\r\n        this.setData({\r\n            data: this.data.count + 1\r\n        })\r\n    }\r\n})如果你学过React，那么其里面有一个setState的方法可以用来改变状态的值，这里的setDate也是一样的，通过绑定的add方法来改变视图中count的值。（4）样式导入/** common.wxss **/\r\n.small-p {\r\n    padding:5px;\r\n}/** app.wxss **/@import \"common.wxss\";\r\n\r\n.middle-p {\r\n    padding:15px;\r\n}这里小程序提供了又一种新的文件后缀类型WXSS，用于描述WXML的组件样式，其与CSS文件相比还提供了像SASS和LESS这样的预编译语言的样式导入功能，同时还提供了rpx及rem的单位尺寸功能。（5）模块化// common.js\r\nfunction sayHello(name) {\r\n    console.log('Hello ' + name + '!')\r\n}\r\nmodule.exports = {\r\n    sayHello: sayHello\r\n}var common = require('common.js')\r\nPage({\r\n    helloMINA: function() {\r\n      common.sayHello('MINA')\r\n    }\r\n})微信小程序秉承了JS模块化的机制，熟悉Require.js或者Sea.js的同学应该很熟悉，这里通过module.exports暴露对象，通过require来获取对象。2.组件小程序的组件其实也是框架的一部分，主要负责UI的呈现，也自带了一些功能与微信风格的样式。基本上移动端常用的组件都包含在内，比如表单组件、导航组件、媒体组件等。下面便是小程序提供的八类组件：对于小程序的组件使用其实不是非常复杂，按照文档的使用示例便可以轻松搞定，详细地址：https://mp.weixin.qq.com/debug/wxadoc/dev/component/?t=14746440856983.API接口相比微信公众号的开发，微信小程序向开发者提供了更多的API接口，可以方便的调起微信提供的能力，比如监听重力感应和罗盘数据、WebSocket连接、支付功能等。下面以一个发起网络请求的API为例：wx.request({\r\n    url: 'test.php',\r\n    data: {\r\n        name: 'luozh' ,\r\n        age: 18\r\n    },\r\n    header: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    success: function(res) {\r\n        console.log(\"请求成功\")\r\n    },\r\n    fail: function() {\r\n        console.log(\"请求失败\")\r\n    }\r\n})wx.request发起的是https请求。一个微信小程序，同时只能有5个网络请求连接。关于更多API接口的介绍请查阅官方文档。以上便是关于微信小程序前端代码部分的简单介绍，相信有一点前端框架使用经验的同学上手都是相对容易的，下面将从宏观角度讲解下我个人认为微信小程序给前端领域的带来影响。宏观角度微信小程序一出来的时候，网上关于其对于前端界的影响层出不穷，更多的文章和评论认为前端又要火了，前端的第二春来了，Javascript和HTML5的新时代来了等。当然微信小程序的出现确实会给前端带来一定的推波助澜的效果，但是任何一件事物的诞生都是利弊并存的，微信小程序也不例外。以下便简单阐述下我个人的看法：1.利（1）提高开发兼容性：微信小程序可以说是重新定义了APP，使得一款应用能够在android、iphone及windows phone中都能运行，对于前端来说实现了“一次编译，到处运行”的理念。（2）推动前端技术的发展：微信小程序以其简单的开发环境，使以Javascript和HTML5为主的前端技术在庞大的微信社交群体内传播，越来越多的人开始接触前端，参与到前端编码和设计中来，为前端技术贡献力量。（3）其他...2.弊（1）增加前端工作量及学习成本：原本一名前端工程师负责的平台就很广泛，包括PC端、移动端、APP应用等，微信小程序的出现会要求前端涉及微信应用的开发，一定程度增加了学习和工作成本。同时企业也会增加这方面的开发和投入成本。（2）前端竞争日趋明显：微信小程序的诞生可能又会吸引一批后台、APP开发等其他领域的人员转向前端开发，而这些本来就具备较强逻辑思维或者较强感性思维的人将挤掉那些处于前端边缘的新手，可能使得大部分低水平前端开发者面临失业或者找不到工作的危险。（3）其他...这里大概介绍了几点微信小程序给前端带来的影响，更多的大家可以补充。总结本文从代码角度和宏观角度简单阐述了微信小程序在前端领域的一些内容和影响，希望能够帮助那些不了解微信小程序的开发者很快入门并认识这一新的技术领域。至于小程序对于前端的影响，反过来我们也可以这样认为：技术的发展不是基于一个平台去改变，而是通过技术去驱动一个平台改变，正是因为前端的发展才催生了“小程序”的这种可能性…"}
{"title": "Cool社区站长经验之谈：微信小程序学习路线 ", "author": "admin", "pub_time": "2016-10-12 18:43", "content": "一、入门其实非常简单，在http://www.hubwiz.com/course/54ee8d2de564e519b8f8dad3/将这个JavaScript基础课程学完即可，大概花费一到两天时间，交互式学习，非常容易理解。二、然后开始阅读微信官方文档：https://mp.weixin.qq.com/debug/wxadoc/dev/index.html大概一个多星期基本上开发微信小程序没有太大的问题了。 （这里需要注意的一个问题是，如果你的小程序涉及到后端开发，那么前面的知识不足让你开发应用的，学习后端知识太耗费时间了，不如找个合作伙伴一起做，如果非要学习后端开发，那么我建议学习nodejs，nodejs是后端开发学习成本最小的，nodejs学习路线我就不写了，网上很多，如果想快速做微信小程序，最好别先学后端开发。） 阅读流程如下：1、下载工具并安装https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html?t=14746440893592、学习工具使用https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/devtools.html?t=14746440896043、根据简易教程步骤来做https://mp.weixin.qq.com/debug/wxadoc/dev/?t=14746440829124、体验demohttps://mp.weixin.qq.com/debug/wxadoc/dev/demo.html?t=14746440831325、学习框架原理https://mp.weixin.qq.com/debug/wxadoc/dev/framework/MINA.html?t=14746440829126、学习界面组件https://mp.weixin.qq.com/debug/wxadoc/dev/component/?t=14746440912867、学习API使用https://mp.weixin.qq.com/debug/wxadoc/dev/api/?t=1474644087418 OK，动手自己做项目。 注意，要看微信小程序设计指南喔  ：https://mp.weixin.qq.com/debug/wxadoc/design/index.html"}
{"title": "试用小程序产品能力内测启动 ", "author": "Rolan", "pub_time": "2020-12-31 11:02", "content": "试用小程序是什么                                                                 试用小程序是微信官方为了商家可快速体验小程序，便于进行完整真实试用以辅助决策而推出的有效期只有14天的体验版小程序。第三方开发者可通过该接口提供快速注册试用小程序的能力，商家只需填写小程序名称、头像并进行实名授权即可创建试用小程序，总共耗时约在1分钟。体验后完成认证流程，即可转为正式小程序。﻿试用小程序与普通小程序的对比更低门槛体验小程序，所见即所得，快速体验 更高效率转正，充分决策再提交材料，不作无用功 试用小程序内测报名申请指引欢迎符合条件的第三方平台开发者申请内测，与微信官方携手一起为商家和企业提供更低门槛的小程序体验路径。申请条件如下：1.已注册微信第三方平台；2.具备开发能力，以服务商的身份为商家提供小程序代开发服务；3.活跃小程序案例不少于5个（活跃定义：过去30天内DAU＞100的天数不少于1天）；文章转载自：微信开发社区  作者：微信团队"}
{"title": "定级P7，分享四面阿里面经，我想你一定也需要（附答案） ", "author": "Rolan", "pub_time": "2020-5-20 00:02", "content": "17 年从上家公司离职之后就尝试过去阿里面试，结果还没进入状态就被凉凉了，在扇贝呆了 2 年多的时间，赶上正好租的房子要到期了，就想着再次尝试一下吧，结果还蛮顺利的拿到了 p6 的 offer，趁着目前在家里呆着哪里也不让去的功夫整理一下面试的过程，希望能帮到大家~一面自我介绍此处就省略了，一般自我介绍的时间感觉不宜过长，简单说下就好~从浅到深咨询一个项目因为我在目前公司涉及小程序比较早，并且那个时候还没有比较成熟的线上监控方案，所以我们自己搞了一个线上错误监控系统，然后我就拿这个项目来说了，面试官会仔细的从设计思路，运行原理等等方面开始问，一直问到后端数据慢查询怎么解决，这个问题的时间大概占了面试时间的一半还多，然后得到的经验就是大家一定要自己实际去设计和实现一些项目，不能停留在眼高手低只看不落实的层面，如果这个项目不是我带头发起和亲身实现了里面的一些流程可能很容易就卡壳了，在做的过程中遇到的问题都是很宝贵的经验，当然也是成长的一部分~简单介绍前端模块化，amd，cmd，commonjs es6 的 module很尴尬，因为我们目前公司都是直接用esm，再加上自己确实没在前端项目中用过amd 和 cmd项目的类库，然后再加上异常的紧张(一面的时候紧张到说话都喘气，哈哈)，然后只聊到一个是同步加载，一个是异步加载，没说出来一个是前置依赖，一个是就近依赖，面试官也很耐斯，听到我有点紧张也没继续问了，说了一句安慰我的话-现在已经不怎么用了~，哈哈哈commonjs 和 es6 的 module 哪个支持异步紧接着问了这个问题，emmm.. 当时差点没缓过来，冷静分析了一波，然后想到我们最近的项目中在做react组件第一步加载，想到了 es10 版本添加了异步 import() 方式去载入一个模块，所以答案毫无疑问是 esm 目前支持异步，其实返回来想想，如果用排除法这个也很简单，因为 commonjs 规范主要是给 node 层用的，node 层对于 module 的加载无非就是文件的读写，所以它根本没有必要去支持异步加载，读写 io 本身就很快~async await 和 promise 的关系这个问题是当初我第一次面试阿里的时候回答的不好的一个问题，所以面试官专门提出来问了我一下，当然现在看这个问题就比较简单了，async await 是 promise 和 generator 函数组合的一个语法糖，这个没啥好说的~口述代码，实现 promise.all 的 polyfill可能还是担心我这块不是很熟悉，所以又问了一个相关的问题，这个比较简单，我直接写代码，当时是口述的，思路是一样的；Promise.myAll = function(...args){ const result = []; let isFail = false; let errInfo; let j = args.length; for (let i = 0; i < args.length; i++){ // 如果有错误就停止循环 if(isFail) { return Promise.reject(errInfo); }; // 挨个运行promise args[i].then(res => { // 处理结果 result.push(res); j--; if(j === 0){ return Promise.resolve(result); } }).catch(err => { // 设置停止循环的标志，存储错误信息 isFail = true; errInfo = err; }) } } // 以上都是未经运行未经测试的伪代码，可能有问题，大致思路就这样~flex 布局，固定高度，左边定宽，右边自适应？这个比较简单，flex 布局给父元素设置 display:flex，左边的子元素 flex:none，给个 width:100px，右边的子元素 flex:1 就可以了，当然可能有别的方式，这个应该是最简单的~如果子元素不能 100% 继承高度，怎么实现撑满？这个问题我当时没反应过来面试官的意思，我问了一下是不是要纵轴方向的 flex 布局？后来面试官说 嗯。。也可以，这个过了。我就愣了，回来之后想了一下，不知道是不是说如果子元素无法 100% 的继承高度，那是不是可以结合定位的方式，比如父元素 relative，子元素 absolute，然后四个位置都是 0？不知道是不是这个意思~无法考究了~对 ts 的理解ts 用的不是很多，因为我们的项目大部分都是基于 h5 的，首先逻辑不是很复杂，因为每个 part 最多就三四个页面而且跟别的 part 基本没关系，业务决定并不是很适合 ts，所以也没在团队中怎么推广，但是有在后台项目，就是管理端用了 ts，所以简单说了一下 ts 和 js 的优缺点~ts 的泛型是什么作用一下没反应过来怎么回答，因为本身 ts 用的不多，泛型用的更不多，但是后来我想了一下 java 中的泛型，再加上面试官的提示，我给的答案是泛型决定了一个类型在不同的场景下能够在每个场景下从始至终的保持类型一致，有点拗口，但是应该就是这么个意思~假如监控系统别的组需要用，并且没满足他们的需求，你会怎么处理瞬间没反应过来面试官想问啥，因此说了一大堆，比如说要看自己的团队是否有时间，要看这个需求是否合理，要看这个需求是一个定制化的需求还是一个比较通用的需求，等等各种情况下怎么处理都给了自己的方案，然后面试官打断我说我问的不是这个意思，是问你是你来做还是别的组来做？我说还是得分情况看事情和时间的安排，然后就过去了~基本到这里一面就结束了，emmm，刚挂了电话，正好面试的部门有一个之前从扇贝离职去了的同事，面的还是很巧的同一个部门，大哥就跟我说恭喜一面过了。。哈哈，2 面开始就没那么紧张了二面隔了好像就两天 2 面就来了，2 面因为是晚上 8 点多才开始的，所以面试官本来说准备聊半个小时，结果还是聊多了设计一个通过拖拽，然后交换位置的组件，给思路就可以。emmm，网上有很多，大体就是关于拖拽的一些 api，然后怎么携带数据这些，我就不展开了~假如有 2 个团队，一个团队想用另一个团队的一个类库，并且还是想在用到的时候才加进来，怎么办？emmm。。我先说答案，是用 webpack 中的 externals 去配置一个 cmd 第一步引入，这个是面试官的答案，但是我印象面试官开始的时候没提到说要用 webpack，我一直在想的就是怎么异步加依赖，我就说可以让他们发布到自己的私服 npm 上，然后另一个团队安装，用的时候用 import 做异步加载。。balabala 说了半天，直到最后面试官来了一句你知道 webpack 的 externals 吗？我才反应过来~emmmm，好吧~设计一个组件你会考虑哪些问题？不得不说这个是个好问题，组件天天写，但是确实没好好整理过，当时问完我的时候，我是有点懵逼的，我在想就是看需要啥样子的就怎么样的设计呗，主要就是考虑一下扩展性，其实这个我每次开发的时候都会注意到，但是一下子竟然不知道怎么说了，balabala 讲了一堆，看需求分析啊，确定输入输出啊，考虑扩展性啊，别人怎么用啊之类的，其实我觉得面试官想问的可能是如何设计一个通用的组件，可以参考这个回到一个我简历上的项目，这个项目的核心是让运营和产品能够自己替换线上活动页或者落地页的图片资源和文案一类的内容，同时还有定点替换的功能，这个面试的时候还没完全实现，不过现在已经上线了一个简单版本了，用着还可以，等待后续再迭代，这个项目问了一下简单的思路，我还准备描述我们在 node 做的缓存，结果面试官说我了解了，emmm，可能太晚了吧，哈哈二面就结束了，完了看下时间，超了半小时，主要卡在第 2 个题目上，从始至终都没去向 webpack，这个确实还是自己的思路一下被限制的太死了，再加上我们通过 webpack 的 externals 去做的配置很少，基本就是简单的 jquery 这样引入过，后来为了方便都直接走 npm 装依赖了，其实还是要看场景，有时候偷懒确实是问题~~三面隔了三天左右，三面的通知就下来了，三面是 p8 的大佬，从头到尾都没问基础知识相关的内容；自我介绍省略。。主要做的是哪些业务？简单聊了一下在公司做的业务。。。为什么感觉你们的产品会比别人家的业务要好？这个问题涉及到一些产品的核心业务的卖点，没多说，讲了一点点。。看你在带一个项目，你一般都是怎么协调资源的？讲了一大堆。。后面的几个问题不记得了，基本上都是和业务相关的，还有和产品、运营如何沟通协作等等的问题。。三面基本都是涉及到业务相关的，总结下来就是我觉得越到后面面试反而更注重业务多一些了，这些东西不是临时抱佛脚能 get 到的东西，如果你对所做的事情不做更多的理解，对业务不做一定的思考，可能在这个环节会凉凉，我之前也一直有说我们每个开发都要做一个有灵魂的开发，不要把自己真的就只定义为码农机器，我们要加入自己的思考，比如，对接到的需求要有自己的理解，怎么样帮助需求方更完美的去实现需求，哪些该做的没有，哪些需求是伪需求不合理，都应该是每个人要学会和掌握的，至少在熟悉的环节要理解透彻~四面大概也是三天左右，四面的通知也下来了，是一个 p9 的大佬，比我想象的要老一点哈哈，所以小伙伴们不用担心我们吃的是青春饭，加油奋斗吧~什么是 h5?是 html 历史上的一个版本，也是一个协议，规定 html5 支持哪些、不支持哪些特性；举几个 h5 的新特性很多，比如媒体啊，storage 相关的等等我看你做过小程序，你觉得小程序，webview 和 h5 的关系？开始有点懵，我在想这应该是完全不同的东西吧，后来简单说了一下小程序，webview 属于是容器一类，它们可以用来承载 html 的内容，但是小程序的又不同于标准的 webview，它承载的是自己独有类 html 语法等等。。。4.你们的业务主要用的是哪些方式？native + webview 还有小程序，浏览器端只有后台项目，不是很多后面的问题都不记得了，反而感觉四面的问题比较简单，时间也不久，就二十来分钟，可能是因为晚上快下班了吧~总结三面和四面都是视频面的，我都是提前十分钟就在线等了，说话的时候面试官都能看到你的一言一行，还是注意点，把周围的环境也弄整齐一些，给面试官留个好印象~经历了大概 2 周的时间，顺利面完，最后的 hr 是现场面的，也问了很多个人相关的问题，hr 面的内容还蛮多的，并且 hr 面会涉及到一些技术相关，当然不是基础内容~好了，面试至此结束，不知道大家看到我所经历的这些面试题有没有什么感触，或者有一个目标清楚下面该怎么准备，而当你明确了自己的目标之后，接下来就是认真努力的去奋斗了，关注公众号：Java架构师联盟，每日更新技术好文"}
{"title": "小程序成微信带动就业核心引擎，2019年带动就业岗位达536万个 ... ", "author": "Rolan", "pub_time": "2020-5-15 00:01", "content": "[ 摘要 ]2019年微信带动就业机会2963万个，其中直接带动就业机会达2601万个，同比增长16%，2014年以来年均增长22%，间接带动就业机会362万个。腾讯科技讯 今天，腾讯微信与中国信通院共同发布了《2019-2020微信就业影响力报告》。报告显示，由公众号、小程序、微信支付、企业微信等共同构成的微信生态，具有连接超过12亿微信用户的天然优势，通过创造新型就业岗位、提高劳动者数字技能、促进人才供需精准对接，为国家稳就业提供了重要支撑。2019年微信带动就业机会2963万个，其中直接带动就业机会达2601万个，同比增长16%。2020年以来，面对新冠肺炎疫情的冲击，微信作为新生产工具，以丰富、完善的生态能力和数字化工具在稳企业、稳就业上发挥了积极作用。全民数字化就业时代来临，小程序日活超4亿成带动就业“最强动力”微信作为数字化经济的代表，随着其生态的蓬勃发展，推动了经济的快速发展，并创造和稳定了大量就业，据测算，2019年微信带动就业机会2963万个，其中直接带动就业机会达2601万个，同比增长16%，2014年以来年均增长22%，间接带动就业机会362万个。微信就业生态总体呈现出三个新趋势：就业生态从数字化岗位向岗位数字化转变——微信生态不仅催生了专门负责微信公众平台、小程序、企业微信、微信支付的服务运营、开发、设计和维护等新型行业岗位，同时也不断促进传统行业线上线下的融合，增添了大量数字化运营岗位，推动了各行业从“数字化岗位”到“岗位数字化”的转变，全民数字化就业时代已然来临。从稳定的雇佣关系向按需结合、灵活发散的就业方式逐步普及——微信小程序、公众号让劳动者能快速对接供需，微信支付让人们能够便捷的获取劳动报酬，促进了微信就业从“公司+雇员”的雇佣形式转移到“平台+自由职业者”的按需结合形式。此外，灵活的就业模式、丰富的就业渠道、较低的从业门槛也是微信平台就业的特点，微信在求职端为务工人员提供多样的工作选择，增加就业机会。微信作为新生产工具将成为数字化就业的标配——随着微信全平台生态能力的开放，微信小程序、微信支付、企业微信等也将继续深耕产业转型互联的核心需求，为行业用户及合作伙伴提供更有价值的微信产品“工具箱”。其中，小程序更是成为微信带动就业的核心引擎，2019年，小程序日常活跃账户数超过4亿，加速渗透生活场景，更直接带动就业机会536万个，相比2018年增长195%。微信生态打出“组合拳”，助力疫情期间“稳就业”2020年以来，新冠疫情的爆发对经济发展带来了巨大冲击，而数字经济是恢复经济运行常态、保障就业稳定的重要手段。在此次疫情中，微信生态的数字化能力为抗击疫情、稳定就业提供了强有力的支持。在疫情初期，企业微信就免费开放远程协作办公服务，推出了健康报备、内容协作、文件共享等新功能，优化企业复工后的数字化办公环境。据测算，69.3%的生态主体表示六成以上岗位可通过微信、企业微信远程办公。餐饮、服务、物业等行业的头部企业也借助企业微信和微信互通实现对外高效服务，线上营收得到大幅增长。餐饮企业西贝通过企业微信，1月份在线上添加了3万多名客户，全国每天200多家门店客户经理连接着9万多名顾客，并提供线上送餐和食材订购，线上营收占到了总营收的80%以上；知名服装品牌歌莉娅利用企业微信和顾客进行连接等措施，进行线上销售。10天内，每天的GMV都超过120万，最高一天将近300万。疫情期间，线上业务的爆发性增长，也让开发、运营需求，小程序直播带货、远程导购、公众号内容编辑、小程序开发运营等岗位需求大幅增加。据测算，11.1%的小程序开发者，14.5%的微信服务商在疫情期间增加了工作岗位，岗位总数增加59.7万个，有效地带动就业增量。中国就业培训技术指导中心5月11日发布《关于对拟发布新职业信息进行公示的公告》，拟新增10个新职业，包括区块链工程技术人员、社区网格员、互联网营销师、信息安全测试员、区块链应用操作员、核酸检测员、在线学习服务师、社群健康助理员、老年健康评估师、增材制造（3D打印）设备操作员。其中，在“互联网营销师”职业下增设“直播销售员”工种。在疫情期间，各地纷纷借助小程序轻量、便捷的特点，为广大求职人员和复工企业“牵线搭桥”。 西安航空基地与腾讯云联手打造了WE智造小程序，短短4天时间，帮助西安航空基地辖区60多家企业解决160多个复工过程中的棘手问题。在全国范围内，WE智造微信小程序已经被11个地区的企业用来开工复工，覆盖的员工数量超50万。微信生态还在求职端为务工人员提供多样的工作选择，增加就业机会，截至2020年4月，微信平台上就业、招聘相关的小程序有15430个，日活跃用户150万。其中2019年新增3710个，增幅达到34%。微信不断催生新职业、新工种，高效带动线下及重点人群就业微信通过多年来的生态建设，让就业门槛不断降低，整体就业生态呈现出年轻化、产业链条延长、线上价值带动线下就业等特点，并打破时空限制、解放体力劳动，促进了应届大学生、退役军人、农民工、家庭主妇、残障人士等重点群体的就业，同时加快了数字化就业岗位在三四线城市的普及。数据显示，微信就业人群中，年轻人、大学本科生是主力。55.8%的生态主体超过一半员工年龄在16-29岁之间。从学历分布看，55.0%的生态主体超过一半员工是普通本科学历。2018年，华南师范大学化学专业的研究生孔源丰独立开发了一款小程序——Lab管家，为广大科研人提供一个透明的实验室仪器信息平台，提高实验室仪器预约管理效率。上线6个多月，Lab管家小程序便获得4000多个高校用户，大大超出孔源丰的预期。微信就业门槛的不断降低，让以退伍军人、农民工、家庭妇女、残障人士等为代表的重点人群，也能通过快速学习掌握数字化技能，投身新经济领域。此外，以智力劳动为主的微信就业生态也催生了一批优秀的女性创业者，生态内女性就业比例达到47.5%。陕西镇坪县推出“协会+微信平台+残疾人”模式，利用微信带动35名重度残疾人累计发送便民、服务、广告及商业等信息20余万条，累计收入60余万元，月人均收入达3000余元，帮助残疾人增收脱贫。服务商作为微信生态的重要一环，也是新型岗位的“孵化器”，通过为用户等提供开发、运营、设计等多种服务，延长产业链，带动更多就业机会。微信也不断通过推出各类针对服务商的扶持计划，帮助服务商更好成长。据调查显示，2019年微信生态内小程序服务商、企业微信服务商、微信支付服务商总共带动就业292万人。服务全国70万家线下商户的武汉利楚扫呗，疫情期间累计为4000多家商户上线小程序。其中一家做生鲜超市通过利楚扫呗接入了到家小程序，上线后日均交易额达到了3万，比之前高出40%。此外，线上线下融合运营的智慧零售模式也为零售行业注入了全新活力，而小程序则成为商家落地并推进智慧零售的重要手段，带动了大量线下交易环节。随着新就业形态的不断涌现，就业方式也在向更灵活的方向发展。2019年微信带动的直接就业机会中有1519万个是兼职就业，占总直接就业机会近6成。来自广东的吴武泽通过自己的绘画知识，创造了一系列表情包，目前已上架了40套表情包，最热门的一套已经被下载了1.27亿次，发送量超过70亿。随着微信数字化工具的持续开放，微信生态中大量岗位可通过线上办公等形式分布在全国各地，有效带动各地就业，实现就业生态快速下沉。2019年，微信公众平台就业岗位在中西部和东北省份比例达到43.6%，小程序则为29.8%。来自河南南乐县的申志刚通过其创建的“依禾拼购”小程序，解决了古寺郎村胡萝卜“怎样卖出去”的难题。2019年11月9日，古寺郎胡萝卜首次在微信小程序后台上线，仅1分39秒，100份古寺郎胡萝卜售罄，上线三天内，累计销售额超过了20万元。随着产业互联网的发展被按下快进键，微信生态内数字化能力的开放也必将提速。以公众号、小程序、微信支付、企业微信为核心的各项新生产工具的应用也将更加普及，同时也将给数字经济注入更强劲的发展势能。"}
{"title": "直播的未来会在小程序吗？ ", "author": "Rolan", "pub_time": "2020-5-15 00:11", "content": "图片来源@视觉中国文丨时趣企业CEO直播带货颇为吸金，董小姐从成交额20万到3亿打了一个漂亮的翻身仗，携程CEO梁建章直播七场，带货总额也突破了2亿。两者除了同样为CEO直播带货外，还值得注意的就是，董小姐两次直播分别在抖音、快手，携程则是选择了抖音、快手、小程序等平台。越来越多不同类型的品牌愿意试水直播营销，甚至会开始尝试不同的直播平台，做品牌直播矩阵。像抖音、快手都是现在大众耳熟能详的直播平台了，是品牌直播会优先考虑试水的平台。反观，微信小程序直播还处于公测阶段，直播流量和直播热度还是相对弱一些。与此同时，对于品牌而言，小程序直播还是存在许多“门槛”的。目前只有拥有自身小程序商城的品牌获得了直播邀请，才能直播；小程序直播间需要从后台进行组建开发，虽然官方称比较简单，但还是需要具备基础的技术能力；另外，小程序直播目前相对“简陋”，仅有评论、点赞和转发，且只开放了18个品类。不过，早先试水小程序直播的品牌们取得了不错的成绩，比如完美日记在2月份的小程序直播中，其场均观看人数环比增长3-10倍；茵曼微店在2月21日的首场直播中，即有超过100万人观看，收获了26万人点赞，直播评论超11万条,以及近期携程直播也有超过百万人观看。而且，结合腾讯刚发布的2020年Q1财报，微信及WeChat的合并月活跃帐户数达 12.025亿 ，小程序日活账户数超过 4亿 。不难看出，小程序还是具备一定的用户流量基础的。作为微信生态下的小程序直播，是否会占据后发优势，未来是否是直播的下一个红利风口，也未可知。通过体验对比各大直播平台，时有趣发现，小程序直播和其他直播平台存在以下几点不同：流量来源不同像在头部直播平台展开的直播，如果是网红主播的直播，用户可以通过直播结束后预告、微博或者直播平台的广告推流等获取直播动态信息；品牌自身直播的话，基本是以品牌自有发声渠道为主，比如微博、微信、抖音账号等。而小程序直播的动态信息，会相对窄众，目前 只有定向关注品牌的，比如公众号推文内链、社群、朋友圈或是主动搜索行为的，才会收到品牌小程序直播的信息。值得一提的是，小程序直播具有开播提醒功能，用户可以预约观看。直播开始时，系统会直接在微信对话框中提醒预约过观看的用户，让用户能够“循路”返回直播间，相对于其他平台，很大程度上降低了用户流失率。直播策略不同或许由于小程序本身是依附于微信的环境下，其流量来源更多是品牌自身流量，主动关注品牌的消费者为主，所以小程序直播的直播带货属性较弱，对于品牌营销的帮助更多体现在三个层次：一是复用品牌官微和社群等用户流量。以直播、视频的方式，帮助品牌激活唤醒粉丝关注，来吸引、触发用户对品牌产生行为，比如进入品牌直播间，观看新品展示等；二是存量用户运营，维护和运营粉丝。品牌在小程序直播间也会以优惠券、限时福利等形式刺激用户，其实也是一种日常和消费者之间的互动沟通，是社群运营的一种直播玩法；三是基于微信的社交属性，进行直播裂变，吸引更多品牌粉丝，换取更高的曝光。但主要还是以一二为主。所以小程序直播对于主播依赖的程度不高，大多是为品牌而来的。转化目的不同小程序直播是品牌搭建私域流量池的一个天然阵地，所以小程序直播不同于其他直播平台以销量转化为目的，品牌更多的是希望沉淀消费者，成为品牌的私域流量。小程序直播如果全面开放后，品牌可以在微信这个公域流量池，导流到自己私域流量池，并且依靠微信强大的生态链， 从微信公众号推文、小程序再到朋友圈、社群，最后是投放的其他微信广告，比如大V公众号植入软文、朋友圈广告、公众号底部广告等，再到直播间， 品牌可以了解到真实的流量导入，再将直播间来的流量引流到品牌社群，直接为品牌直播导流，形成自身流量闭环。随着越来越多的消费者和品牌涌入到直播这个营销阵地，直播行业经过快速发展的几个月，已经度过了早期缺流量和关注度的时点。时有趣认为，接下来直播将会面临三个重要的挑战：一是流量的争夺，流量很大程度上可以决定直播的GMV。直播前的预热导流将会铺的更广，尤其是大型直播活动，将会渗透到各种场景中，比如植入到综艺或做线下推广等，当然现在也是一个互相导流的现象，直播推广节目，节目或许也会反哺直播；其次，是内容。流量争夺是靠什么，除了主播粉丝力固有的流量池，还需要靠内容，而支持内容的却包含多个因素。一是内容设计，这个需要专业团队来支撑，未来直播甚至会像栏目制作一样非常精细，从埋梗、情绪点、直播高潮到收尾等，环环相扣，带动消费者进入到提前设计好的直播场景中，以此留住消费者，消费者甚至成为直播的“忠实观众”，准时守候，就像以前电视机时代，大家都等着电视剧播出；二是主播个人能力，控场和主播语言风格以及和消费者之间的互动、主播和消费者之间的关系。直播已经不再是单纯的直播带货属性，直播的营销角色也在逐渐延伸，比如直播带品牌、消费者运营和管理等。流量争夺后就是如何留住受众，内容是留住受众的第一粘着点，所以会发现有的直播已经愈发节目化，具备综艺感，以内容来吸引消费者，沉淀消费者；最后是转化，除了效果转化，还需要关注的是品牌转化，就是消费者是否通过直播转化为品牌的忠诚粉丝，从而会追品牌。无论品牌用哪一种营销方式、渠道，品牌营销的目的除了带货以外，终极目的肯定都是希望成就品牌。而小程序直播具备先天流量优势和私域流量转化优势，如果再结合优质的直播内容，或许将成为直播的下一个风口，满足品牌长线的规划，从追逐流量走向运营私域流量。不过，最终能不能实现这个过程，或者这个私域流量过程要用多久，还得看微信的速度了。"}
{"title": "多案例解析小程序的全场景跨端运营 ", "author": "Rolan", "pub_time": "2020-5-13 00:01", "content": "本文根据友盟+资深数据分析师、数据传承官@相峥，友盟+产品专家@范芊芸在起点学院公开课的分享整理而成，直播回放链接： http://996.pm/7dRLE ；添加小助手哒哒微信：da22133，可领取学习资料。友盟+资深数据分析师、数据传承官@相峥，友盟+产品专家@范芊芸演讲实录，由人人都是产品经理团队依据嘉宾分享内容整理，编辑有修改：大家好，我是友盟+的相峥，很高兴能来到起点学院直播间做这次的分享。我今天给大家带来的分享主题《小程序跨端运营全效洞察》。本次分享我会给大家介绍前半部分，后半部分是由我们负责小程序的一位产品专家来给大家继续分享。小程序爆发式的增长今年的疫情让整个Q1变得很魔幻，大家各自的工作业务上可能也面临了不同的机遇和挑战。这期间，我们也见证了小程序爆发式的增长。从去年12月到今年2月，小程序的活跃用户数增长了37%，小程序的数量也增长了19%。最新一份来自阿拉丁的微信小程序公布榜单中，月度top100小程序有53%的替换率，说明上榜的名单里有一半都和上个月不一样，而以往这个比例只有20%左右。这些数字变化的背后，我们能看到疫情对于不同行业产生的影响是不一样的。对于一些新兴的互联网风口行业，像大健康、工具，在线教育、政务类这些小程序都有一个爆发式的增长；另一部分是传统行业，像餐饮、线下零售、生活服务这些属于被疫情倒逼拥抱新技术，希望用小程序的方式连接新的消费者、维系老用户。我举三个例子让大家感受下传统品牌是怎样借助小程序转型成功的。传统行业借助小程序转型的三个案例案例1：家乐福家乐福在疫情期间通过小程序上线到家服务，在线上把握住了小程序这个入口，线下联动社区，上线一周环比增长356%。并通过门店数字化改造以及与苏宁生态的加速融合，不断触达更广泛的人群，让家乐福“社区生活服务中心”的定位更加深入人心。案例2：眉州东坡眉州东坡本来是在店门口销售囤积食材的平价菜站，结果催生了上线卖囤积菜小程序的想法。小程序相比app轻量很多并且能快速开发上线，所以他们就立马通过公众号推送、内部员工转发，朋友圈转发等各种手段推广小程序，现在每天销售新鲜蔬菜超过10万元。案例3：君太百货他通过小程序直播，用图文的方式种草，再用图文里面链接的小程序到商城里面割草，发动百货的员工、导购在朋友圈做私域的推广。百货原本只是线下用来连接人和货的场子，但现在挪到线上用小程序的方式也可以很好地连接人和货，并促进商场内租户品牌的曝光和转化。我们能感觉到各行各业都已经开始涌向小程序赛道，小程序的商业化竞争也会变得越来越激烈， 你的小程序该怎么面对这种竞争呢？在我看来，可以通过以下这三个点好好把握。第一点是结合业务特点来确定小程序的定位和运营方式。小程序玩法很多，但那些都是手段，不是目的。你要看清楚自己的业务情况，小程序可以怎样为自身业务所用，而不是被小程序的玩法牵着鼻子走。第二点是结合各巨头生态特点和扶持计划，根据特点多生态布局。大家都知道微信小程序的第一宿主，但它绝对不是唯一的宿主，有流量的地方就有小程序，所以现在阿里、百度、字节跳动等各巨头的生态也都在大力发展小程序、扶持开发者。如果你没有经历过微信小程序刚开始爆发的那波红利，那现在也不要错过即将到来的其他平台的红利。第三点是做好全域运营，包括私域和公域的运营。app、小程序、小程序矩阵、微博、公众号这些都属于私域的各个端口，想要做好私域的运营，其中私域之间数据的流动和沉淀打通很重要。现在市面上有些过分强调私域运营，会让大家容易忽略公域，但想要做好全域运营，还需要发挥私域和公域的联动作用。下面我就围绕着这三点继续展开分享。一、小程序业务场景的归纳首先是小程序业务场景的定位，我从两个维度拆分了小程序的业务场景。1. 小程序业务场景的2个划分维度第一个是involvements（参与度），根据业务场景是满足用户比较重的需求还是轻的需求来划分。轻的需求是用户不用过多思考就可以完成的动作，比如打卡或扫码；重的需求是决策路径相对长一些的动作，比如买车买房。这是图中纵轴所代表的含义。如果你的业务偏向满足用户的轻度需求，那你的业务就非常契合小程序的轻量化特点，你可以在各个平台上用小程序来开采流量。如果你的业务偏向满足用户的重度需求，那你不能希望小程序帮助你直接实现最终的转化。小程序承担的作用是，在整个比较长的决策链路当中推进其中某些环节的转化。举个例子，如下图，对于电商而言，完整消费者决策链路可以划分成AIPL四大阶段。淘宝直播最近为什么这么火呢？因为它以一种沉浸式、更直观的方式，把你直接带到了购买之前的最后一步，你可能在直播现场一激动就直接下单，极大地缩短了你要从注意到产生兴趣到购买这样的链路。同理，我们在小程序上也有非常多的方式帮助你缩短用户的决策路径，现在很多平台也都有非常多这种能力的开放。以微信举例，虽然微信比较封闭，不太能把小程序和微信分享到外面，但他在微信内部之间以及外部app的分享是非常方便的。这种方式就便于大家在社群里面做小程序的曝光和裂变引导，引导并缩短从注意到产生兴趣到购买的一系列环节。微信本来是以公众号图文营销为主，变现时需要链接到电商平台转化。但现在小程序都可以被挂载在文章下面，这极大的推动了从内容种草到内容的直接转化。另外，与大宗消费品类相比，快消品或者是客单价低一点的品类更容易促进转化，这一类小程序可以更多地加入一些促销活动，像我们常见的拼团秒杀抽奖积分等。第二个维度是根据需求是高频还是低频的来划分。对于低频小众的需求，开发推广app有点不划算，小程序的诞生就很好地帮助了开发者解决这样的问题，可以用小程序替代app满足一些低频需求的场景。对于高频的需求，企业会有更强的动力开发独立的app。这时我们不能认为小程序是抢app的流量、参与度、留存裂变等，更多的是让小程序发挥长处，让小程序来裂变导流，并在微信生态内帮助搭建一个完整的商业模式，这种方式可以很好地与app产生互补。后面我会列举具体案例。2. 小程序业务场景分类“四象限”根据刚才提到的两个维度，我们把它交叉起来形成了四象限。左上角是重度低频需求，其实是业务加小程序的组合，业务还是你的核心，小程序是帮助你在业务的触点上进行数字化。左下角是低频轻度需求，这一类业务场景中小程序是主阵地，可以围绕小程序来做业务的展开，像小程序+社群、小程序+服务号、小程序+公众号等方式。右上角是高频高度需求，这类需求的小程序和APP、公众号、多生态各端之间是相辅相成的，一起推动加速转化。右下角是高频轻度需求，这类需求的小程序可以很好地拥抱生态本身的特点，把小程序作为一个便捷入口，我会在后面举例。3. 案例介绍关于这四象限，接下来我就分别举例，和大家一起看看针对不同需求的场景、不同的小程序是怎么玩的。3.1 重度+低频对于重度+低频的需求，我直接列举2个案例说明。案例1：大宗消费品“威马汽车”威马汽车属于新品类新品牌，它有一个市场教育的过程。关于买车用户体验的整个流程是从一开始被曝光，产生兴趣，有所了解，试驾，售前，售中，售后这些环节。威马在整个流程中布局了非常多小程序可以触达的地方。我之前看到过很多次威马在朋友圈投的广告，点开是一个小程序，整个小程序矩阵里面包括了从预约试驾、试驾、试驾完以后的报告、购买时注册会员、积分商城等，这些都是能被小程序所覆盖的，这就很好的帮助威马连接他与消费者之间的关系、推动整个链路上的转化。案例2：装修行业小程序“住范儿”装修是属于纯粹线下、非常重的一种生意。那这家企业是如何借助小程序将业务延伸的呢？首先他的公众号里面有非常丰富的装修案例，可以通过内容获客，并且每个内容的底部都会挂载小程序。所以不管用户是通过自家的公众号，或者其他的公众号看到内容，都可以帮助他用小程序获客。他的小程序矩阵非常完备，有报价相关的小程序，评测、留资小程序，装修过程管理等各种各样的小程序，他们是通过这些触点将业务做到数字化和小程序化。通过这两个例子想告诉大家，像这种重度低频的需求在小程序上有非常多的玩法，能够帮助你跟用户增加接触面积。3.2 轻度+轻频关于轻度低频的需求，我也列举2个例子说明。案例1：论文查重小程序他是在毕业季上线小程序获取一波新用户，过程中借助社群引导大家进行社交裂变，比如用户转发2个群后可解锁免费查重机会。这个小程序当时是以学生社团微信群为种子，一个小时之内就迅速地在当地的各种学生群里刷屏。案例2：海澜之家小程序海澜之家是小程序加公众号的运营。如果希望用户在用完小程序后还能将流量沉淀下来持续运营，那可以在小程序里用一些领红包、领资料的利益点引导大家关注公众号，把小程序的流量和用户沉淀在公众号，弥补了小程序本身触达能力有限的缺点。公众号就能以更高频、更丰富的内容触达这些你获取的新用户，达到持续运营的效果。3.3 重度+高频关于重度高频的需求，我先以携程举例。案例1：携程携程app和网站的功能是很丰富的，甚至可能有点臃肿，所以他们把app当中的场景拆分形成多个独立的小程序，让每一个场景对应一个轻量级的决策，比如把规划行程、抢火车票、找导游、外币兑换等场景都拆成一个单独的小程序，每一个都非常轻量级，大大提升了用户使用小程序的体验。案例2：知买上图知买小程序这种是微信不怎么鼓励的做法。但大家如果想做一个能够为app引流的小程序，那可以考虑做一个网站类的小程序，你可以在小程序里面增加积累虚拟金币或金豆的功能。当积累到一定的数量可以提现的时候，他就会告诉用户，请下载app来提现。3.4 轻度+高频关于轻度高频的需求，小程序的作用更多偏向工具类属性强，我也举2个例子。案例1：连咖啡它跟竞品瑞幸咖啡不太一样，瑞幸侧重将流量入口都收在app，为了做好用户留存和品牌认同。连咖啡是基于微信服务号和小程序搭建了促销、订购和运营的体系，强调咖啡基于人际关系的分享和流转。他们还打造了“口袋咖啡馆”这款游戏化小程序，借用小程序打入微信并建立商业模式。案例2：墨迹天气墨迹天气，这类纯工具属性app，面临的问题是想要做内容，想要延长用户的使用时间以及增强用户粘性，但是会让用户体验变得很乱。但是他们设计的清爽实用的小程序却很受欢迎。并且你搜天气的时候，他是微信的默认选项，很好地抱住了微信入口的大腿，彻底融入了微信生态。对于工具类app来说，通过小程序融于生态也是一个比较好的寻找流量增长点的方式。我还想强调一点是微信在今年的公开课上所透露的即将上线的新能力：会更加开放搜索的能力；把连接实体的扫一扫的功能提升成扫一物一码了；关于订阅，因为小程序的触达能力相对比较弱，也在考虑更多的方式助力大家留存。还有像直播、公众号短内容、广告能力、中界线能力都会有所提升。我们可以思考一下，未来新上线的能力跟自己的业务有没有比较好的契合点。过去有人口红利或流量红利，现在这两种红利都不太好挖掘的时候，我们就需要向新的技术、新的能力争取红利。后半部分就交给我们的产品专家。二、多生态小程序特点大家好，我是友盟+的产品经理@范芊芸，现在主要负责友盟家的小程序，很高兴能在起点学院公开课上为大家带来分享。下面我会继续为大家分享不同生态小程序的特点以及小程序+私域+公域的整体布局。现在非常多的生态都在布局小程序，他们都有自己的平台特点，也有很多不同的使用场景和优势。大家在做小程序的时候，需要考虑这些平台开放的小程序生态的产品特色、和他们的平台结合有哪些能提供给大家的优势。你如果打算开展小程序业务，考虑的重点应该是需要布局某一个小程序生态还是可以利用多个小程序生态赋予不同的能力组合出不同的玩法。我们先一起看看不同平台的优势和典型特点。1. 不用平台优势和典型特点1.1 微信微信，提供了微信小程序、qq小程序，都是建立在社交关系上的。所以只要是跟人或者其他群体产生联系的业务，不管是购物，社交，引导大家互相pk、交流的小程序的场景和业务，都非常适合微信生态的场景和平台。1.2 阿里阿里，目前开放了支付宝，天猫精灵，和钉钉小程序，后续会开放更多。那他们分别对应的场景都是什么呢？支付宝更多的是消费金融的场景。我们可以考虑在这种信用场景、金融场景、支付场景上，我们的小程序可以怎样融入；淘宝轻店铺就直接与卖货相关；还有天猫精灵小程序，它是一个非常适合做内容的小程序，你做的如果是跟幼儿儿童甚至跟母婴有关的小程序，都可以考虑通过音箱开发智能助手等功能。1.3 百度百度平台的特点是精准度高、搜索能力强，它其实是整个小程序平台里为数不多的目前开源的一个小程序场景。基于百度小程序，我们可以考虑它怎样赋能其它的app，怎么和爱奇艺、小红书、b站等开展合作。我们可以利用小程序在一些其它有明显生态特点及人群分布特点的平台上去更好的获客。1.4 头条头条和抖音小程序最强的是推荐和信息流。你如果了解自己目标人群的特点，比如喜欢看的内容、欢搜索的东西等，你可以考虑布局头条和抖音小程序，去获得平台的流量和支持。每一个平台的特点都不太一样，后面我会跟大家列举几个巨头布局多平台的案例，可以看看他们布局的思考点。目前除了微信生态比较拥挤以外，其他的生态像头条小程序、抖音小程序还没那么拥挤，那我们是不是可以考虑先多了解其他平台的玩法并快速布局呢？我继续举例介绍让大家更加清晰地了解不同平台小程序的特点。2. 不同平台小程序特点和举例介绍2.1 微信小程序微信小程序一直坚持去中心化，和社交绑定的很好，所以对于留存场景的支持比较好。2.2 支付宝阿里有非常多的联盟生态，像优酷，淘宝，支付宝这些都是属于流量的入口。可以考虑布局“阿里联盟小程序”，打通阿里体系所有生态。2.3 百度智能小程序百度平台可以发力“搜索+信息流+AI+开源联盟”，并做到全场景覆盖。2.3 字节跳动小程序字节跳动平台的小程序特点是，内容与工具可以互相导流。3. 案例介绍网络上已经能搜索到很多有关微信小程序的例子，我在这就不重点展开了。我重点跟大家聊聊支付宝小程序，目前支付宝也在做数字化生活的转型，小程序在这么大的生活服务、金融服务的平台上面应该怎么玩？我给大家举例介绍3个小程序。3.1 支付宝小程序案例介绍支付宝小程序1：好食期这个小程序很简单，主要是在支付宝上让大家以比较优惠的价格买小零食。他每天会在小程序里推荐不同零食的优惠，刺激用户购买。他们引用了支付宝小程序目前提供得一些比较好的能力。第一个是无资金商户的优惠券，相应场景是如果用户完成支付，那可以在页面直接领取商户的优惠券，并注明商户不用预存资金，给用户提供了更多的方便。第二个是支付宝上生活号的推送，目前生活号比较开放并具备一定的触达用户的能力，像银行、航空公司也经常会在生活号上推送一些积分优惠活动，我们也可以考虑和生活号关联起来做一些运营动作。第三个是引用了轻会员的能力。对于小程序开发者来说，不用开发一个整体的会员系统，也不用做一个非常复杂的会员体系的设计，直接引用轻会员的能力是非常快捷方便的。这个小程序目前已经做到152万的收藏量，优惠券的回收率非常高，也就意味着转化率很高，粉丝和购买转化率也一直在提升，这是一个比较有意思的玩法和设计。支付宝小程序2：娃哈哈到家娃哈哈到家小程序主要采用了一些像支付宝卡包、先享后付、根据运动数据领取优惠券、或者和小区里的送水厂商合作等方式，很好地引导了用户经常使用他们的小程序。他们也有一些小游戏的场景，比如7日喝水挑战赛，每天提醒你定时补水等等。在小游戏场景中给用户发放优惠券。一段时间内，他们每张优惠券的核销率会增长，并能稳定增加一定数量的新用户，小程序的收藏量也有所提高。这是把支付宝小程序和小区支付的场景结合起来做得不错的一个case。支付宝小程序3：边走边吃边走边吃小程序是通过计算用户运动数据、获得步数积、然后提现，再通过其他生态的小程序跳转到支付宝小程序引导变现。这依赖于支付宝提供了步行计数、现金红包、运动数据相互跳转的功能。通过小程序他们已经获得了20倍+的用户增长，85万+的日活用户峰值，次留峰值提升了80%+，小程序收藏率也提升了10%+。这其中，友盟也有在帮他们做一些推广链接的部分，比如帮他们和其他小程序换量，用他们的生活号引流等等，提升了一定的获客效率，他们家也算是友盟+小程序的种子用户。3.2 头条和抖音小程序头条和抖音的特点主要是头条搜索，信息流和偏好推送。如果想做好头条和抖音小程序的运营，最重要的是能够找到相应的精准人群和用户画像。可以去看自己运营的抖音号、短视频帐号上的用户评论，或者根据头条和抖音提供的用户画像数据，去看粉丝在关注什么内容，一定程度上可以做好精准人群的投放。3.3 多平台布局小程序案例介绍我们也引用了市场上的一个开源报告，数据显示月活过亿的APP当中，2/3涉猎小程序，21%更是同时布局2个以上平台。我这里给大家介绍2个多平台布局小程序的例子。举例1-科大讯飞科大讯飞在很早的时候就开始了多平台小程序的布局。他们在微信小程序上主推个性化语音祝福的功能，通过祝福内容产生裂变，获取了大量的种子用户。在头条上，他们做了文字转音频的工具，帮助用户从视听两个方面接收内容。在百度平台上，结合Free-hand场景，考虑车载和智能家居这些方向的工具。在支付宝上，他们主要做了租赁讯飞的翻译设备的小程序，属于信用授权场景，比较契合支付宝的生活金融属性。科大讯飞小程序的布局结合了不同平台的特点，引用了自己声音翻译的核心产品能力，打造多个场景，最终获得了不错的结果。举例2-携程第2个例子是携程。我们在微信中能看到很多的助力抢票小程序，有时在支付宝上买机票或者订酒店的时候也会看到相应的推广。今日头条在搜索的信息流上也做了很多类似的功能，如果你经常搜索旅游目的地，你就会收到相关的推送。携程最近在小红书上也做了小程序，小红书本身是一个比较有趣的打卡种草平台，携程和小红书合作做官方酒店、旅游的推荐也是比较切合的，这就变成了一种可以很好地引流并引导购买的场景。下面一部分好想和大家分享怎么利用小游戏来助力小程序业务。4. 小游戏这里举一个偏零售化场景的case，绫致时装。他们在小程序做了两次颜值pk大赛，结合排行榜、超越对战、pk这些社交玩法来推广，并在页面下方曝光他们当季要上的新品衣服，在试穿服装以后，就引导你分享。如果你pk赢了，你可以领取优惠券，可以在全国所有的门店核销和使用。小游戏的模式偏向碎片化休闲化，更多的是面向泛游戏用户，泛游戏用户和我们平时使用小程序的用户群结合是非常多的，所以受众面很广。如果能考虑把小游戏和你的业务相结合，可能也会带来一些更好的效果。我很认可之前微信公开课上提到的：“小游戏不止小游戏，更是文化的传递者。”如果是一个有关业务的小程序，小游戏整体的体验环节，不仅是文化的传递者，也是企业营销、品牌的传递者，并同时是效果的承接者。你的业务需要怎样的品牌营销效果，你也可以考虑是否要从小程序入手获得更多这种受众面的用户。三、小程序+私域+公域这部分想和大家聊一下私域要怎么做，公众号和小程序要怎么定位和布局。我从友盟+服务了众多客户的角度来分享我们看到的一些东西。以前大家都不关注私域，只投广告，也不考虑用户运营或者用户留存；但这两年广告越来越贵，大家都不买广告，开始转向私域，大家都开始考虑搭建私域业务设施，比如小程序，h5，微商城，微店等。很多也在搭建小程序的私域营销设施，小程序、小游戏、销售导购、导购员都可以作为所谓的私域营销设施；或者经常给用户发通知，结合CRM数据去分群、发券儿，构建比较完整的私域业务场。那我们就不需要公域了嘛？当然不是！公域里面也会提供这些东西，公域有相关的营销设施、业务设施，公域也会有公域的触点和用户数据，尤其是公域的用户数据和触点其实是私域没有办法做到的。所以每个业务在做公域的同时里面也会有一个公域的业务场。对于本身在你企业的用户来说，用户是在公域和私域中流转的，我们应该多关注私域运营和公域营销。1. 如何通过小程序来做好私域运营和公域营销？第一是数据联通，用户的体验都取决于整体的数据，透过数据我们才能了解用户的个性特点、个人喜好等，我们可以通过小程序做好公域和私域数据的连接，结合公域和私域的用户洞察全面了解用户。第二是营销联通，前面提到私域和公域都有各自的触点和营销设施，所以我们可以做好营销通道、内容的链接。第三是体验的提升，公域和私域的服务和产品相对用户来说应该是互补的，可以提供不同的用户价值，也可以做好不同的营销。从企业的业务来讲，公域和私域都要做，小程序目前是中间的一颗明珠。我们可以在公域的场里面去建立自己的私域，同时我们也要想怎么用好公域提供给我们的营销设施，像广告、流量推荐、feeds流等。2. 友盟+可提供的服务：全域用户数据的打通小程序有很多种形态，不同形态意味着有不同的平台框架，不同平台的数据，不同模式、形式等，想能够快速的把所有的数据打通，还是需要一些时间。友盟+目前可提供一个 整体的小程序解决方案 ，能支持多平台的小程序快速集成和一站式的接入。比如友盟+目前支持微信、支付宝，和刚提到的天猫精灵的这种iot设备的接入，后续也会支持钉钉、头条系的小程序。从数据的角度来讲，友盟还可以做到 获客、转化、裂变、留存、变现这5大环节所有数据链路的打通 ；比如获客，可以帮助你看到流量池的来源，可以快速的建立推广链接，也能清晰地知道推广所带来的新用户数量，活跃用户的数量，用户感兴趣的内容，可以用来大量获客的内容形态等；也可以知道激活、转化和留存链路中比如用户活跃度，核心转化路径，转化率以及不同用户的留存情况，这些都是常见的需要关注的数据。友盟除了能支持微信中的业务以外，也会进一步在阿里系应用这块做更多的探索，更好地支持大家在相应的生态里面做好自己的小程序业务。友盟+现在也有数据银行这样一款产品，可以通过友盟的全域数据，支持程序端和其他端用户的打通，以及沉淀私域数据去帮助刻画私域用户画像。因为有全域的用户数据，所以我们也可以给大家提供在公域上的一些用户洞察。如果你只是打算开发一个简单的小程序，不需要去和app以及其它私域矩阵打通，那你也可以关注友盟+的小程序系统，可以免费注册使用，也是从获客、转化、裂变、留存、变现这5个环节全力支持小程序开发者的数据运营。下图是关于我们的创建工具，比如你创建一个推广活动，我们也会帮助做一些推广，引导到小程序，或生成二维码做地推。关于全链路的数据，很多公司可能有自己的bi系统，想把数据拿回公司沉淀自己的数据资产，友盟+也会提供相应返还的能力。友盟+目前有一个 整体的产品矩阵 ，不仅支持多平台小程序各种各样的包括运营基础统计、高级洞察，问卷分析的能力，同时在app端和外部端也都提供相应的能力，并且在开发者工具箱里面，我们提供的是push产品，你可以通过产品分享的链路做一些追踪，包括人群的智能认证，AB测试这样的开发者工具箱，后续我们也会开发稳定性监测，实时埋码验证，小程序可视化埋码、数据返还、数据授权等功能。可能有同学好奇我们是怎么打通数据的？友盟+的互联网企业数据银行会基于云基础设施，如MaxComput等，不断帮助企业采集各种场景、触点的数据，做相应的数据治理、提纯、模型加工、形成各种应用服务，基于UMID打通能力，多账号归一，多端归一，支持不同的终端数据打通（移动客户端、服务端、客户端不同的平台），帮助企业完成全场景、全触点的数据资产沉淀及应用的管理。如果你是新零售行业，需要投放线下广告，友盟+的户外投放平台也可以做到。友盟+还会提供很多像 行业解决方案和客户成功以及咨询的服务 ，可以去对接在阿里巴巴、支付宝营销平台的广告投放，帮助你进一步监测像头条微信微吼等平台数据的能力。从公域的消费数据里面，你还可以结合阿里指数、生意参谋整体助力你公域和私域的全域数据方案。我们还有一期公开课内容是友盟+产品专家@杨成蹊老师给我们分享更多关于私域具体是怎么运营的，大家可以进一步学习小程序的运营。本文根据友盟+资深数据分析师、数据传承官@相峥，友盟+产品专家@范芊芸在起点学院公开课的分享整理而成，直播回放链接： http://996.pm/7dRLE ；添加小助手哒哒微信：da22133，可领取学习资料。题图来自Unsplash，基于CC0协议"}
{"title": "微信：4月份小程序直播下单用户数环比增长220% ", "author": "Rolan", "pub_time": "2020-5-25 00:11", "content": "5月22日消息，微信发布的“小程序直播进展简报”指出，自2020年2月小程序直播公测以来，开播商户数增长迅速。据介绍，4月份开通小程序直播商家数环比提升了90%，商家日均直播时长环比翻两番；5月1日当日直播时长达近5000小时；单个直播间最高被分享了20万次。微信方面称,随着零售行业全面复工复产，目前已有数万个商户开通小程序直播。​4月小程序直播下单用户规模环比提升了220%；观看小程序直播的用户中，30-40岁的用户占比为29%，女性用户占73%；广东、江苏、北京地区的用户最爱看小程序直播。​据腾讯最新发布的2020年Q1财报显示，截至2020年3月31日，微信和WeChat的合并月活跃账户数为12.025亿，同比增加了8.2%。据《电商报》了解，其中,小程序日活跃帐户超过4亿。据悉，在一季度财报投资人会议中，腾讯总裁刘炽平表示：“越来越多的零售企业正在将门店和品牌与消费者的直连作为投资重点，而小程序正是实现这一目标的关键基础设施。”"}
{"title": "APP、小程序、H5，开发载体如何选择？ ", "author": "Rolan", "pub_time": "2020-5-25 00:06", "content": "文章从APP、小程序、H5的概念出发，从可用性、优缺点、用户体验和成本等4个方面对这三个开发载体展开了对比分析，与大家分享。Q：阿境，我想做个小程序或者APP。A：为什么要做小程序跟APP？想做什么类型的小程序跟APP？产品定位想好了吗？…….Q：你怎么这么多问题？因为现在小程序跟APP热门呀，所以想做一个。A：这样子吧，小程序、APP跟H5先了解下，你再决定。本文将整体概述APP、小程序、H5的含义，再从可用性、优缺点、用户体验、成本等方面来全方位讲解如何选择开发载体，今后选择将不再迷惑。同时，场景的不同决定着开发载体的不同，理性对待，理性选择。一、APP、小程序、H5是什么一句话概括了APP、小程序、H5三者的特点，相信朋友们也印象深刻，那么阿境就以概念的形式来说说，APP、小程序、H5究竟是什么？1. APP是什么？APP是application的缩写，翻译为“应用”，通常专指手机上的应用软件，或称手机客户端。在移动互联网时代，APP的出现，便捷了每个人的生活，同时，APP开发开启了每个企业移动信息化的发展。可以说， APP开展了移动互联的时代 ，是最早我们所能够接触到的移动应用载体。讲讲发展，APP自2008年，苹果对外发布了针对iphone的应用开发包，供免费下载后，便催生了国内众多APP开发商的出现；2010年，Android平台的应用呈井喷式发展；一直到2012年底，APP开发已成为当时的红海市场。直到现在，跨入2020年， APP仍然是主导着移动应用的市场。讲讲意义，APP的出现，以及其创新性开发，引来众多网络大亨们的一致关注及赞许。而随着智能手机和iPad等移动终端设备的普及，人们逐渐习惯了使用APP客户端上网的方式，而国内各大电商，均拥有了自己的APP客户端，甚至于部分的个人用户，也拥有自己的APP（少数）， 这标志着，APP客户端的商业使用，已经逐渐普及 。2. 小程序是什么？小程序泛指 无需下载便可安装即可使用的应用 ，目前市面上的小程序包括了微信小程序、百度小程序、各大厂商的快应用（实质上也是小程序）、以及在去年刚上线的QQ小程序等，这些都属于小程序的一种，但日常被人们提及的小程序，大多为微信小程序，本文介绍的也仅以微信小程序做例子。讲讲原理，其实现原理是 以H5为基础，基于微信平台提供丰富系统与平台的接口的web应用，这种混合模式我们一般称为hybrid 。讲讲特点，小程序最主要的特点为 “无需下载，即用即走” 。但实际上，小程序也并非所谓的“无需下载”，而是由于它“小”的特点，在你打开的时候，就已在短时间内下载好了，确切的说，用“无感下载”来描述，更为贴切一些。讲讲核心价值，其作用在于【连接】—— 提供一对一、一对多和多对多的连接方式，从而实现人与人、人与智能终端、人与社交化娱乐、人与硬件设备的连接 ，同时连接服务、资讯、商业。3. H5是什么？H5的全称是HTML5，是 HTML的第五代标准 （虽然这解释太过性冷淡！）。要注意的是，H5通俗的说，是一项准则，而不是一项技术。要明白H5是什么，那么就需要先了解下什么是“HTML”。解释下，HTML是“超文本标记语言”的英文缩写（Hypertext Markup Language），我们网上看到的网页，大都由HTML写成。随着发展，一代代更新，直到2014年，HTML5标准规范最终指定完成并向全世界开放，而在那几年，H5也成为当时的互联网热词。讲讲特点，H5的跨平台性尤为特别，可同时兼容PC端、移动端、Windows、Linux、Android与ios，可轻易移植到不同的开放平台、应用平台上，打破如今各自为局的情况。讲讲功能，H5可无需第三方浏览器插件即可创建高级图形、版式、动画以及过渡效果，这也使得用户使用较少的流量就可看到较完美的视觉听觉效果。不管是对于用户还是企业，都是友好的。小结上述太过理论化，如果你不想看，那么，阿境用一句话给你简单概括： APP丰满，但复杂；小程序精简，且互联；H5跨平台，也友好。二、APP、小程序、H5的优缺点对比APP，小程序，H5这三者目前已有多年演变历史及发展，市面上对于这三者的优缺点的介绍也数不胜数。这边阿境就自己的认知，简单列举三者优缺点（不做过多分析），以供朋友们对这三者有个简要的理解。1. 三者优点【APP】（1）运行速度快，体验好。（2）可使用底层的设备功能，如摄像头、方向传感器、重力传感器、拨号、GPS、语音、短信、蓝牙等；（3）在界面设计、功能设计、操作逻辑等方面，更容易做到流畅性、用户体验好。且 留存率高 ，用户一旦下载，相较于其他两端，留存的可能性大。（4）精准，超强用户黏性。一旦主动下载了APP，便是基于本身APP的内容有兴趣，同时APP会一直待在用户手机里，APP端便有了不断向用户传播信息，达到唤醒沉睡用户的机会。【小程序】（1） 背靠微信十亿流量 ；使得小程序更易获客，降低获客成本（附近小程序功能），同时可借助微信的社交网络引发爆发性传播，“在巨人肩膀搭积木”。（2） 连接线上与线下 ；推动线下用户习惯的养成，小程序相比APP更容易达成线上线下场景的连接与互动。（3） 触手可及，无需下载，即用即走 ，体验度接近原生，用户体验好。该概念是小程序一上线就开始打的战略，可做APP的整体嫁接，也可做简洁版功能的承载体，这一特点使得能代替许多APP。（4） 开发成本低、体验接近原生、高效的流量召回、积累自由用户 成为可能等【H5】（1） 跨平台性 （同时兼容PC端、移动端、Windows、Linux、Android与ios）（2） 开发周期短，维护成本较低 ，可快速迭代。（3） 开发相对较容易 ，对浏览器适配简单，简单易发布，直接上传即可，无需审核。2. 三者缺点【APP】（1） 开发周期长，费用多 ，不同的操作系统（Android与ios）需要独立开发，且维护起来也比较麻烦。（2） 获客成本高 ，用户使用需要下载。在没有一定知名度的情况下，使得用户去主动下载一个APP的成本高昂。（3） 更新需要上架审核 ，Android需在各大应用市场，ios需在App store上进行上架审核，受制于各大应用商店的规范中，上架后用户需重新更新安装。【小程序】（1） 引流能力有限 ，传播有限（转发朋友圈等功能受限），且用户留存困难，在小程序中留存的概念弱。该缺点也正是由于“即用即走”的特点，导致留存困难—无绝对的优点与缺点。（2） 受制于微信管控 ，功能的开发取决于微信的赋能，从功能接口，甚至于类别内容等，以及部分敏感内容（也可能是wx的竞争对手）还容易遭受到封禁等措施。【H5】（1） 用户体验差 ，每次打开页面，需要重新加载；（2） 加载速度慢 ，若是在网络情况差的情况下，网页可能加载需要长久的时间；（3）仅能使用部分设备底层的功能，蓝牙、短信、摄像头、麦克风等功能无法使用，造成 开发功能局限 。3. 三者对比【系统权限方面】（1）H5 本身可以说几乎是没有什么系统权限的。虽然也有摄像头之类的接口，但是重度依赖浏览器能力，兼容性有限。（2）小程序，由于依赖微信客户端本身，所以微信小程序团队将客户端的很多能力开放给了小程序环境，前提是微信也授权了相关的能力，比如允许访问麦克风，允许访问相册等。（3）APP由于采用的是原生开发，可使用许多底层的空间及功能，系统权限也是这三者当中最高的。【管控方面】（1）H5 页面可以不用搞 HTTPS，有个网站就能玩。但是小程序，从后端开始就有限制，要求域名备案+HTTPS，一定程度上也是一点成本。（2）小程序依赖微信平台，因此微信平台要对内容安全等事项负责，比如想做有 UGC 的产品，小程序上线前期就需资质（3）APP则归属应用市场及App store的审核限定，同时也需要资质审核。【 分享方面】（1）小程序可分享到群，但不可分享到朋友圈，且只能在微信体系内运作；（2）H5可分享给好友，也可分享到朋友圈，同时可在浏览器上打开;（3）APP可分享到各大平台（受限制除外，例如淘宝在微信上的分享）【主动触达渠道方面】（1）H5 本身是没有用户触达能力的，如果用户关掉了页面，页面就再也没有办法主动触达该用户了。传统的营销方式都是采用邮件营销或短信营销等来触达用户。（2）小程序支持模板消息（现已改成订阅号消息），有一周的推送时间限制。只要用户使用小程序，就可通过某种操作收集 formid，即可在一周之内的任意时间触达用户。（3）APP可通过第三方推送（如极光推送等）推送信息给到目标用户，从而达到唤醒沉睡用户的目的。【其他】（1）留存率方面：APP＞小程序＞H5（2）流畅度方面：APP=小程序＞H5（3）简易功能成本：APP＞小程序=H5（4）迭代周期：APP＞小程序＞H5（5）追踪能力：APP=小程序＞H5由于篇幅有限，不再过多赘述，感兴趣的可以查看阿境整理的三者对比表。（如上图）三、如何选择开发载体？常常会遇到甲方大大或者部分老板的需求“我想做一款商城APP”，当彻底了解对方的公司情况及预算后，可能更适合他们的，是做一款商城小程序。那么， 如何选择开发载体 呢？该问题不能一概而论，这 三者没有绝对的好，也没有绝对的差 ，取决于开发方的 产品类型（行业）、产品定位（方向）、项目预算（金钱） 等多个维度综合考虑。那么，如何选择呢，阿境以自己与众多甲方大大的沟通经验，粗略分析下。1. 该开发APP还是小程序或者是H5？APP、小程序、H5说白了，都是一种前端的展示形式，选择哪种，取决于他们各自的特点及所携带的功能。首先需要了解的，是他们各自的优缺点，上文已经详细提到了。在了解优缺点之后，是公司的定位，以及做产品的定位。打个比方，工具类的小程序，会比工具类的APP更来得划算，工具类的软件，本身就是“低频多次”，那么，在小程序满足其功能的前提下，选择做小程序远比做APP的成本来得低。下面会从几个角度上来分析，如何选择开发载体。从成本预算上来看，有钱有人有模式，那么APP是最好选择；若想小成本是错，则H5或小程序更加合适。H5和小程序则更属于在业务探索阶段的项目。毕竟同等功能下的项目预算，一个APP的成本等于两到三个的H5/小程序，但其体验相对好，且从长远的发展来看，更容易留存。从时间周期上来看，开发H5/小程序，远比APP更加快速。毕竟在开发配置上，APP需要Android开发跟ios开发，而H5和小程序仅需一个前端开发工程师，自然在测试方面，测试单端跟两端的时间周期，也是不同的。从流畅性及反应速度来看，APP跟小程序都是不二选择，H5则相对逊色。APP由于其原生的特性，加载页面仅需加载变化的部分，而H5其本质是网页，换页面时，通常要加载整个页面，就像是浏览器打开一个新页面一样（不清楚的朋友可以打开京东APP，及京东H5来对比下，一目了然），速度相对较慢。从功能开发上来看，H5及小程序局限性较多，选择APP更为自由。在原生APP当中，可调用系统底层的硬件（例如摄像头，麦克风等等），支持的硬件更多，更容易扩展。相对而言，H5便望尘莫及了；而小程序是在于巨头的笼罩之下，局限于微信的管辖，功能都需要有微信的接口支持，所以，功能也相对局限（虽然，近年来微信不断地为小程序赋能）。……如何选择，就需要根据以上多个维度来综合分析并取舍，最终来得出选择。假若你的客户或者你的上司要求做出来的软件开发周期要短，预算要少，流畅要高，功能要全，内存占据少，同时兼容各版本…..那么，在你看完阿境的碎碎念之后，你告诉他：“梦里啥都有。”2. 已经2020年了，小程序还是这么火，是否有替代APP的可能性？大家往往在现在有个推理误区： “张小龙说过，小程序会替代80%的APP。”于是乎，许多人推理得出”小程序这么火，那么，今后一定会取代APP。”阿境认为，这完全是个悖论。在以上分析“APP能否被小程序替代”这个问题的时候，我们上面在清楚了小程序及APP的优缺点之后（其实是啰嗦了一堆），这个问题也就不难回答了。小程序的核心价值高低在于解决实际问题的能力和体验。从用户需求的角度讲，用户不会在意自己使用的是小程序还是APP，而是更多的关注哪种方式操作更简单，流程体验哪个更顺畅，不容易占用手机内存等。这就意味着开发者推出的小程序若非体验和服务优于APP一个量级，否则用户在操作习惯上依然倾向原有的APP。以及若非高频的场景触发，用户很难在已有app的基础上再选择一个新的操作方式。而小程序能够替代的APP，基本是一些工具性，功能简单，较不常用的APP的功能（如日常打卡，电影购票，点餐，乘车服务类等），都是 基于小程序其“无需下载即用即走”的特点；而APP的功能更加强大，如微信、淘宝等APP，是小程序无法替代的。要注意的一点，80%不等于100%，有时候往往那仅有的20%，才是市场的一片天。写在文末从2010年的“我要做一款xxAPP”，一直到2014年的“我要做一款xxH5”，再到现在的“我要做一款xx小程序”，我们可以很清晰地观察看到， 互联网载体的发展，影响到市场的声音 ，这是一种发展的趋势。但 就这三者而言，并无绝对的优劣 ，看完文章的朋友们应该也能大致明白，场景的不同决定着开发载体的不同，理性对待，理性选择。作者：阿境，热爱产品的凡夫俗子。野蛮生长，产品汪一枚，做过电商、医疗、教育行业项目，有百万级流水产品经验。公众号：梦想家阿境本文由@阿境 原创发布于人人都是产品经理，未经作者许可，禁止转载。题图来自Unsplash，基于CC0协议"}
{"title": "微信小程序语音同步智能识别的实现案例代码解析 ", "author": "Rolan", "pub_time": "2020-6-1 00:45", "content": "一、背景在小程序的一些应用场景中，会有语音转文字的需求。原有的做法一般是先通过小程序的录音功能录下语音文件，然后再通过调用语音智能识别WebApi（比如百度云AI平台，科大讯飞平台）将语音文件转成文字信息，以上的做法比较繁琐且用户的体验性较差。为解决此问题，微信直接开放了同声传译的插件，小程序作者可以直接使用该插件进行语音同声传译的开发。此文章将通过前后端整合应用的完整案例完成语音的实时转换，并将语音上传到服务端后台备份。二、同声传译插件介绍微信同声传译由微信智聆语音团队、微信翻译团队与公众平台联合推出的同传开放接口，首期开放语音转文字、文本翻译、语音合成接口，为开发者赋能。1、 微信小程序后台添加插件进入微信小程序后台-->进入设置-->第三方设置-->添加插件->搜索同声传译-->完成添加。2、 微信小程序启用插件在小程序app.json文件中增加插件版本等信息：\"plugins\": {\r\n \"WechatSI\": {\r\n \"version\": \"0.3.3\",\r\n \"provider\": \"wx069ba97219f66d99\"\r\n }\r\n },在页面程序文件中引入插件：/* index.js */\r\n\r\nconst plugin = requirePlugin(\"WechatSI\")\r\n\r\n// 获取**全局唯一**的语音识别管理器**recordRecoManager**\r\nconst manager = plugin.getRecordRecognitionManager()recordRecoManager 对象的方法列表：方法参数说明startoptions开始识别stop结束识别onStartcallback正常开始录音识别时会调用此事件onRecognizecallback有新的识别内容返回，则会调用此事件onStopcallback识别结束事件onErrorcallback识别错误事件官方开发文档： 插件的语音识别管理器三、语音同步转换的前端实现1、界面UI与操作UI参考微信官方的DEMO：长按按钮进行录音，松开按钮实时将录音转换为文字。用户可对同步转换的文字进行编辑，同时可将原始语音文件与文字上传后台服务端。2、代码实现语音同步转换的主要代码：//导入插件\r\nconst plugin = requirePlugin(\"WechatSI\");\r\n// 获取**全局唯一**的语音识别管理器**recordRecoManager**\r\nconst manager = plugin.getRecordRecognitionManager();\r\n\r\n/**\r\n * 加载进行初始化\r\n */\r\n onLoad: function () {\r\n \t//获取录音权限\r\n\tapp.getRecordAuth();\r\n\t//初始化语音识别回调\r\n this.initRecord();\r\n },\r\n\r\n ...\r\n\r\n/**\r\n * 初始化语音识别回调\r\n * 绑定语音播放开始事件\r\n */\r\n initRecord: function () {\r\n //有新的识别内容返回，则会调用此事件\r\n manager.onRecognize = (res) => {\r\n let currentData = Object.assign({}, this.data.currentTranslate, {\r\n text: res.result,\r\n });\r\n this.setData({\r\n currentTranslate: currentData,\r\n });\r\n this.scrollToNew();\r\n };\r\n\r\n // 识别结束事件\r\n manager.onStop = (res) => {\r\n let text = res.result;\r\n\r\n console.log(res.tempFilePath);\r\n\r\n if (text == \"\") {\r\n this.showRecordEmptyTip();\r\n return;\r\n }\r\n\r\n let lastId = this.data.lastId + 1;\r\n\r\n let currentData = Object.assign({}, this.data.currentTranslate, {\r\n text: res.result,\r\n translateText: \"正在识别中\",\r\n id: lastId,\r\n voicePath: res.tempFilePath,\r\n duration: res.duration\r\n });\r\n\r\n this.setData({\r\n currentTranslate: currentData,\r\n recordStatus: 1,\r\n lastId: lastId,\r\n });\r\n //将当前识别内容与语音文件加入列表\r\n this.addRecordFile(currentData, this.data.dialogList.length);\r\n //刷新列表\r\n\t this.scrollToNew();\r\n };\r\n\r\n // 识别错误事件\r\n manager.onError = (res) => {\r\n this.setData({\r\n recording: false,\r\n bottomButtonDisabled: false,\r\n });\r\n };\r\n\r\n },\r\n\r\n /**\r\n * 按住按钮开始语音识别\r\n */\r\n streamRecord: function (e) {\r\n let detail = e.detail || {};\r\n let buttonItem = detail.buttonItem || {};\r\n //开始中文录音\r\n manager.start({\r\n lang: buttonItem.lang,\r\n });\r\n\r\n this.setData({\r\n recordStatus: 0,\r\n recording: true,\r\n currentTranslate: {\r\n // 当前语音输入内容\r\n create: util.recordTime(new Date()),\r\n text: \"正在聆听中\",\r\n lfrom: buttonItem.lang,\r\n lto: buttonItem.lto,\r\n },\r\n });\r\n //刷新列表\r\n this.scrollToNew();\r\n },\r\n\r\n /**\r\n * 松开按钮结束语音识别\r\n */\r\n streamRecordEnd: function (e) {\r\n let detail = e.detail || {}; // 自定义组件触发事件时提供的detail对象\r\n let buttonItem = detail.buttonItem || {};\r\n\r\n // 防止重复触发stop函数\r\n if (!this.data.recording || this.data.recordStatus != 0) {\r\n console.warn(\"has finished!\");\r\n return;\r\n }\r\n\r\n manager.stop();\r\n\r\n this.setData({\r\n bottomButtonDisabled: true,\r\n });\r\n },编辑识别文字并完上传的主要代码：/**\r\n * 页面的初始数据\r\n */\r\n data: {\r\n edit_text_max: 200,\r\n remain_length: 200,\r\n edit_text: \"\",\r\n is_focus: false,\r\n tips: \"\",\r\n index: -1,\r\n voicePath: \"\",\r\n\r\n },\r\n\r\n/**\r\n * 加载初始化\r\n */\r\n onLoad: function (options) {\r\n //根据传入的文字内容填充编辑框\r\n this.setEditText(options.content)\r\n\r\n this.setData({\r\n index: index,\r\n oldText:options.content,\r\n voicePath: options.voicePath\r\n })\r\n\r\n },\r\n\r\n /**\r\n * 编辑文字\r\n */\r\n editInput: function (event) {\r\n console.log(event)\r\n if (event.detail.value.length > this.getEditTextMax()) {\r\n\r\n } else {\r\n this.data.edit_text = event.detail.value\r\n this.updateRemainLength(this.data.edit_text)\r\n }\r\n },\r\n\r\n /**\r\n * 上传文字与语音文件\r\n */\r\n editConfirm: function (event) {\r\n let json=this.data.edit_text\r\n //调用微信上传文件api将信息上传至服务端webApi\r\n wx.uploadFile({\r\n url: api.wxFileUploadUrl,\r\n filePath: this.data.voicePath,\r\n name: \"file\",\r\n header: {\r\n Authorization: wx.getStorageSync(\"loginFlag\"),\r\n \"Content-Type\": \"multipart/form-data\",\r\n },\r\n formData: {\r\n openId: app.globalData.userInfo.openId,\r\n realName: \"语音文件\",\r\n json: JSON.stringify(json),\r\n },\r\n success: (result) => {\r\n console.log(\"success:\", result);\r\n if (result.statusCode == \"200\") {\r\n  let data = JSON.parse(result.data);\r\n  console.log(\"data\", data);\r\n  if (data.success == true) {\r\n  let module = data.module;\r\n  console.log(\"module\", module);\r\n  app.showInfo(\"上传成功\");\r\n  setTimeout( ()=>{\r\n  wx.navigateBack();\r\n  }, 2000)\r\n\r\n  } else {\r\n  app.showInfo(\"异常错误\" + data.errMsg + \",请重新进入\");\r\n  wx.navigateTo({\r\n  url: \"/pages/index/index\",\r\n  });\r\n  }\r\n } else {\r\n  app.showInfo(\"访问后台异常,重新进入系统\");\r\n  wx.navigateTo({\r\n  url: \"/pages/index/index\",\r\n  });\r\n }\r\n },\r\n fail: (result) => {\r\n console.log(\"fail\", result);\r\n wx.navigateTo({\r\n  url: \"/pages/index/index\",\r\n });\r\n },\r\n complete: () => {},\r\n });\r\n\r\n },四、后端SpringBoot实现语音文件上传webApi1、SpringBoot项目API相关结构树2、文件上传工具类的实现tools工具类包中主要存文件通用的文件上传工具类，该工具类会将文件上传至配置指定的文件夹下，并将文件信息写入upload_file表中。文件信息实体类：与数据库中表upload_file对应；文件存储仓库类：通过Spring Data JPA接口实现数据的CRUD；文件上传工具接口：对外统一封装文件上传方法；文件上传工具实现类：实现文件上传方法接口。文件信息实体类：UploadFile.java/**\r\n * 文件信息表\r\n *\r\n * @author zhuhuix\r\n * @date 2020-04-20\r\n */\r\n@Entity\r\n@Getter\r\n@Setter\r\n@Table(name = \"upload_file\")\r\npublic class UploadFile {\r\n\r\n @Id\r\n @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n @NotNull(groups = Update.class)\r\n private Long id;\r\n\r\n /**\r\n * 文件实际名称\r\n */\r\n @Column(name = \"real_name\")\r\n private String realName;\r\n\r\n /**\r\n * 文件名\r\n */\r\n @NotNull\r\n @Column(name = \"file_name\")\r\n private String fileName;\r\n\r\n /**\r\n * 文件主名称\r\n */\r\n @NotNull\r\n @Column(name = \"primary_name\")\r\n private String primaryName;\r\n\r\n /**\r\n * 文件扩展名\r\n */\r\n @NotNull\r\n private String extension;\r\n\r\n /**\r\n * 存放路径\r\n */\r\n @NotNull\r\n private String path;\r\n\r\n /**\r\n * 文件类型\r\n */\r\n private String type;\r\n\r\n /**\r\n * 文件大小\r\n */\r\n private Long size;\r\n\r\n /**\r\n * 上传人\r\n */\r\n private String uploader;\r\n\r\n @JsonIgnore\r\n @Column(name = \"create_time\")\r\n @CreationTimestamp\r\n private Timestamp createTime;\r\n\r\n public UploadFile(String realName, @NotNull String fileName, @NotNull String primaryName, @NotNull String extension, @NotNull String path, String type, Long size, String uploader) {\r\n this.realName = realName;\r\n this.fileName = fileName;\r\n this.primaryName = primaryName;\r\n this.extension = extension;\r\n this.path = path;\r\n this.type = type;\r\n this.size = size;\r\n this.uploader = uploader;\r\n }\r\n\r\n @Override\r\n public String toString() {\r\n return \"UploadFile{\" +\r\n  \"fileName='\" + fileName + '\\'' +\r\n  \", uploader='\" + uploader + '\\'' +\r\n  \", createTime=\" + createTime +\r\n  '}';\r\n }\r\n}文件存储仓库类:UploadFileRepository.java/**\r\n * 上传文件DAO接口层\r\n *\r\n * @author zhuhuix\r\n * @date 2020-04-03\r\n */\r\npublic interface UploadFileRepository extends JpaRepository<UploadFile, Long>, JpaSpecificationExecutor<UploadFile> {\r\n//该接口继承JpaRepository及CrudRepository接口，已实现了如findById,save,delete等CRUD方法\r\n}UploadFileRepository 接口继承JpaRepository及CrudRepository接口，已实现了如findById,save,delete等CRUD方法文件上传工具接口：UploadFileTool.java/**\r\n * 文件上传接口定义\r\n *\r\n * @author zhuhuix\r\n * @date 2020-04-20\r\n */\r\npublic interface UploadFileTool {\r\n\r\n /**\r\n * 文件上传\r\n * @param multipartFile 文件\r\n * @return 上传信息\r\n */\r\n UploadFile upload(String uploader,String realName,MultipartFile multipartFile);\r\n}文件上传工具实现类:UploadFileToolImpl.java/**\r\n * 文件上传实现类\r\n *\r\n * @author zhuhuix\r\n * @date 2020-04-20\r\n */\r\n@Service\r\n@Transactional(propagation = Propagation.SUPPORTS, readOnly = true, rollbackFor = Exception.class)\r\npublic class UploadFileToolImpl implements UploadFileTool {\r\n\r\n private final UploadFileRepository uploadFileRepository;\r\n\r\n @Value(\"${uploadFile.path}\")\r\n private String path;\r\n\r\n @Value(\"${uploadFile.maxSize}\")\r\n private long maxSize;\r\n\r\n public UploadFileToolImpl(UploadFileRepository uploadFileRepository) {\r\n this.uploadFileRepository = uploadFileRepository;\r\n }\r\n\r\n @Override\r\n @Transactional(rollbackFor = Exception.class)\r\n public UploadFile upload(String uploader, String realName, MultipartFile multipartFile) {\r\n //检查文件大小\r\n if (multipartFile.getSize() > maxSize * Constant.MB) {\r\n  throw new RuntimeException(\"超出文件上传大小限制\" + maxSize + \"MB\");\r\n }\r\n //获取上传文件的主文件名与扩展名\r\n String primaryName = FileUtil.mainName(multipartFile.getOriginalFilename());\r\n String extension = FileUtil.extName(multipartFile.getOriginalFilename());\r\n //根据文件扩展名得到文件类型\r\n String type = getFileType(extension);\r\n //给上传的文件加上时间戳\r\n LocalDateTime date = LocalDateTime.now();\r\n DateTimeFormatter format = DateTimeFormatter.ofPattern(\"yyyyMMddhhmmssS\");\r\n String nowStr = \"-\" + date.format(format);\r\n String fileName = primaryName + nowStr + \".\" + extension;\r\n\r\n try {\r\n  String filePath = path + type + File.separator + fileName;\r\n  File dest = new File(filePath).getCanonicalFile();\r\n  if (!dest.getParentFile().exists()) {\r\n  dest.getParentFile().mkdirs();\r\n  }\r\n  multipartFile.transferTo(dest);\r\n  if (ObjectUtil.isNull(dest)) {\r\n  throw new RuntimeException(\"上传文件失败\");\r\n  }\r\n\r\n  UploadFile uploadFile = new UploadFile(realName, fileName, primaryName, extension, dest.getPath(), type, multipartFile.getSize(), uploader);\r\n  return uploadFileRepository.save(uploadFile);\r\n\r\n } catch (Exception e) {\r\n  e.printStackTrace();\r\n  throw new RuntimeException(e.getMessage());\r\n }\r\n\r\n }\r\n\r\n /**\r\n * 根据文件扩展名给文件类型\r\n *\r\n * @param extension 文件扩展名\r\n * @return 文件类型\r\n */\r\n private static String getFileType(String extension) {\r\n String document = \"txt doc pdf ppt pps xlsx xls docx csv\";\r\n String music = \"mp3 wav wma mpa ram ra aac aif m4a\";\r\n String video = \"avi mpg mpe mpeg asf wmv mov qt rm mp4 flv m4v webm ogv ogg\";\r\n String image = \"bmp dib pcp dif wmf gif jpg tif eps psd cdr iff tga pcd mpt png jpeg\";\r\n if (image.contains(extension)) {\r\n  return \"image\";\r\n } else if (document.contains(extension)) {\r\n  return \"document\";\r\n } else if (music.contains(extension)) {\r\n  return \"music\";\r\n } else if (video.contains(extension)) {\r\n  return \"video\";\r\n } else {\r\n  return \"other\";\r\n }\r\n }\r\n}注意，该程序代码中用到了@Value注解获取配置文件中的uploadFile.path及uploadFile.maxsize参数，一般在项目静态配置文件中按如下书写（yml配置文件）。# 测试环境文件存储路径\r\nuploadFile:\r\n path: C:\\startup\\file\\\r\n # 文件大小 /M\r\n maxSize: 503、小程序上传文件接口的实现wx-miniprogram包定义了小程序CRM webApi的接口，小程序调用webApi实现文件的上传及其他功能。微信小程序 webApi：对外提供小程序上传文件webApi；微信小程序服务接口：封装小程序上传文件服务接口;微信小程序服务实现：小程序上传文件服务的实现，该服务实现中会调用tools包中的UploadFile接口进行文件的上传。微信小程序CRM webApi：WxMiniCrmController.java/**\r\n * 微信小程序Crm webApi\r\n *\r\n * @author zhuhuix\r\n * @date 2020-03-30\r\n */\r\n@Slf4j\r\n@RestController\r\n@RequestMapping(\"/api/wx-mini\")\r\n@Api(tags = \"微信小程序Crm接口\")\r\npublic class WxMiniCrmController {\r\n\r\n private final WxMiniCrm wxMiniCrm;\r\n\r\n public WxMiniCrmController(WxMiniCrm wxMiniCrm) {\r\n this.wxMiniCrm = wxMiniCrm;\r\n }\r\n\r\n @ApiOperation(value = \"微信小程序端上传文件\")\r\n @PostMapping(value = \"/fileUpload\")\r\n public ResponseEntity fileUpload(HttpServletRequest request) {\r\n MultipartHttpServletRequest req = (MultipartHttpServletRequest) request;\r\n\r\n MultipartFile multipartFile = req.getFile(\"file\");\r\n String openId = req.getParameter(\"openId\");\r\n String realName = req.getParameter(\"realName\");\r\n String json = req.getParameter(\"json\");\r\n\r\n return ResponseEntity.ok(wxMiniCrm.uploadFile(json, openId,realName, multipartFile));\r\n\r\n }\r\n}微信小程序CRM服务接口:WxMiniCrm.java/**\r\n * 微信小程序CRM服务接口定义\r\n *\r\n * @author zhuhuix\r\n * @date 2020-04-20\r\n */\r\npublic interface WxMiniCrm {\r\n\r\n /**\r\n * 将微信小程序传入的json对象写入数据库，并同时将文件上传至服务端\r\n *\r\n * @param json  微信端传入json对象\r\n * @param openId 上传人\r\n * @param realName 文件实际名称\r\n * @param multipartFile 上传文件\r\n * @return 返回上传信息\r\n */\r\n Result<UploadFile> uploadFile(String json, String openId, String realName,MultipartFile multipartFile);\r\n}微信小程序CRM服务实现:WxMiniCrmImpl.java/**\r\n * 微信小程序CRM实现类\r\n *\r\n * @author zhuhuix\r\n * @date 2020-04-20\r\n */\r\n@Slf4j\r\n@Service\r\n@Transactional(propagation = Propagation.SUPPORTS, readOnly = true, rollbackFor = Exception.class)\r\npublic class WxMiniCrmImpl implements WxMiniCrm {\r\n\r\n private final UploadFileTool uploadFileTool;\r\n\r\n public WxMiniCrmImpl(UploadFileTool uploadFileTool) {\r\n this.uploadFileTool = uploadFileTool;\r\n }\r\n\r\n @Override\r\n @Transactional(rollbackFor = Exception.class)\r\n public Result<UploadFile> uploadFile(String json, String openId,String realName, MultipartFile multipartFile) {\r\n return new Result<UploadFile>().ok(uploadFileTool.upload(openId,realName, multipartFile));\r\n }\r\n}4、小程序上传文件接口的查看访问Swagger2可查看该接口，Swagger2与SpringBoot的集成可参考 SpringBoot JWT认证机制项目集成Swagger2五、实际测试语音测试正常上传文件至后台：上传的日志信息查看：总结到此这篇关于微信小程序语音同步智能识别的实现案例代码解析的文章就介绍到这了,更多相关微信小程序语音同步智能识别内容请搜索我们以前的文章或继续浏览下面的相关文章希望大家以后多多支持我们！"}
{"title": "微信小程序和支付宝小程序对应的差异 ", "author": "Rolan", "pub_time": "2020-6-2 00:16", "content": "最近完成了一个项目，要同时开发微信小程序和支付宝小程序。因为没有自建跨端开发框架，也没有使用Taro、uni-app等框架，并且开发过程中根据实际情况需求在增加，所以都是微信小程序写完一个功能后马上挪到支付宝小程序，这样写的效率比较低，因为挪到支付宝后有些地方的样式、功能需要重写并且测试。暂且不说考察一下选择一个跨端框架赶紧用起来，当前还是使用手动挪功能的方式开发的。本文记录将微信小程序挪到支付宝小程序的过程中遇到的一些支付宝小程序和微信小程序的差异，以免每次都去官方文档查。\r\n1.文件后缀名\r\n微信小程序的四个文件后缀为.js、.json、.wxml、.wxss，支付宝小程序的四个文件后缀为.js、.json、.axml、.acss。\r\n使用命令将当前目录下后缀名为wxml的文件全部替换为axml，后缀名为wxss的文件换为acss：\r\nrename 's/\\.wxml/\\.axml/' * && rename 's/\\.wxss/\\.acss/' *\r\n复制代码使用man rename查看更多rename用法。参考地址：linux 批量修改文件名后缀名命令rename。执行命令时如果提示zsh: command not found: rename，就用brew install rename安装一下rename，如果没有安装brew，使用brew首页的安装命令安装一下即可。Mac下载brew时报错的处理。\r\n2.控制属性\r\n\r\n\r\n\r\n微信小程序\r\n支付宝小程序\r\n\r\n\r\n\r\n\r\nwx:if\r\na:if\r\n\r\n\r\nwx:for\r\na:for\r\n\r\n\r\nwx:key\r\na:key\r\n\r\n\r\n\r\n在axml文件中的a:对应wxml文件中的wx:。\r\n3.标签\r\n\r\n\r\n\r\n微信小程序\r\n支付宝小程序\r\n\r\n\r\n\r\n\r\n<i>、<icon>\r\n<icon>\r\n\r\n\r\n<span>、<text>\r\n<text>\r\n\r\n\r\n\r\n微信小程序即支持<icon>标签，又支持<i>，但是支付宝小程序只支持<icon>标签，写HTML5标签习惯之后比较偏向于写<i>和<span>，但是如果是同时要写支付宝小程序和微信小程序，还是直接使用小程序标签<icon>和<text>比较好。\r\n4.事件属性\r\n\r\n\r\n\r\n微信小程序\r\n支付宝小程序\r\n\r\n\r\n\r\n\r\nbindtap\r\nonTap\r\n\r\n\r\ncatchtap\r\ncatchTap\r\n\r\n\r\n\r\n微信小程序使用小写的事件属性名称，支付宝小程序使用的是小驼峰的事件属性名称。需要注意的是微信小程序比支付宝小程序健壮许多，一些微信小程序支持的事件支付宝小程序是不支持的。\r\n微信小程序事件，支付宝小程序事件。\r\n5.数据绑定\r\n微信小程序和支付宝小程序都是在axml/wxml中使用{{}}绑定js中的数据。需要注意的是，支付宝小程序的axml中不支持相对复杂处理。\r\n比如微信小程序中使用如下判断是有效的：\r\n<view class=\"common-button\" wx:if=\"{{detail.show['a_1'] || detail.show['a_2']}}\" bindtap=\"handleA\">A按钮</view>\r\n复制代码但是在支付宝中直接使用a:if=\"{{detail.show['a_1'] || detail.show['a_2']}}\"无效，需要将判断简化。先在data中定义一个变量，再在axml中直接使用\r\n<view a:if=\"{{showButtonA}}\">A按钮</view>\r\n复制代码js中代码如下：\r\n{\r\n  data: {\r\n  \tshowButtonA: false,\r\n  },\r\n  methods: {\r\n    init () {\r\n  \t  const { show = {} } = detail;\r\n  \t  const { a_1, a_2 } = show;\r\n  \t  this.setData({\r\n  \t    showButtonA: a_1 || a_2,\r\n  \t  });\r\n    },\r\n  }\r\n}\r\n复制代码微信wxml，支付宝axml。\r\n6.生命周期\r\n这部分直接引用官方文档里的描述文本以及图片。更多生命周期相关内容，查看：微信小程序App、微信小程序页面生命周期、微信小程序注册页面、支付宝小程序页面运行机制。\r\n首先看看官网给出的小程序的生命周期示意图：\r\n图1为微信小程序生命周期，图2为支付宝小程序生命周期：\r\n\r\nAPP生命周期\r\n微信小程序&支付宝小程序\r\nApp({\r\n  onLaunch (options) {}, // 小程序初始化完成时触发，全局只触发一次\r\n  onShow (options) {}, // 小程序启动，或者从后台进入前台时触发\r\n  onHide () {}, // 小程序从前台进入后台时触发\r\n  onError (msg) {}, // 小程序发生脚本错误或 API 调用报错时触发。\r\n  globalData: '全局数据'\r\n});\r\n复制代码这里的前台和后台指的是用户是否在使用小程序，当用户在使用小程序的时候，相当于在前台，当用户点击右上角的退出按钮退出小程序时相当于进入后台。\r\n虽然微信小程序和支付宝小程序生命周期回调函数参数的属性略有不同，但常用的几个基本是一样的，比如onLaunch和onShow的options参数的以下属性：\r\n\r\n\r\n\r\noptions的属性\r\n属性值的类型\r\n代表的意义\r\n\r\n\r\n\r\n\r\npath\r\nstring\r\n启动小程序的路径\r\n\r\n\r\nscene\r\nnumber\r\n启动小程序的场景值\r\n\r\n\r\nreferrerInfo\r\nObject\r\n来源信息\r\n\r\n\r\n\r\n页面的生命周期\r\n微信小程序和支付宝小程序注册页面时常用的几个生命周期基本相同。\r\n微信小程序&支付宝小程序\r\nPage({\r\n  onLoad: function(options) {},  // 页面创建时执行\r\n  onShow: function() {}, // 页面出现在前台时执行\r\n  onReady: function() {}, // 页面首次渲染完毕时执行\r\n  onHide: function() {}, // 页面从前台变为后台时执行\r\n  onUnload: function() {},  // 页面销毁时执行\r\n});\r\n复制代码这里的前台和后台指的是否是当前页面。比如从页面A跳转到页面B，那么B页面进入前台（onLoad、onShow、onReady），A页面进入后台（onHide）。如果按A页面的左上角的返回按钮，那么A页面被销毁（onUnload）。\r\n微信小程序页面路由。\r\n组件的生命周期\r\n微信小程序App的生命周期和页面的生命周期基本相同，但是组件的生命周期的声明方式有很大不同。\r\n微信小程序组件\r\nComponent({\r\n  behaviors: [], // behaviors用于引入组件间共享的属性、数据、方法、生命周期函数\r\n  properties: { // 从父组件中传入组件的属性\r\n    contactInfo: {\r\n      type: Object,\r\n      value: null,\r\n      observer(newVal, oldVal) { // 监听从父组件中传入的属性的变化\r\n        if (newVal) {\r\n          this.doSomthing();\r\n        }\r\n      },\r\n    },\r\n  },\r\n  data: {}, // 组件的数据\r\n  lifetimes: { // 生命周期函数\r\n    created: function () {}, // 组件实例刚刚被创建时执行\r\n    attached: function () {}, // 组件实例进入页面节点树时执行\r\n    ready: function () {}, // 组件在视图层布局完毕执行\r\n    moved: function () { }, // 组件实例被移动到节点树的另一个位置时执行\r\n    detached: function () {}, // 组件实例从页面节点树移除时执行\r\n    error: function (err) {}, // 组件方法抛出错误时执行\r\n  },\r\n  // 小程序基础版本库2.2.3之前的生命周期函数在这里声明\r\n  attached: function () { }, \r\n  ready: function() { },\r\n  pageLifetimes: { // 组件所在页面的生命周期函数\r\n    show: function () { }, // 组件所在的页面被展示时执行\r\n    hide: function () { }, // 组件所在的页面被隐藏时执行\r\n    resize: function () { }, // 组件所在的页面尺寸变化时执行\r\n  },\r\n  methods: {\r\n    doSomething () {\r\n      console.log('doSomething');\r\n    },\r\n  }\r\n})\r\n\r\n复制代码支付宝小程序组件\r\nComponent({\r\n  mixins:[], // mixins用于引入组件间共享的属性、数据、方法、生命周期函数\r\n  data: {}, // 组件内的数据\r\n  props:{}, // 外部传入的属性\r\n  onInit(){}, // 组件创建时触发\r\n  didMount(){}, // 组件创建完毕触发\r\n  didUpdate(prevProps,prevData){}, // 组件更新完毕触发\r\n  didUnmount(){}, // 组件删除时触发\r\n  methods:{\r\n    doSomething(){\r\n      console.log('doSomething');\r\n    },\r\n  },\r\n});\r\n复制代码微信小程序组件的生命周期、支付宝小程序组件的生命周期。\r\n7.监听父组件传递给子组件的属性值的变化\r\n微信小程序\r\n微信小程序直接使用observer属性，在传入子组件的属性变化的时候会触发observer对应的函数，newVal是属性的最新值。\r\nComponent({\r\n  properties: {\r\n    currentStatus: { \r\n      type: String,\r\n      value: 'all',\r\n      observer: function (newVal, oldVal) {\r\n        this.doSomething();\r\n      },\r\n    },\r\n  },\r\n  ...\r\n复制代码父组件的wxml中使用组件：\r\n<component-a currentStatus=\"{{currentStatus}}\" bind:changeStatus=\"changeStatus\"/>\r\n复制代码当传入的属性currentStatus变化的时候，就会触发observer对应的函数。\r\n支付宝小程序\r\n根据支付宝小程序文档中的问答，目前还没有像observer那样直接的监听父组件传入子组件的属性值变化的方法。支付宝中可以使用didUpdate代替。\r\n\r\ndidUpdate 为自定义组件数据更新后的回调，每次组件数据变更的时候都会调用。\r\n\r\n要注意的是不论是props改变还是data改变 ，都会触发didUpdate，所以在使用didUpdate根据属性值的变化做一些处理的时候一定要小心，及时返回。\r\ndidUpdate (prevProps) {\r\n  const { currentStatus } = this.props;\r\n  const prevCurrentStatus = prevProps.currentStatus;\r\n  if (currentStatus === prevCurrentStatus) return;\r\n  this.doSomething();\r\n},\r\n复制代码8.子组件中的事件改变父组件中的数据\r\n微信小程序\r\n子组件中的wxml部分：\r\n<view wx:for=\"{{statusOptions}}\" wx:key=\"index\" data-value=\"{{item.value}}\" data-index=\"{{index}}\"\r\n  class=\"list-item {{currentStatus === item.value ? 'selected' : ''}}\"\r\n  bindtap=\"changeStatus\"\r\n >{{item.label}}</view>\r\n复制代码子组件中的js部分：\r\nmethods: {\r\n  changeStatus(event) {\r\n    const { value } = event.target.dataset;\r\n    ...\r\n    this.triggerEvent('changeStatus', { status: value });\r\n  },\r\n},\r\n复制代码父组件中的wxml部分:\r\n<component-a currentStatus=\"{{currentStatus}}\" bind:changeStatus=\"changeStatus\"/>\r\n复制代码父组件中的事件，为了方便，绑定的事件名称和调用的事件名称我使用了一样的，这里的事件名称也可以用别的，比如bind:changeStatus=\"handleA\"。\r\n父组件中的js部分：\r\nchangeStatus(event) {\r\n  const { status } = event.detail;\r\n  this.setData({\r\n    currentStatus: status,\r\n  });\r\n  ...\r\n},\r\n复制代码支付宝小程序\r\n子组件中的axml部分：\r\n<view a:for=\"{{statusOptions}}\" a:key=\"index\" data-value=\"{{item.value}}\"\r\n  class=\"list-item {{currentStatus === item.value ? 'selected' : ''}}\"\r\n  onTap=\"changeStatus\"\r\n >{{item.label}}</view>\r\n复制代码子组件中的js部分：\r\nchangeStatus(event) {\r\n  const { value } = event.target.dataset;\r\n  ...\r\n  this.props.onChangeStatus({ status: value });\r\n},\r\n复制代码父组件中的axml部分：\r\n<component-a currentStatus=\"{{currentStatus}}\" onChangeStatus=\"changeStatus\"/>\r\n复制代码父组件中的js部分：\r\nchangeStatus(data) {\r\n  const { status } = data;\r\n  this.setData({\r\n    currentStatus: status,\r\n  });\r\n  ...\r\n},\r\n复制代码注意，支付宝父组件绑定的事件中拿到的参数直接是子组件传过来的数据，但是微信小程序中父组件绑定的事件拿到的参数是微信小程序的event对象，要通过event.detail才能拿到传递的数据。\r\n9.获取组件实例\r\n微信小程序\r\n父组件的wxml部分：\r\n<component-a id=\"componentA\" />\r\n复制代码父组件的js部分：\r\nthis.componentA = this.selectComponent('#componentA');\r\n复制代码支付宝小程序\r\n父组件的axml部分：\r\n<component-a ref=\"saveComponentA\" />\r\n复制代码父组件的js部分：\r\nsaveComponentA(ref) {\r\n  this.componentA= ref;\r\n},\r\n复制代码10.API\r\n微信的API都放在wx下，比如wx.canIUse，支付宝的API都放在my下，比如my.canIUse。以下是这次项目用到的API的差异：\r\n1.请求\r\n微信小程序\r\nwx.request({\r\n  url: 'https://www.test.com/test/',\r\n  data: {\r\n    a: 'valueA',\r\n    b: 'valueB',\r\n  },\r\n  header: {\r\n    'content-type': 'application/json',\r\n  },\r\n  success: (res) => {},\r\n  fail: (err) => {},\r\n  complete: () => {},\r\n})\r\n复制代码wx.request中的method可以是GET、HEAD、POST、PUT、DELETE、TRACE、CONNECT，里面没有PATCH方法，因为目前项目中没有使用到PATCH请求，所以只简单放一个在微信开放社区中的不支持PATCH请求的解决方案：wx.request()不支持PATCH请求。\r\n支付宝小程序\r\n\r\nmy.request 目前支持 GET/POST/PUT（其中 PUT 请求在支付宝客户端 10.1.92 或更高版本支持）。\r\n\r\n如上所示支付宝小程序支持的请求方式比较少，但是项目中用到了PUT、DELETE请求，无法避免。由后端解决了这个问题。前端传递参数的时候传递一个my.request的参数中不存在的属性，当后端收到这个属性的时候，以这个属性值作为真正的请求方式。\r\nmy.request({\r\n  url: 'https://www.test.com/test/',\r\n  method: 'POST',\r\n  useMethod: 'DELETE',\r\n  data: {\r\n    a: 'valueA',\r\n    b: 'valueB',\r\n  },\r\n  headers:{\r\n    'content-type':'application/json',\r\n  },\r\n  dataType: 'json',\r\n  success: (res) => {},\r\n  fail: (res) => {},\r\n  complete: (res) => {},\r\n});\r\n复制代码当后端接收到useMethod属性时，会以useMethod的值作为真正的请求方式。\r\n微信小程序request、微信小程序网络、支付宝小程序request。\r\n2.拨打电话\r\n微信小程序：\r\nwx.makePhoneCall({\r\n  phoneNumber: '12345',\r\n  success: (res) => {},\r\n  fail: (err) => {},\r\n  complete: () => {},\r\n});\r\n复制代码支付宝小程序：\r\nmy.makePhoneCall({\r\n  number: '12345' \r\n});\r\n复制代码3.复制文本到剪切板\r\n微信小程序\r\n设置系统剪切板的内容：\r\nwx.setClipboardData({\r\n  data: '被复制的数据',\r\n  success: () => {},\r\n  fail: () => {},\r\n  complete: () => {}\r\n})\r\n复制代码获取系统剪切板的内容：\r\nwx.getClipboardData({\r\n  success ({ data }) {\r\n    console.log(data); // data是拿到的系统剪切板的内容\r\n  },\r\n})\r\n复制代码支付宝小程序\r\n设置系统剪切板的内容：\r\nmy.setClipboard({\r\n  text: '被复制的内容',\r\n  success: () => {},\r\n  fail: () => {},\r\n  complete: () => {},\r\n});\r\n复制代码获取系统剪切板的内容：\r\nmy.getClipboard({\r\n  success: ({ text }) => {\r\n    console.log(text); // text是拿到的系统剪切板的内容\r\n  },\r\n});\r\n复制代码4.交互\r\n项目中经常会用到交互API，这里不一一列举出来了，不记得的时候去下面两个路径中查找。\r\n微信小程序界面交互、支付宝小程序交互反馈。"}
{"title": "头条小程序9月官宣多项新能力 ", "author": "Rolan", "pub_time": "2019-9-26 00:02", "content": "声明：本文来自于微信公众号晓程序速报(ID：xcxsubao)，作者：Tsai，授权站长之家转载发布。许久没有动静的头条小程序，终于在 9 月份动了——通过连续发布三项新能力，对自己在功能上进行更全面的武装。尽管这些能力放到小程序生态发展进程中看可能并不新，但它们却是头条小程序生态不可或缺的重要能力，也是未来与其他平台小程序对抗而不落下风的必要能力。三项新能力分别是什么?1)小程序支持多形式分享小程序有分享能力并不稀奇，稀奇的是头条小程序支持转发链接、图文、视频和分享口令等多种不同形式。1. 今日头条端内-【转发至头条】，即可生成小程序链接;2. 今日头条端内-【发头条图文】，选择发图文后，跳转图文发布器;3. 今日头条端外-【分享至其他平台】，比如分享至微信，调用口令分享功能，复制口令后去相应平台粘贴;4. 今日头条端外-【分享至其他平台】，比如分享至钉钉，生成分享卡片，点击后打开跳转到端内打开;相比之下，微信小程序的分享形式就相对单一，甚至朋友圈至今也无法支持微信小程序直接分享，反倒是后发的QQ小程序可以实现这种多端分享。因此从这个角度看，头条小程序要比微信小程序更加强大。2)小程序引导关注头条号这一能力在微信公众号、支付宝生活号都已经实现。当用户未关注时，调起关注弹窗，可点击关注、或关闭按钮，弹窗信息包括头条号头像、头条号名称及简介。其目的还是在于通过内容和用户产生互动，进一步召回用户，同时也能够提升对应文章的推出率。3)头条号菜单插入小程序这个能力也很常见，其实就是加强头条号与小程序的联动，通过头条号分发小程序。进展缓慢?还是又在憋大招自上线以来，头条小程序便备受行业关注，一来由于紧张的头腾关系，未来必有一战;二来头条小程序独特的“小程序-内容”裂变方式，完全不同于现有的小程序平台，使其在未来有着更丰富的想象空间。不过在于一些开发者的交流中，他们表示， 相较BAT等小程序，头条小程序的进展实在是太慢了，至今未形成自己的生态，最近这些更新能力其实也无关痛痒。的确，头条小程序是不争的事实，即使不与微信小程序、支付宝小程序相比，它与发力时间相差不远的百度智能小程序也有较大的差距，并且两者在对小程序的流量分发上十分相似，如果未来被百度智能小程序落下太多的话，确实很难追赶上来。但也有熟悉头条的开发者表示，头条一直喜欢憋大招，张一鸣也很推崇“大力出奇迹”，并且头条小程序是张一鸣亲盯的项目，肯定是不会放手的，所以我们在等一个机会。一位已经入驻头条小程序的商户也表示乐观，认为头条未来会为小程序打通头条系产品，实现多端流量运营，并且举了前段时间火山小视频推出小程序作为自己观点的佐证。头条小程序的突破口在哪?最新统计数据显示，微信小程序月活6. 8 亿，小程序数量超 230 万，覆盖行业 200 多个;支付宝小程序月活 5 亿，小程序数量超过 100 万;百度小程序月活1. 8 亿，小程序数量超过 10 万。但截至目前，头条还未曾公布与小程序相关的数据。如何在算法和流量支持下，实现用户规模的突破，这是头条小程序目前亟待解决的问题。 而这其中的首要问题是，头条小程序必须找到自己的优势类目。BAT的小程序都有各自的侧重点所在：在微信小程序生态中，37%的应用为游戏类，21%为电商类;支付宝小程序中，53%的应用属于生活服务垂类;在百度智能小程序中，更多的是与搜索相关的服务，QQ小程序中，则更多偏向功能个性化、休闲趣味、校园场景等;那么头条小程序能做什么，或者说更擅长做什么?在我们看来，小游戏、泛娱乐、内容视频是大方向，头条娱乐基因很强，搭配精准的人工智能推荐和信息分发，能够让这些类目的小程序更快地跑出来，这是头条的优势。最后给你们放个彩蛋：如今进入头条小程序中心，系统会有更新提示“新版本已经准备好，是否立即使用?”，不过在确认使用后，并未发现太大的改版，并且二次进入后还是会有相同提示，莫非这次头条小程序真的要放大招了?会有奇迹出现吗?我已搬好小板凳在等待。"}
{"title": "QM报告中的小程序江湖：微信“尖”、百度“均” ", "author": "Rolan", "pub_time": "2020-6-4 00:33", "content": "文章经授权转自公众号： 科技向令说(ID：xiangling0815)在QuestMobile刚刚发布的《2020移动互联网全景生态报告》中，从2019年4月到2020年4月，移动用户整体时长增长12.9%，繁荣持续。而QM同时提到，移动互联网流量竞争日益激烈、全网整体增长放缓，流量的深度运营就成为趋势。所以，作为平台流量运营的核心展示形态，小程序的地位不断提高、BAT持续加码就在意料之中了。不过，一边，是小程序成为开发者们绕不开的流量通路，另一边，BAT等几个主要小程序平台的某种分化也更为明显——不同类型的开发者在普遍多平台开发的情况下，可能面临谁是“最优先配置平台”的问题。这里的答案不唯一，却表现出更强烈的倾向。01小程序“头部效应”不能免俗，但中长尾开发者这次还有机会小程序的“理想”是替代APP，让平台成为便捷、整合的入口。对开发者而言，它其实有两重价值——除了作为新的流量通路在BAT三家的超级APP下“蹭”流量，对很多丧失了移动互联网APP时代机遇的开发者而言还是全新的机会，几乎为它们重开了一次牌局。只是，一种现象正在阻止这些价值企图的实现：愈演愈烈的头部效应。在小程序平台上，流量、资源也不可避免出现富集效应，头部产品、头部行业不断涌现，这原本不是什么坏事，代表了行业的繁荣和某种“成熟”，但是，对那些错失APP时代机会，或者有志于在小程序时代“大干一番”的中长尾开发者，则面临大门“再一次”逐步关闭的现实。在微信平台上，我们可以看到拼多多、京东、京喜的用户数在亿级，淘宝在支付宝小程序中用户也接近5000万，美团外卖、饿了么在整个小程序世界的流量甚至超过了APP本身。这代表了小程序平台的成功，但反过来看，又何尝不在说明小程序世界与APP世界正在“同频共振”。QM的报告中给出了这样一张图：直观上看，BAT三家的小程序的差异性特点显露：微信“尖”：起步早、类型丰富，结合那些过亿用户的小程序，其实它更像一个有着大量尖峰级头部产品的平台;支付宝“钻”：支付宝转向本地生活之前，在“商业”概念下的耕耘就已经很深，相较于微信的产品突出，它聚焦商业的特性使其行业头部效应更明显;百度“均”：整体而言，百度的小程序分布更为“平滑”，资源、流量没有过分富集到特定的产品和行业上。如果把目光放到中长尾开发者身上，随着多平台“下注”成为常态，要想在头部效应下博得更明显的机会，在谁更优先这件事上，最后入局的百度智能小程序反而可能是最好的选择。即便小程序发展已经超过两年，中长尾开发者这次还有机会。02谁解决了这三大痛点，谁就能俘获中长尾小程序开发者?拆分来看，中长尾小程序开发者主要面临三大痛点问题，百度智能小程序相较于其他平台更好地解决了这些问题——反过来，其更均衡的布局亦是中长尾小程序开发者在“更适宜的环境”下扎堆生长的结果。1、流量荒：小程序“平台”价值需要回归让小程序们在巨大的流量池里自由生长，可以催生大量顶尖的产品，但随着这一进程的继续，头部效应也会越来越明显，小程序仅靠自己的力量越来越难以获得流量。如果小程序平台没有“平台化的支撑”，而只是一个自由市场，则开发者在根本上还是要像做APP那样投入等量的精力和资源，“平台”的意义对中长尾开发者而言就有点坐不住了。很明显，这方面百度、支付宝这样的中心化流量分发平台具有优势，对解决中长尾开发者第一个心腹大难题有直接的优势，而其中由于支付宝在商业方面优势明显，百度的流量分发能力似乎更具有普适性，更能满足不同场景需求。更重要的是，中心化流量分发比“自由生长”模式更考验分发的精确性，因而百度搜索(用户主动)+信息流(用户被动)的流量分发会更普惠和更精准——不可能用户搜到特定的服务你不给他展示，也不可能用户在浏览信息流资讯时明明对他有很深的洞察却非要推荐一个不相关的小程序，百度只会、也只能根据广泛多样的用户需求分发小程序。而这无疑利好中长尾开发者，只要他们的产品是用户所需求的，就不担心被浩瀚的流量池所埋没。在百度平台上，有个“一起画电影”小程序，基本的功能是用户在画板区随手画一笔，就自动补充线条，组成电影的经典海报简笔画，并附上原画对比图、呈现台词以供保存。这个小程序当下已经有超过166万用户。可以认为，在百度这种独特的小程序生态下，类似的中长尾小程序开发获得了更多的施展空间。2、开发难：技术不能仍然是一道门槛虽然小程序的发展已经超过两年，但事实上围绕“技术”的优化从来没有停止，或者说，很多不足、痛点仍然存在。对大型、头部开发者而言，资源足、实力雄厚，即便平台的开发环境做得不尽如人意，也可以主动去适应平台，但对中长尾开发者而言，如果开发的便利度太低导致门槛太高，则可能损耗它们本就不算多的资源，甚至影响商业化机遇。这其中的差别，举例看就更清晰。某乐谱小程序开发者2019年在百度和微信分别开发了小程序版本，分别接入百度OpenCard和微信搜一搜，虽然接入流程简单和相似，但该开发者最终成功接入微信耗时将近2个月，而在百度只用了一个上午就把接口写好并提交测试迅速上线。究其原因，百度作为互联网公认的技术标杆，小程序技术方面的优势仍然牢牢把握，无论在开发文档的全面性还是测试审核流程的顺滑度，相对于业界公认“擅长产品”的微信都有客观上的优势。完成部署后，该小程序在百度DAU达到8W+，PV为 20W+，高出微信小程序5倍。开发者在公开分享时认为，曲谱内容数据量级大，用户习惯于通过搜索的形式获取内容，搜索的流量大盘是小程序表现的保障，此外，百度平台为了丰富移动生态遴选优质内容也让这些中长尾小程序得到了机会。可以说，技术不再成为门槛，是这一切便利的开始。3、商业愁：孤军奋战不应该是小程序的常态除了给予流量，平台的价值要体现出来，商业化赋能是另一重重要因素，在拉新、转化、留存这些环节上，中长尾开发者对平台的需求显然要比头部开发者更迫切。这仍然是中心化小程序平台的优势所在。或许是由于小程序对移动生态战略十分关键，百度平台比其他玩家更关注企业、开发者的变现效率，关注他们的实际收益。例如，在拉新环节，百度智能小程序在线上为开发者提供的除了搜索和信息流广告，还有智能小程序独占流量的商品卡片位置;在线下，百度聚屏广告也提供丰富的线下扫码环境。而更值得注意的是，百度智能小程序的智能商品推荐API，能够结合百度大数据能力和AI算法，帮助商业客户快速识别用户画像并做出千人千面的商品推荐，这对中长尾开发者而言将快速解决十分头疼的冷启动问题。在商业化这件事上，让小程序自生自灭可以锻造顶级产品，却可能忽视大量中长尾开发者的利益，或许，平台与小程序联合战斗才应该是常态，也更符合一个平台应有的价值。03平台与小程序的关系，也有新的定义?私域流量是近一年来的热门，它的火热反映了一个根本矛盾：开发者掌控流量的需求日益增长，平台却牢牢攥住流量主导权不撒手。现在，小程序已经成为私域流量的主要通路。在流量这件事上，公域流量与私域流量似乎有无法调和的矛盾，处处体现某种火药味，这同样出现在小程序与平台的流量归属权问题上。而换个角度看，如果私域不是从公域“切分”走流量，不是无限地从公域索取，而情况变成公域流量就是由私域流量所构成，那么所谓的矛盾也就根本上不存在了。以这样的方式来理解百度智能小程序，它并不是超级APP利用流量优势搞出来的副产品，而是移动生态的必要环节。百度的所有移动流量，几乎都可以找到对应的小程序“抽屉”，这些流量既属于百度，在用户需求下更属于开发者，是用户获得信息、内容、服务闭环的一种必要。流量的归属上，百度让渡得更明显，多平台、开放式布局下，更多场景的中长尾开发者能从百度平台获得更独特的私域沉淀价值，正在加入进来。例如，百度3月份发布的《百度智能小程序2019年度榜单》显示教育类小程序在短期异军突起且增速较快，其中，有55%的教育类小程序在第四季度上线，加上疫情期间的2月环比上涨30%，这些都说明百度智能小程序已经成为在线教育企业冷启动的新选择。而从QM过去的报告也可以看出，生活服务、移动购物等在百度智能小程序中的占比持续位居前列，私域流量正在持续变现，这背后是用户消费习惯的逐渐养成，也说明百度小程序“更贴近开发者的流量”的商业化价值潜力进一步加深。总之，中心化分发+全场景布局对中长尾小程序开发者更为有利，这方面百度智能小程序占据了行业独特的地位，利好大部分开发者以及资源不足、犹豫优先布局哪个平台的中小开发者。只有认清平台优势才能不绕弯路，才能避免无效的投入。"}
{"title": "微信小程序-bindtap等事件传参 ", "author": "Rolan", "pub_time": "2021-2-9 23:48", "content": "什么是事件事件是视图层到逻辑层的通讯方式。 事件可以将用户的行为反馈到逻辑层进行处理。事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处理函数。事件对象可以携带额外信息，如 id, dataset, touches。看图，因为需要传递的数据比较多，所以我们通过dataset携带参数信息。如果只有一个参数，可以通过id来传递。详解（以常见的tap点击事情为例）wxml<view id=\"tapTest\" data-hi=\"WeChat\" bindtap=\"tapName\"> Click me! </view>1JSPage({\r\n  tapName: function(event) {\r\n    console.log(event)\r\n  }\r\n})12345event 打印结果{\r\n\"type\":\"tap\",\r\n\"timeStamp\":895,\r\n/////////////////////////////////\r\n\"target\": {\r\n  \"id\": \"tapTest\",\r\n  \"dataset\":  {\r\n    \"hi\":\"WeChat\"\r\n  }\r\n},\r\n\"currentTarget\":  {\r\n  \"id\": \"tapTest\",\r\n  \"dataset\": {\r\n    \"hi\":\"WeChat\"\r\n  }\r\n},\r\n///////////////////////////////\r\n\"detail\": {\r\n  \"x\":53,\r\n  \"y\":14\r\n},\r\n\"touches\":[{\r\n  \"identifier\":0,\r\n  \"pageX\":53,\r\n  \"pageY\":14,\r\n  \"clientX\":53,\r\n  \"clientY\":14\r\n}],\r\n\"changedTouches\":[{\r\n  \"identifier\":0,\r\n  \"pageX\":53,\r\n  \"pageY\":14,\r\n  \"clientX\":53,\r\n  \"clientY\":14\r\n}]\r\n}123456789101112131415161718192021222324252627282930313233343536注意两点：1、data-名称 不能有大写字母，如果需要，可以通过 - （中划线）来连接单词，编译的时候小程序会将第二个单词首字母自动大写。图中代码是为了自己标志，所以第二个单词的首字母大写了，其实可以不用。data-* 属性中不可以存放对象。2、注意打印结果中target和currentTarget的区别。target 触发事件的源组件。currentTarget 事件绑定的当前组件。如果你在父容器上绑定了事件并传参，当你点击父容器时，事件绑定的组件和触发事件的源组件是同一个元素，所以currentTarget 、target 都可以拿到参数，但是当你点击子元素时，target 就不是事件绑定的组件了，所以拿不到参数。由于事件冒泡的机制，父容器上绑定的事件依然可以触发，所以currentTarget 依然可以拿到参数。说明id传参和dataset类似，只是最后获取值的时候不同。event.currentTarget.id"}
{"title": "小程序重燃战火，腾讯与阿里激战正酣 ", "author": "Rolan", "pub_time": "2019-10-12 00:01", "content": "10月9日，阿拉丁指数和阿拉丁小程序数据统计平台发布了2019年9月小程序报告。报告显示，9月份，小程序平台的竞争不仅没有减缓，反而激战正酣。先是微信小程序宣布新增视频广告组件，并支持嵌入腾讯直播，加速流量变现，打破了平静。后来，支付宝小程序紧随其后，宣布与微博全面互通，各种小程序抱团反攻，拉开激战序幕。微信小程序开放好物圈，内嵌直播相关数据表明，短视频小程序发展速度较快，微信平台的每个角落都在渐渐渗透短视频的内容，小程序让微信引领短视频的发展趋势，正在改变中国短视频的格局。而且，微信还宣布对非游戏类小程序，开放视频前贴广告和视频广告，短视频内容类小程序无疑将成为最大获益方。值得一提的是，微信小程序“好物圈”也正式开放注册，商户可以通过自助申请以及好友邀请两种方式创建自己的圈子(社区)。“好物圈”开放注册表明，微信的封闭生态被撕开，内外部流量实现互通，为陌生人社交提供了交互场景。有观点认为“好物圈”或将迎来一波小注册潮。此外，微信小程序配置直播入口，点击后即可打开内嵌腾讯直播H5页面观看直播。内嵌直播不仅能够满足品牌主在小程序中开直播，同时也能让其在直播间跳转回自己的小程序，方便粉丝购买商品，完成购买后，还能返回直播间继续观看直播。相关人士表示，在微信小程序中内嵌腾讯直播，可能会进一步引爆小程序电商直播，加速流量变现。支付宝联合微博，抱团反攻面对微信小程序的一系列操作，支付宝小程序也开始抱团反攻，腾讯和阿里两大巨头的小程序之战再次打响。据悉，目前支付宝已累计上线100多万个小程序，月活跃用户数突破5亿。公开信息显示，支付宝小程序事业部于2018年9月12日成立，由何勇明负责。彼时数据显示，支付宝小程序在公测期已经积累2万个小程序、1.2亿日活。2019年9月17日，蚂蚁金服支付宝事业群总裁、阿里巴巴合伙人倪行军表示，经过一年的时间，小程序已经从一两万涨到了一百多万。9月17日，支付宝小程序一周年大会宣布，支付宝小程序将与有4.8个亿月活跃用户的新浪微博全面互通。新浪微博将利用自身庞大的社交关系链和优质的内容扩散能力，帮助支付宝小程序商家更好地把服务传达给用户，而支付宝小程序丰富的服务场景也将为微博的内容消费带来无缝衔接的服务闭环。阿里巴巴首席执行官张勇提出“阿里商业操作系统”的概念，阿里正式推出繁星计划，并建立阿里巴巴小程序多端联盟。之后，支付宝小程序升级为整个阿里生态的小程序，成为阿里巴巴商业操作系统的重要组成部分。图片来源于阿拉丁指数何勇明表示，阿里商业操作系统把阿里的营销能力、资金能力、物流能力、数据计算能力等打包，放到小程序商家背后运营能力当中，让商家不仅能够在C端触达用户，同时在B端实现数据化运营升级，也能够一端多发。一直以来，支付宝接入了很多业务，支付宝小程序接入12306、地方公交、关税、快递公司、理财保险、水电煤气……只要是和钱相关的业务，在支付宝上几乎都能够找到。有专业人士认为，微信是流量入口，受众面广一些，用户打开的几率也比较大。而支付宝体系，做信用生活有关的小程序相对来说比较有优势。相对于微信的“社交场景”，支付宝则更倾向于“交易场景”。经过不断的演化，小程序逐渐成为一个打通线上线下的入口，而微信和支付宝的区别在于：支付宝是通过场景引导，为阿里巴巴生态体系中的线下阵地引流;而具有社交属性的微信，则是通过线下的场景入口导流到线上，从而实现微信的流量增值。"}
{"title": "在微信小程序和APP中嵌入H5时，如何交互？ ", "author": "Rolan", "pub_time": "2019-10-12 00:12", "content": "在微信小程序和APP中使用H5时，如何做事件交互？微信小程序使用web view嵌入H5，使用方式见\t微信文档使用中要注意的：1. <web-view>标签嵌入式全屏的，基本上就不能再在页面上加其他的功能了2. 文档中提到的bindmessage属性，很鸡肋:sweat:：文档上说会在特定时机（小程序后退、组件销毁、分享）触发并收到消息。 实际业务上的交互只能靠wx.miniProgram.navigateTo带着交互参数跳转某个页面实现H5端代码// 引入微信jssdk\r\n\r\n<script type=\"text/javascript\" src=\"https://res.wx.qq.com/open/js/jweixin-1.3.2.js\"></script>\r\n\r\n// 交互方法，例如点击了按钮\r\n\r\n// 判断当前处于什么环境，根据不同环境做对应的处理\r\n\r\nif(window.\\_\\_wxjs\\_environment === 'miniprogram'){\r\n\r\n    // 当前是微信小程序环境\r\n\r\n    wx.miniProgram.navigateTo({url: '/XXX/XXXX?id=1'})\r\n\r\n} else if (isAndroidApp()){\r\n\r\n    // 其中\"app\"是客户端注入的实例，可自定义；“myMethod”是用来交互的方法，不同事件可,自定义。\r\n\r\n    app.myMethod({id: 1})\r\n\r\n} else if (isiOSApp()){\r\n\r\n    // “myMethod”是用来交互的方法，不同事件,可自定义。其中参数如果为空时，还是要传个null\r\n\r\n    window.webkit.messageHandlers.myMethod.postMessage({id: 1});\r\n\r\n}判断当前是否是Android客户端打开function isAndroidApp() {\r\n\r\n    var ue = navigator.userAgent\r\n\r\n    // XXX是和APP的协议名称\r\n\r\n    return (ue.match(/XXXX\\\\/Android/i) == \"XXXX/Android\") ? true : false\r\n\r\n}判断当前是否是Android客户端打开function isiOSApp() {\r\n\r\n    var ue = navigator.userAgent\r\n\r\n    // XXX是和APP的协议名称\r\n\r\n    return (ue.match(/XXXX\\\\/iOS/i) == \"XXXX/iOS\") ? true : false\r\n\r\n}"}
{"title": "微信支付九宫格新增限时推广“ETC助手”小程序 ", "author": "Rolan", "pub_time": "2019-9-29 00:01", "content": "站长之家(ChinaZ.com) 9月27日 消息:昨日，微信支付在“腾讯服务”与“第三方服务”中间新增了限时推广的“ETC助手”。据“ETC助手”小程序资料显示，其主体为安徽高灯微行科技有限公司，启信宝信息显示，高灯微行成立于 2017 年 8 月，马化腾实际持有该公司10.86%股份。5 月 24 日交通运输部办公厅印发《关于大力推动高速公路ETC发展应用工作的通知》，《通知》指出，按照计划，到 2019 年底，各省（区、市）汽车ETC安装率达到80％以上，通行高速公路的车辆 ETC 使用率达到90％以上，高速公路基本实现不停车快捷收费。7 月 1 日，微信宣布，即日起，车主在微信小程序或城市服务上就能直接申办ETC，全国联网通行，享受微信支付“先通行后扣费、无需充值”服务，还能在线开具电子发票。用户可在微信端搜索ETC申办小程序，选择办理所在省份的ETC卡、校验车牌、填写收货地址、支付完成后按指示上传个人身份证与车辆资料、绑定微信支付，即可完成申办。在 9 月 24 日的国新办发布会上，交通运输部部长李小鹏公布数据称，截至 9 月 18 日，全国ETC用户累计达到1. 3051 亿，完成总发行任务的68.39%。其中今年新增用户 5396 万。目前ETC日均发行量约 60 万张。ETC助手具体办理步骤为：填写资料：仅限 7 座及 7 座以下的小型汽车办理， 1 辆 车仅允许办理 1 张ETC卡，填写车牌和收取ETC设备的收件地址。选择银行：选择中国银行、工商银行、农业银行的银行卡绑定支付，验证通过后，免费办理ETC。交保证金：为保障免费发行，收取ETC设备激活保证金 99 元(绑定中国银行卡无需保证金)，保证金在激活后当天退回。上传证件：为验证车辆真实性，需上传车主身份证及行驶证照片，1- 3 个工作日完成资料审核与ETC设备定制。安装激活：ETC设备定制完成后1-3 个工作日寄出，收到后按\"ETC助手\"小程序指引激活ETC设备，即可通行使用。"}
{"title": "小程序跨端全域用户数据运营，如何制定整体方案？ ", "author": "Rolan", "pub_time": "2020-6-4 00:02", "content": "小程序跨端全域用户数据运营的关键在于搭建增长闭环，打造自己的小程序生态。不同小程序平台的规则不尽相同，企业在制定整体的跨端全域数据运营方案时，需要结合具体场景来进行调整，形成一个完整的跨端的全域用户数据的闭环方式。以下为友盟+的产品专家@冯成蹊演讲实录，由人人都是产品经理团队依据嘉宾分享内容整理，编辑有修改： 我是来自友盟+的冯成蹊，很高兴能来到起点学院直播间，做这次的分享，我今天给大家带来的分享主题《从小程序到小程序的闭环增长法则》。一、小程序市场环境、机遇与挑战从2020年开始，微信逐步开放了小程序的商业化，商业化进程的加快使小程序的数量、DAU以及用户的覆盖量都有了爆发式的增长。1. 小程序数量和用户都有明显增长首先是小程序DAU从3.3亿直接跨越上升到4.5亿。2019年底，据统计小程序的整体开发应用数在330万左右，原本预计2020年能达到330万-390万之间。因为疫情，整个小程序的数量在前3个月内就已经暴涨了60万，所以预测到2020年，小程序的数量级可能会突破500万。这种增长不仅发生在互联网行业，也延伸到线下传统行业。小程序的的受众群体也从原来的中青年、年龄层级较小的互联网用户，扩张到整个用户群体，包括老年群体用户，更小一级的用户群体等。2. 不同行业对小程序相关场景的关注情况小程序目前涉及的行业主要分布在品牌零售、互金、房产、酒店旅游、在线教育、生活服务、小游戏以及社交内容。小程序虽然是一种新型的移动互联网形态，但它跟传统App的玩法还是相类似。我们把相关场景划分成四个阶段，获客、激活/转化、留存/复购、分享。不同行业的开发者对于不同阶段关注度的情况都不一样。像生活服务行业、游戏行业对于这四个阶段关注度都偏高；而社交内容行业对于获客阶段的关注度偏高，但激活和转化阶段就偏低。其它行业像酒店，互金，房产对各个阶段的关注度都不太一样。要根据不同行业的获客来源，获客成本，复购率，复购成本等情况来决定对于小程序不同阶段的关注度。3. 不同阶段关注的核心场景和核心问题很多人在开发小程序的不同阶段都会遇到下面的疑问：比如获客环节：用户从哪里来？ 用户活跃度怎么样？哪些场景来的用户质量更好？ 投放的广告带来了多少用户？新用户从哪里来？效果怎么样？各渠道ARPU、LTV？比如激活和转化环节：有多少用户转化了？核心路径的转化率是多少？用户为什么转化？活动、内容、选品、推荐？新用户一般需要多长时间转化？没转化的用户是谁？ 用户画像是怎么样的？没转化的用户去哪里了？ 哪些渠道、什么特征的用户转化率高？比如留存环节：有多少用户转化了？核心路径的转化率是多少？用户为什么转化？活动、内容、选品、推荐？新用户一般需要多长时间转化？没转化的用户是谁？用户画像是怎么样的？没转化的用户去哪里了？哪些渠道、什么特征的用户转化率高？比如分享环节：多少用户分享了？ 带来了多少新用户？分享来的用户转化怎么样？ 用户都分享什么内容？内容的分享回流比怎么样？哪些类型的用户病毒系数比较高？哪个渠道带来的用户愿意分享，病毒系数高？关于分享环节，小程序和App有很大的区别。分享在App端不是一个关键性的功能，在App里监控后期的激活效果不太好做。而在小程序端天然有一种让你去分享的场景，可以帮你去直接监控分享用户的渠道来源以及回流效果，并画出小程序分享之后的用户图谱。如果还想尝试高级的分享玩法，比如通过病毒性的传播来达到一个最好的效果，我们也可以考虑公众号和小程序一起运营的效果怎么样？公众号什么内容更适合涨粉？什么内容更适合转化？消息召回效果怎么样？给哪些人发什么内容的消息？二、搭建小程序的数据增长闭环1. 小程序数据运营的关键点前面讲到小程序面临的环境，和不同阶段需要关注的核心问题，接下来跟大家分享如何去通过数据的方式搭建小程序的增长闭环。关于闭环，我列出了四个步骤并提取了几个关键词。（1）多端部署强调要以快速的方式尽可能多地去部署有支持小程序的平台，像腾讯系、阿里系、头条系、百度系都可以考虑布局。（2）数据驱动不仅是指你能看到小程序整体用户的数据，也要去全方位地了解小程序用户在获客激活分析转化留存这四大部分的全生命周期的数据模型（3）矩阵布局结合小程序的多端部署，要考虑到矩阵布局不仅是占有某一个小程序的平台，也要深入了解小程序平台的特性，结合产品特性挖掘红利。（4）私域贯通如果已经占领了多端，并且每一端里面都利用了小程序的提供的能力或者平台提供的红利，那如何去做到真正的跨端并实现全域用户的打通呢？下面我分成四个部分来做讲解。2. 各小程序平台开始建造体系化小程序生态目前阿里系，腾讯系，头条系，百度系，快应用（安卓的手机应用的联盟厂商推出的平台），以及360的PC端小程序，美团的小程序等，都在尝试打造自己的小程序的生态。腾讯系的微信中所有对外开放的小程序的平台，都是以目前开放的生态能力为主，包括公众号、支付、订阅号等，形成了微信自己的生态圈。阿里系有支付宝小程序，正对外逐步开放升级成为阿里系整体的小程序；阿里系还有钉钉，天猫精灵，高德，IoT的小程序，后续蚂蚁金服还会开放mPass平台。现在有很多开发小程序的工具，而且小程序开发成本并不算高，我建议大家在开发小程序的时候尽可能地结合自己小程序的特点，找一个能一次性开发、同时支持多平台的工具，研究下各个平台的玩法并同步部署到多个平台。这样既不会花费太多的时间，也能充分利用各平台带来的优势和流量红利。3. 小程序用户生命周期各阶段分析模型我们前面拆解了不同阶段需要关注的数据，结合数据我们把他简单划分为小程序的生命周期模型，其中又包含获客、激活、分享、转化这4个阶段，这里有一定的先后顺序关系。（1）全方位了解用户从哪来小程序不管是作为互联网平台还是应用，首先要解决的是获客的问题。对于小程序而言，更关注的是获客的场景来源，不同推广活动或推广渠道的获客效果，全方位了解用户从哪里来。（2）多维度掌握用户使用情况针对上面的获客用户，我们需要继续关注用户在使用小程序过程中的行为价值和使用习惯，我们从以下4个模型中去观测：用户趋势：比如新增用户、活跃用户、使用时长、使用深度等趋势的变化情况；页面分析：小程序可能分为了不同的页面或者功能，需要去关注每一个页面上用户的停留时长，页面的的新增活跃、跳出率等情况；参与度分析：一般观测的指标有人均使用时长，人群的打开次数等，这些角度能判断客户对于小程序的黏性程度。留存分析：一般关注两个维度，新增用户的留存和活跃用户的留存。因为小程序里没有固定的留存入口，用户只会在需要使用的时候才去打开小程序，所以留存对于小程序并不好做。想做好小程序的留存，会和你的业务有很大的相关性，主要取决于你在做小程序留存时以什么样的指标来衡量留存情况，和App运营的差别会比较大。（3）实时查看分享回流效果。分享是小程序里非常重要的一个阶段，这其中的观测指标有：分享行为分析、页面分享次数、页面分享人数等。（4）自由定义核心业务指标。转化是指小程序怎么在自己业务端上通过埋点自定义事件去增加关键路径的观测。以电商小程序举例，不仅要看到获客，用户激活，分享的行为分析，更重要的是看下单转化的情况。下单转化阶段中，又要根据不同渠道的电商转化路径，分别在关键路径上增加自定义事件的埋点，并把埋点做成转化漏斗，才能去判断不同关键路径上的转化率情况，以及在哪个事件上做优化，最终实现用户全生命周期的各阶段数据分析模型的监控。4. 四大小程序平台的特色想要玩转小程序，不仅要布局多平台，还要利用好不同小程序平台各自的能力。下面列举目前四个比较大的小程序平台的特色。（1）微信小程序微信的小程序平台一直主打“去中心化”，但目前也开放了越来越多的小程序场景，包括在后台提供了很多扶持小程序的能力插件，比如直播插件；后台的微信电商；以及小程序与群工具的结合。如果把小程序与这些流量入口结合起来，能很好地去帮助提升小程序的留存。（2）支付宝小程序去年支付宝小程序被升级成为阿里的联盟系的小程序。所以对于阿里系，在支付宝平台开发完的小程序，也可以一键发布到多个App像支付宝，钉钉，高德以及蚂蚁金服的mPass平台来运行小程序。mPass平台有他独特的优势，可以支持把支付宝小程序的能力加入到自己的App里面。开发者不仅可以多端开发小程序并发布到各个平台上，还可以在自己的小程序平台上面运行自己的小程序，也可以把支付宝上面优质的小程序引到自己的App上运行。就相当于不需要再去给App开发一个小程序平台，你可以把所有的小程序引流到App上并打通作为一个能力的补充。这块能力现在正在做开放，如果大家想了解可以到mPass平台上面去了解相关的产品介绍。（3）百度智能小程序百度作为信息流的搜索平台，信息搜索、信息流、AI、开源联盟一直是他的优势。百度的小程序，他结合了自家的产品联盟，像首摆，百度地图，爱奇艺等，这些都可以一键开发并发布到多个App平台上运行小程序。同时百度作为所有搜索流量的入口，后台底层的技术能力做得很强。如果你发布了小程序到百度系的平台，在搜索词的曝光以及搜索曝光完之后的使用都能带来不错的体验。百度还有一个优势就是，他也做了类似于小程序框架的开源联盟。你可以申请加入开源联盟，拿到百度小程序的框架，也可以加入你自己开发的小程序，在自己的App上去做运营，也可以接入百度系的小程序。（4）字节跳动小程序字节跳动最大的特色是他的内容流以及短视频流。目前字节跳动还没有大规模对外做小程序的推广，但我们已经能看到小程序在今日头条的信息流，抖音的短视频流里做的一些商业化尝试。字节跳动平台的小程序未来或许会带来一波流量红利点。这四个大平台，不仅要考虑在不同平台做小程序，更要去理解除了平台可以开放的能力以及平台提供的特点以外，怎么结合自己业务的情况去更好地开发与平台契合的小程序的能力，充分把握住各个平台带来的流量红利。5. 跨端全域用户数据运营方案再讲最重要的一点，如何去做整体的跨端全域用户数据的运营方案？（1）App端和小程序端用户的打通上图中间圆圈表示的是小程序应该按照自身的业务特性接入不同的小程序平台，但要怎么结合App端、公众号端、生活号端来做跨端的运营呢？首先是利用好App端的授权登录功能，这是在目前几大小程序平台里都支持的功能。在App端授权用qq，微信，支付宝账户，或者钉钉登录完成之后，后台会给你提供一个可以用于打通多端用户的ID。用户登录后，以业务ID或独立ID的方式就能直接知道用户同时在使用小程序的平台和App。其次App端和小程序端都有分享功能，两端分享的功能现在也已经直接打通。但微信为了防止大家把小程序的用户导入到App中，所以目前只支持从App端分享出来的小程序，并同时在运行小程序时，可以从小程序端跳转回App端；单独打开小程序时，是不支持从小程序端跳转到App端的。通过授权登录以及分享激活的方式，可以很好地打通你在App端的用户和小程序端的用户。（2）公众号/生活号端和小程序端用户的打通第二部分是通过业务驱动的方式打通小程序端的用户和关注生活号或者公众号的用户。在用户使用小程序的时候，通过业务全面设计的方式，引导用户去关注公众号。因为公众号内的留存运营相比小程序的留存运营更容易，在公众号/生活号端给用户发送通知的方式也比小程序的通知方式多很多。（3）数据银行已经有了App端、小程序端，生活号/公众号端的用户信息，应该怎么去做跨端之间权益的触达呢？以友盟+的“数据银行”举例，首先需要按照统一的用户规模、用户的ID字段来采集用户数据，把这些字段统一存储在数据银行，包括采集的ID号，手机号，用户等级，用户付费信息，用户分组信息等。我们会在数据银行里帮你把这些用户全部打通，并给出统一的用户画像。这些画像可以帮助你结合整体的全域，去做用户分层和运营。我们也可以提供全方位多端的全域运营触达方案，包括App推送，公众号推送或者是小程序的订阅消息等多种用户运营触达方式，帮助你实现更好的触达效果。三、剖析用户20倍增长的实际案例介绍完增长闭环的四大模型，我再给大家列举几个实现较快用户增长的实际案例。案例1：边走边吃他利用支付宝小程序的两大能力实现了用户20倍增长的目标。现金红包在用户第一次打开小程序时就提醒有现金红包待领取，签到可领取现金红包；同时结合了分享裂变的能力，分享邀请新用户也可以领取红包，利用现金红包这种直接利益点，让小程序取得了很好的留存效果。运动数据小程序接入社交运动的数据并结合支付宝内计数排行的功能，通过赚取步数提取现金的利益点来刺激用户经常打开小程序。他也设置了一定的提现门槛，结合了他想推广的兼职任务的商业化玩法，我们也可以参考借鉴这种商业化玩法，比如结合商城，或者其它需要去推广的任务，让用户去做流量分发，或者接入其他商户来承担自己平台的现金支出。这种商业化玩法需要关注每一步的访问量、拉新用户、转化率等数据。当时边走边吃小程序接入了友盟+小程序的数据统计，能快速掌握获客、激活、分享、转化、留存全链路数据表现，并分析不同用户的数据情况。接入后不到一个月的时间内用户增长了20多倍，留存率以及小程序的收藏率都有很大的提升。案例2：西贝疫情爆发后有条重磅新闻称西贝现金流大概只够三个月，但如果看其微信数据，会发现他们80%的营收已经是来自于线上。西贝微信上面有9万多个真实客户，这9万多个顾客在微信上面下单，支撑起了西贝的庞大营收。他们能实现用户快速增长的关键点在于，结合了企业自身的特点并最大化地利用企业微信的玩法，最终利用小程序完成转化。在无法线下复工的情况下，西贝全国 200 多店的客户经理每天通过企业微信群发消息、1对1交流、企业微信朋友圈等服务 9 万多名用户，把商城和外卖的小程序都挂到了门店人员的企业微信资料里，客户直接点开就能找到购买入口，大大促进了线上服务的转化。疫情期间，西贝每日外卖业务的营业额约 200 万元，线上营收占总营收 80% 以上。跨端用户运营案例有同学提问，怎么去做小程序端跟App端的跨端运营方案？以一家电商公司举例，他们开发了App端的商城主要用于新品展示，也在微信公众号做了小程序用于品牌及新品的内容介绍。他们面临的问题是App用户转化遇到瓶颈，但微信小程序里用户又比较封闭，怎么找到适合的方法把两端的私域打通来运营呢？列举一个数据化打通的规范化场景。小程序私域场景我们能知道用户里在小程序看过哪些推送文，可以把每一篇文章简单划分出一个兴趣标签。比如文章是与新品卫衣有关，那我们可以用埋点的方式在小程序里给用户打上“看过新品卫衣”的标签。App私域（社交场景）只要用户使用过微信号授权登录的功能，我们就可以在小程序里给用户打上“使用微信号登录App“的标签。App私域（移动端场景）我们能知道用户在使用App时的场景和时间，包括打开频次、打开时间段以及访问时长等，可以为用户打上类似“晚上9～10点启动App”表示使用习惯的标签。App私域（推送场景）可以简单给用户打上“启用推送通知”或者关注过某些消息的标签。CRM私域又能直接以业务成交的方式给用户打上类似“曾经购买过服饰”的标签。所有产生的标签通过刚才App及小程序之间的登录关系，可以把所有这些行为标签数据串联起来打通在一个用户身上。通过这些标签，我们就能进行全域人群的洞察。例如上图得出的洞察结论就是“微信小程序”上有“浏览过新品卫衣”并且在“App端购买过服饰”的用户群有“喜欢在21点启动App”的习惯，并且“当前App的推送通道是打开的”，所以接下来应该晚上21点左右通过App私域（移动端场景）进行推送新品限时优惠信息，促进其完成新品购买。做完App端与小程序端用户的打通后，整个App端推送以及同时段内的新品的转化率环比增长了38.5%。跨端全域用户运营我们刚才讲到的跨端运营全域的运营方案，如下图整体来看是一个闭环。图上最左边是企业端在运营时涉及的场景或数据。客户端的数据包括App，网站，H5，小程序，公众号，抖音，微博等；服务端的数据是指后台实际产生的用户数据，包括用户等级，CRM数据，ERP数据，开通的数据，订单的数据等。这两端的数据整体打通后才是你的用户全域数据。想要获得这些数据的话，你需要在不同端作为不同的私域来运营。但如果在统一的数据银行里面，我们可以提供一种简单的打通方案，统一打通完之后，我们可以做到全域数据采集，全域用户管理，以及全域数据分析。数据分析能产出两个结果，第一是以不同人群分群的方式接入到统一的私域触达的通道，包括App推送，短信、邮件、小程序的订阅消息等方式，结合用户使用习惯来精准发送消息。第二是筛选出来的人群可以用于投放平台，从而实现拉新或者激活老用户。我们现在有一个“人群同步”的功能，他可以帮你在全域用户人群里去找跟筛选人群行为相似、标签相似的人群。人群同步后可以统一投放到外部的DSP平台或者策略平台，他们能找到这波人群会出现的媒体平台，等到这波人群在媒体平台上出现时，去精准地投放App或者小程序的广告，同步降低拉新的成本和提高拉新的成功率。如果不使用人群扩大的功能，也可以去精准投放流量，有针对性的召回老用户。比如在小程序里面做留存，去二次触达之前使用过你的小程序的用户等。另外在公域投放的这部分数据，又可以作为投放用户的曝光和点击的数据回流到数据银行，从而去丰富数据银行里的用户行为和用户标签，形成一个完整的跨端的全域用户数据的闭环方式。以上就是我的全部分享，谢谢。 本文根据友盟+的产品专家@冯成蹊在起点学院公开课的分享整理而成，直播回放链接：http://996.pm/7bEDX ；添加小助手哒哒微信：da22133，可领取学习资料。题图来自Unsplash，基于CC0协议"}
{"title": "以免费送鸡蛋为例，解析小程序如何实现盈利百万？ ", "author": "Rolan", "pub_time": "2019-10-16 00:01", "content": "本文以一个养成类送鸡蛋的小游戏为例，拆解了某些平台是如何利用送鸡蛋等留存裂变手段盈利的。如果让你连续不间断的在某平台上签到半年，就能免费领取30个鸡蛋，你愿意吗？相信大部分年轻人是不会在意且无法坚持的，而很多中老年人却乐此不疲。最近，有则消息成功引起了我的注意，如图：原本这种养成类送鸡蛋、送水果的小游戏，是各个平台常用的用户运营伎俩——因为留存好又能带拉新。但对平台来说，其实这也是一项硬支出，而把这样留存裂变的小游戏，单独做成一个赚钱的小工具，算是提醒了我。于是我特意搜了一下，目前几款相似的领鸡蛋小程序，和大家一起聊聊这笔赚钱的生意。01 为什么用户愿意参与1. 免费不要钱必须强调，薅羊毛贪便宜不是某一类人的特点，而是全民参与，只是薅羊毛的标的不同。以天天领鸡蛋这款小程序为例，首先就告诉参与的用户，鸡蛋是不花钱的，是白送的。关于免费领取这件事情，任何人，任何时候都不要怀疑它的威力。拼多多砍价免费领，助力享免单，天天领现金，一分抽大奖，多多果园，金猪赚大钱，皆是如此套路。2. 用户有时间如文中所提，参与的用户大部分都是中老年人，他们大多数人有一个特点：在家无聊，但有时间。而玩这样的小游戏，对他们来说既是消磨时间，也不占用时间。3. 操作简单有很多免费参与的活动，对于中老年人来说，操作太麻烦——要注册APP，输入个人信息，甚至需要提前支付，再返款。但是像天天领鸡蛋，小程序打开很方便，不需要下载注册，手指点点，操作即可。4. 奖品精心设置如果设置签到满100天，领练字本或者杯子，预估效果不会太好。因为对于很多参与者来说，不是特别实用或刚需。但是鸡蛋既有营养，而且一家老小都是适合，邀请好友时也方便。另外一点，20个鸡蛋、40个鸡蛋，从数量的感觉上就比一本书、一个杯子来的多。也能让中老年用户发朋友圈时，能炫耀，有胜利感。所以，奖品选择也是用户是否参与重要的一环。比如一箱苹果，一箱牛奶，10斤大米之类的。总结来说，就是刚需，老少皆宜，数量多，感觉超值。02 平台如何运营1. 设置诸多任务为了让用户感觉到领鸡蛋很容易，平台设置了诸多小任务，让用户能获得更多生蛋的饲料。比如授权账号、签到、好友互动、关注公众号等等，多的有十几项任务。其中最重要的三个任务如下：图：部分任务列表a 邀请好友：邀请好友一起来免费领取鸡蛋，邀请人和好友都能获得对应的奖励，而且邀请越多奖励越多。这样免费送鸡蛋的好事情，一般好友也是不会反感的。b 关注公众号：小程序做裂变，公众号做留存，个人号（APP）做转化。所以，必须要引导用户转换至微信公众号，哪怕是小程序被封了，公众号还能做承接，而且公众号也能发广告再转化。c 每日签到：每日签到既保证了平台日活，对于参与者来说也起到持续的教育作用。而且对他们来说，门槛很低，保证用户连续参与。2. 延迟/消耗用户鸡蛋（饲料）虽然用户获取喂鸡的饲料很方便，但是要获得鸡蛋并不容易。a 延迟用户获得鸡蛋份额限制：平台会把一个鸡蛋分成不同的份额，每次喂鸡生蛋，只能成长一部分。有的把一个鸡蛋分成2份，有的5份。喂养限制：不是有饲料就能进行喂养，平台设置了最低的喂养标准。有的一次最小20g饲料，有的是50g，还有云集是200g饲料。而一般一次性签到获得饲料肯定是不够一次喂养的，这就意味着用户需要做更多的任务。尤其是引导用户邀请好友，去首页或指定专区下单，能获得大量饲料。次数限制：平台设置每天喂养的次数，有的平台一天只能喂养一次。所以一个鸡蛋，至少要5天才能养成。20个鸡蛋至少需要100天，40个鸡蛋至少需要200天。时间限制：一个鸡蛋的生成除了要满足份额外，还有时间要求。并不是当天下蛋，就可以立马收取了。平台还会有时间限制，至少到第二天才能领取。这样，用户又多花了一天时间，才能继续养下一个鸡蛋。所以，用户花的时间越长，平台成本越低，收益越多。b 消耗用户鸡蛋用户在养鸡下单的过程中，平台也在想办法，消耗用户已经获取的鸡蛋。抽奖：平台会设置类似大转盘、抽奖这样的小游戏，用户需要用手中的鸡蛋兑换参与游戏的次数。奖项设置中，可能是翻倍的鸡蛋，或者翻倍的饲料，也有可能啥都没有。但依然有很多用户愿意为此一搏，但殊不知平台早已设置了中奖率，大部分人都不是幸运的。抵扣：为了让用户感觉到鸡蛋的价值，平台会设置兑换专区或者是允许鸡蛋直接抵扣商品。如果用户选择购买商品抵扣，对于平台来说又赚了。3. 提供更多内容为了让用户能够花更多时间停留在小程序上，天天领鸡蛋、趣喂鸡专门开辟了符合中老年人阅读的版块。一看这内容，就是中老年和农村风，土味满满。简单来说：内容接地气，满足猎奇，通俗易懂。除了提供适合中老年阅读的内容，还有平台接入了拼多多，京东的淘客分销，这也是很匹配的。03 平台如何赚钱对于平台来说，最直接的变现方式，就是广告收益。利用自己的流量，引导用户点击微信小程序内的广告/广告曝光次数，从而获得广告分成。1. 随时随地都有广告从小程序首页，任务页，个人中心页，邀请页等等，只要能展示广告的地方，平台都尽量展示广告，包括最新的小程序弹窗广告。所以每天领鸡蛋的用户，很难做到不点击/不观看，这个概率极小。2. 各种引导浏览广告因为，广告几乎是唯一的收入，而且用户每次点击/曝光，平台都能参与分成。所以在各个重要的节点，平台都引导用户必须强制点击或者观看广告。比如，每次登陆的弹窗、签到页、领取饲料、饲喂、收蛋等环节。3. 严格控制流量成本参照淘宝，通常30个鸡蛋包邮成本在30-35元之间，还不包括淘客佣金。如果量大，还有更多优惠。云集云鸡农场：云集每个鸡蛋生成至少需要喂养5次，一天只能喂养一次。30个鸡蛋，最少需要150天，其中不包括时间限制、忘记签到、当日饲料不足等情况。天天领鸡蛋：目前还没有测算出明确的规则，但用户需要集满40个鸡蛋才能免费领取。我连续签到做任务3天，一颗鸡蛋养成还不到60%。可想而知，常规情况下40个鸡蛋，至少需要200天。趣养鸡：趣养鸡虽然也是养鸡，但并不是直接送鸡蛋。而是以一斤鸡蛋一块钱，满20元可以提现。平台规定5000g饲料生成一个鸡蛋，如果按照平台一天自产出100g饲料，20元提现需要1000天。而想要加速每天获得更多饲料，就必须得看广告视频，30s视频广告，可获得100g以上的饲料。4. 肯定能赚钱目前不确认小程序官方广告和流量主分成方式。如果从广告主投放的角度看，用户平均一次点击成本从几毛到几十不等，不同广告形式也不一样。比如弹窗、banner、视频等。如果一个用户一天能创造3毛的收益，150天，就有45元，完全能cover 30个鸡蛋的费用。如果按照CPM来算，平台让用户留存的时间越长，展示曝光的机会就越多，广告收益就越多。我团队做过一款小程序，也是签到能免费兑换话费或其他实物礼品，连续多天曝光千万次。所以只要合理控制好，用户的成本和产出。微信养鸡、免费送鸡蛋，的确是笔赚钱的生意的。而这种方式，也能复制和延展，比如免费领水果、领牛奶、领纸巾、领保险额度、领汽油等等。为了再次佐证这样的想法，我特地问了一个做小程序的朋友。其产品也是主要服务于三四五线的用户，一个很简单的微信小功能。目前每个月小程序广告有40多万的收入，你说羡慕不羡慕人？#专栏作家#十里村，微信公众号：十里村（ID：shilipxl），人人都是产品经理专栏作家。偶尔分享生活，关注电商、科技，新事物。本文原创发布于人人都是产品经理。未经许可，禁止转载题图来自Unsplash，基于CC0协议"}
{"title": "微信与支付宝的小程序江湖 ", "author": "Rolan", "pub_time": "2019-10-15 00:01", "content": "小程序江湖的争夺，才刚刚拉开帷幕。但可以肯定的是：在颠覆性的交互终端出现之前，小程序之争，是巨头们在移动互联网时代进入零和博弈的标志，是一场每一方都必须赢的战争。01首先，我们要明确一个基本逻辑：在产品发展过程中，一定是先有了某个诉求，再以满足诉求为目标，才会落地出某个产品/能力。让我困惑的是，很多对于小程序分析的文章，只是从小程序提供出来的能力和场景层面（比如用完即走，线上线下）分析能做什么，却没有告诉我们，这些顶级流量平台为什么要做小程序，他们的平台诉求又是什么？据QuestMobile《中国移动互联网2019半年大报告》数据显示：2019年Q2，全网用户净降200万。中国移动互联网月度活跃设备规模触顶11.4亿，用户使用时长增速有所放缓，从2018年12月到2019年3月，用户时长增速从22.6%降至11.8%，到了2019年6月，增速已经滑到了6%。在IOS/Android系统层面的应用分发生态中，0.1%的超级App获得了70%的流量，对于中长尾App来说，已经很难攫取到足够的生存土壤，而对于头部App而言，在大盘见顶的情况下，也将很快触碰到流量边界，拉新成本将持续增高。在这个阶段，对于超级App而言，资源配置上，将会寻求投入产出比更高的方向，即对于存量用户，持续提高其全生命周期价值（LTV：life time value）。所以这场游戏就会变成超级App在同一批用户之间抢夺访问时长和用户价值的零和博弈。对应的，超级App将会尝试向用户提供更多的服务，以期能承载更多的用户需求场景，最终用户会依赖于这个App或者同一个服务生态来满足需求，这时就形成了成熟的用户服务生态。相较于IOS/Android的生态流量模型渐趋稳定，超级App内部的流量还没有进行过应用对象的分发，一个新的生态，对应会进行新一轮的流量分配，而这就是超级App撬动应用服务商的最大抓手。分发服务的产品思路，在小程序这种能力模式出现之前，超级App们其实就已经在做了，比较成功的是Facebook，产品内有成千上万的分发应用，已经实际形成了应用生态。再诸如微信钱包内的吃喝玩乐，演出票务。支付宝内的水电费，滴滴出行服务，几年前的QQ农场，抢车位等等。在小程序还没有出现前，它们是以H5或原生页面形式出现的。H5的实现形式会涉及到很多问题，比如账号同步、场景复用性以及可分发性、数据加载存储性能等等，小程序是为了解决在业务前进过程中遇到的实际问题，而诞生的一种新的产品形态。它是超级App向应用开发者们开出的一张生态通行证，有了它，在同一个生态内，不同能力之间可以轻易达成用户识别，数据同步交互。基于此，搭建并分发服务的门槛更低了，单一超级App生态对于其他超级App生态的排他性也更高了。因此，每一家小程序语言在设计目的上，均类似于苹果的Objective-C语言，即寻求自建一套封闭生态。苹果的排他性体现在终端设备上，小程序生态的排他性体现在入口应用上。下面会分别从「小程序生态和苹果生态作为封闭生态的相似性」，「微信小程序生态和支付宝小程序生态的异同」两个方面来聊一聊。02有一点可能很多人还不知道，从IOS11开始，苹果原生相机已经支持扫码等操作。在2017年WWDC上苹果宣布对于大众点评的POI库，亦能扫码直达。在如今，扫二维码和展示二维码被认为是到店场景下，连接「线下-线上」的搜索引擎入口，微信和支付宝为了抢占入口，投入了海量补贴构建的服务生态和商业支付生态的护城河，绝非苹果通过用户体验路径的优化就能匹敌的。微信支付宝的二维码也不会像美团点评一样，将数据匹配，直接开放给苹果相机。当我们回溯苹果作为封闭生态，先后与Windows和Android两大开放生态竞争中的差异化点时，会发现，在竞争早期，开放生态寻求的是对于生态边际场景的持续扩大，无可避免的会造成对于单一用户个体使用成本的提高，功能的冗余，系统复杂度的提升，安全性能的降低。而苹果生态则是完全相反的策略路径，对于生态场景进行了聚焦，聚焦高客单价人群，寻求针对工作商务场景的极致体验，时至今日，苹果生态内拥有大量独享的工具型应用，场景聚焦，功能简洁清晰，交互极致简单，安全性能稳定，而这些，都在差异化地提升用户的工作效率。而对于其他场景，比如游戏场景，即使是苹果最新版本笔记本，运行2013年发布的游戏DOTA2时，都会烫的不行。如今的主流游戏，多端发布时，苹果生态大多数时候，都不包括在内。小程序在与上游生态的竞争过程中，一方面会聚焦在「线下-线上」场景，集中建设商家端能力，扫码行为本身是前台的连接属性，但其背后是复杂而广袤的商业场景和业务逻辑，这种前台极简，中后台复杂的工具型场景的业务壁垒很高，典型的就是滴滴。另一方面，每一家生态都会从自身生态优势出发，去寻求差异化赋能，例如腾讯的关系链资源，天然适合做游戏和社群电商。而支付宝的蚂蚁信用体系，能够提供先使用后付款等授信业务场景。在和支付宝小程序团队同学沟通时，她反复强调一点：这是一场阿里巴巴不能输的战争。因为这不仅仅是和其他超级App之间的战争，也是与iOS和Android的战争，就像前文提到的扫码入口争夺一样，这场战争，它早已经开始了。03相对于竞争对手微信小程序，支付宝小程序在用户侧的感知上，是比较弱的。但实际上至今年9月，支付宝小程序生态内，小程序数量已经超过一百万，月活跃用户超过5亿，七日留存率40%。数据瞩目，但当我们查看支付宝小程序热榜时，会发现TOP3的应用分别是「每日必抢」「天天抽奖-每日福利」「蚂蚁森林公益林」。此时我们会觉得，支付宝小程序似乎就是将之前自家生态内热门的应用变成了小程序而已，从而获得了数据的增长。我们可以分两个维度来看：一方面对于支付宝生态，小程序的5亿月活，可能大多来源于将之前高频应用的小程序化。另一方面，对于热门应用，被小程序化后，就可以脱离了数据交互和ID认证的限制，可以部署在阿里生态内的任何流量节点，获得更大的业务价值。如给淘宝带来巨量新增用户的「每日必抢」模块，得益于小程序化，可以获得更大的流量曝光机会。但由于支付宝相对于微信是一个低频工具入口，不具备社交属性和内容消费属性。所以支付宝小程序从一开始就是中心化分发的，接入的第一个应用是当时生态内的高频工具应用OFO共享单车，之后陆续将站内多个模块整合成为小程序。这种中心化策略好处是：对于核心业务（如医院挂号，公积金转账，共享单车等）能够进行快速功能和流量覆盖，迅速建立入口心智。但缺点同样明显，这牺牲掉了中长尾应用落地到支付宝的动力，长期看不利于形成一个丰富的服务生态，牺牲广度换取深度，牺牲创造性换取确定性。这种生态发展策略要求的是单个小程序的使用价值。所以接下来，在用户流量侧，支付宝小程序会继续开放自己在信用体系，政府bd等领域的差异化能力，自上而下的落地更多小程序能力，在高频且迫切的区间内产出小程序。通过持续提供差异化服务，获得更多稳定的C端流量。而在开发者侧则是通过打通更多生态内流量节点，提升单个小程序的实际分发价值，将小程序变为阿里生态内的可分发凭证（目前生态内已经打通淘宝，天猫，UC，高德等。支付宝内分发入口达到三十个以上。而在生态外，也于近期宣布打通新浪微博入口）从而提升单个小程序可获取价值。另一方面则会深耕阿里擅长的商业，金融等行业领域，提供差异化的B端能力。从而提升开发者侧的可预期利益。04要理解微信小程序，先要简单理解去中心化分发的生态理念。去中心化分发与中心化分发根本区别是在于分发策略是否存在一个中心化管理节点。比如阿里的电商分发平台，是一套典型的中心化分发架构，平台方通过类目运营，智能推荐等方式，提供给用户检索信息的方式。也因此，商户在上传商品的时候，需要依据平台整理好的类目，对商品进行分类，才能被用户找到。再比如你在小红书内发布一条内容，在选择分发标签时，平台已经分门别类整理好了热门标签以供选择。小红书标签选择页与LOFTER标签输入页对比国内现在使用去中心化分发架构的产品有三个「微信公众号」「微信小程序」「网易LOFTER」。这可能本身就反映了去中心化分发的第一个特点：孵化速度缓慢，不引导方向，让生态内的流量自由碰撞迭代。比起中心化分发的迭代速度，去中心化分发的迭代速度，就好比近代的基因工程突飞猛进地进化速度和自然亿万年来物竞天择进化速度的比较。这样的产品特性，可能不是资本实力弱以及拿结果目的特别强（比如阿里）的团队能够孵化的出的。比如网易LOFTER，它的信息节点是标签，用户对于标签拥有绝对的分发自由度，即用户可以自定义任意一个标签。平台方仅确定标签分发框架，但对于标签维度，不进行任何管控。LOFTER在创建之初，是摄影社群，但随着时间的积累，它渐渐又成为了同人类内容的第一平台，能同时承载两种不同的人群，恰恰就是去中心化的承载能力。而像同人社群的落地，则又反应了去中心化拥有超出平台方认知局限的创造力。践行去中心化的另一个产品生态—微信公众号生态的内容质量之高，之前的内容平台没有达到过的，之后的内容平台也很难超越。张小龙在去年的微信Pro公开课上，解释微信为什么也做内容分发（看一看）时说，微信做这个能力，（区别于头条系的顺应人性），是为了提高国民的审美水准。这绝不是给微信也要做内容分发找个理由，因为微信团队的这个初心，在微信公众号里，就已经体现并落地了。与支付宝小程序高举高打的策略不同的是，微信小程序从一开始就是全民众创的模式。微信小程序生态，依然坚持搭建一套去中心化生态，所以它的能力提供是克制的，它的分发入口的开放也是克制的。在跟微信小程序团队同学沟通中他提到，去中心化的生态是富有生机的，但目前的微信小程序生态，还缺乏孵化它的基础养料。这个养料是从不同途径降低参与者的门槛以及提供创造价值的工具及模版。在开发者侧，微信搭建了小程序开发者平台，进行反馈和交流学习；在用户侧，提供了更便捷的操作入口，同时也在不断发布优化组件；在商家侧，深入各个行业，提供针对性行业工具，并输出指导性策略模版；在三方侧，搭建服务商生态，赋予服务商针对性工具能力，赋能生态…以期孵化出丰富的小程序生态和足够健壮的头部小程序。05距离小程序能力的发布，已经过去了两年半的时间。但对于践行去中心化策略的微信小程序生态而言，要孵化出生机勃勃的生态，还需要更多时间的储备。而像支付宝小程序这样的后来者，则通过放大自身差异化优势，迎头赶上。小程序江湖的争夺，才刚刚拉开帷幕。但可以肯定的是，在颠覆性的交互终端出现之前，小程序之争，是巨头们在移动互联网时代进入零和博弈的标志，是一场每一方都必须赢的战争。 作者：yachao。网易产品策划，前美团点评产品策划。公众号：燕赤霞随思录（YCXSSL）本文由 @yachao 原创发布于人人都是产品经理，未经许可，禁止转载题图来自 Unsplash，基于 CC0 协议"}
{"title": "移动互联网全景生态报告：总量停滞下 平台+小程序/快应用圈地 ... ", "author": "Rolan", "pub_time": "2019-10-17 00:01", "content": "QuestMobile数据显示，自上半年，国内移动互联网用户接近顶峰之后，目前维持在11.34亿，同比增长也进入1时代。大平台的增幅也接近尾声，微信甚至出现了月度负增长，这也倒逼巨头纷纷布局小程序、深挖流量分发价值和用户价值。相比2018年8月，2019年8月数据显示，手机游戏、生活服务、数字阅读行业竞争加剧，移动购物则进一步向头部集中。移动互联网巨头们已经从流量的竞争升级到平台的竞争，全景流量布局成为趋势1、中国移动互联网用户规模超过11.3亿，增速逐步放缓，行业内流量的获取和竞争越发严峻2、巨头也面临增长压力，为了提升流量的分发效能，深层挖掘用户价值，巨头们纷纷布局小程序，平台化的竞争越发激烈3、不同平台的优势和典型使用场景各有侧重，企业可以根据自己产品特色，选择布局单一平台或多平台协同4、超级平台不仅给自己生态内的产品带来流量，而且还能开放赋能给其他产品和个人创业者，给予他们更多的发展机会5、在巨头小程序“掘金”、布局全景生态已成行业共识，2018年到2019年一年时间加入全景布局的企业增加21.3%，同时在2个以上平台布局的APP占比已经超过21%6、从典型小程序平台分布看，移动购物、移动视频类小程序全平台布局；小游戏依旧是微信小程序的一大重点；汽车服务行业在支付宝和百度小程序中获得较大发展谁能优先获得全景生态流量红利？1、腾讯系典型玩家均优先获得微信流量加持，微信小程序已经成为这些应用重要的流量来源2、支付宝小程序广泛连接商业消费和生活服务，助力阿里体系APP获取不同渠道流量3、百度智能小程序利用搜索词关联，信息流推荐等智能技术，助力典型社区、视频内容产品发展4、用户的渠道选择更加多样，全景流量中各巨头生态之间APP与小程序流转更加活跃5、字节跳动建立小程序矩阵，支持多端上线，为开发者节省大量的人力和时间6、快应用依托于智能终端，同样具有上线速度快开发成本低等特点，连尚读书等快速布局快应用，吸引到不同渠道不同终端的目标用户群不同行业开始出现分化，布局重点与流量获取与生态平台息息相关1、移动视频行业由原来的观望转向积极参与，头部企业均已完成小程序布局视频作为内容平台，通过独有流量的布局，扩大用户覆盖。芒果TV通过布局多渠道，月活跃用户近2.5亿，微信小程序吸引更多的25岁以上男性用户2、小程序赋予了移动购物行业更多的用户发展机会，手机淘宝、拼多多的小程序用户规模均已破亿618期间百度智能小程序为 苏宁易购 ( 002024 , 诊股 )带来可观的活跃用户3、汽车服务行业与终端厂商合作密切，虽然头部企业也都进行了全景流量布局，但是目前获得的流量占比仍然不高汽车服务行业中多渠道布局可触达不同结构型人群；汽车之家积极布局，月活跃用户达2.2亿人，其快应用流量占比已经到13.6%，吸引到更多OPPO终端品牌用户，同时也吸引到更多女性4、生活服务行业从微信小程序中获得的流量支持明显，部分微信小程序活跃用户数量占比超APP，支付宝和百度智能小程序有待进一步发力美团外卖通过小程序有效获取更多新用户，且用户重合度低，与APP形成有效的互补5、数字阅读行业除了布局小程序，流量来源更为多元，行业内更多玩家借助移动网页、站外H5等渠道，获得独有流量除了小程序和APP等公共流量入口，连尚阅读通过终端合作构建流量矩阵，触及不同结构人群6、新闻资讯行业全景流量布局选择微信小程序平台居多，在布局微信小程序的新闻资讯行业中腾讯系头部优势较为明显超级APP借助超级流量优势，利用小程序覆盖信息流服务，来留住用户并再创用户价值，同时也创造更多信息流广告收入通过UC浏览器等多渠道触达信息流用户，UC资讯活跃用户规模达到4亿，其中UC内资讯信息流用户超过2亿"}
{"title": "狄德罗效应下，小程序被“逼”向中心化 ", "author": "Rolan", "pub_time": "2019-10-18 00:23", "content": "编者按：本文来源创业邦专栏螳螂财经（ID:TanglangFin），作者陈小江。话说，一直以“去中心化”自居的微信小程序正向“中心化”靠拢。按照张小龙在2017微信公开课Pro上的最初设想，去中心化的微信小程序是这样的：小程序在微信没有入口，没有订阅，不能推送消息，即小程序在微信没中心化入口（入口主要是线下二维码），不会推荐分发，没有订阅。这是极度去中心化的设计，平台没有控制流量分发，用户获取小程序也没有固定入口。但改变正在发生。首先，在最新的微信内测版本中，微信小程序的主入口正在改版内测，除保留原有的“最近使用”等3个栏目外，还新增了“建议使用”、“大家在用”和“动态”等基于社交推荐和智能分发的栏目，并且小程序还将支持评分和评测。可见微信小程序的入口、推荐和分发机制正在建立。其次，公号“MinProgram”在9月中旬报道称，很多小游戏开发者都收到了开通【订阅消息】的内测通知，用户主动点击游戏内某按钮或元素进行订阅（比如游戏排名下降提醒）后，小游戏即可给用户发送服务通知。除小游戏外，微信表示其它类型小程序也将推出一次订阅消息。可见订阅关系正在建立，入口还将增加。由此来看，微信小程序正逐一打破最初的设想，当初坚持的去中心化也随之而变，它正在向中心化靠拢。巨头逐鹿，小程序被推向中心化无论是微信小程序正向中心化靠拢，还是阿里小程序和百度智能小程序等一开始就采用中心化运营，都是小程序从小变大的发展使然。在经济学上有一个著名的狄德罗效应（配套效应），是由美国经济学家朱丽叶·施罗尔提出，指的是18世纪的法国哲学家丹尼斯·狄德罗获得朋友送给自己的贵重睡袍后，觉得家具和地板太破旧配不上睡袍，因而不得不将家具和地板都更新。该效应反映的是人们在拥有新物品后，不断配置与其相适应的物品，以获得平衡，这放在小程序的发展历程上来看也很适用。首先，对微信小程序来说，其设计之初主要是用来解决刚需低频的APP需求和线下某些特殊场景使用。比如一些APP每月只用一次但又不得不用，若为此下载APP既繁琐又占手机内存，而小程序就能很好地替代；再比如线下吃饭用小程序而不是下载APP点餐方便又高效，临时在公交车站用小程序查看等的车何时能到等等。不过由于微信高频使用率和小程序的便利性，很多需求通过小程序后需求被放大，由低频变成高频，比如人们正常使用拼多多APP购物原是低频需求，可能很长时间才会用一次，但微信好友通过互相分享拼多多小程序，互相帮忙砍价和拼团等，则会让用户的购物频次大大增加。再比如，线下烤鱼店也并非高频需求，但全国连锁烤鱼品牌“江边城外”率先将78家门店接入微盟智慧餐厅系统后，通过小程序作为切入点来搭建品牌的新型用户运营平台，通过全民推广、注册有礼等一系列裂变和会员活动来进行深度的会员运营，拉动消费次数以提高门店复购率。上线两周内，线上累计增粉39万人，转化会员8万4千人，复购率提升10%，效果十分不错。而当使用小程序由低频变高频，使用小程序的习惯被养成，用户自然希望小程序能有固定入口和推荐排名，方便使用和寻找优质小程序，中心化因此被需要。何况现在有包括BATT在内的九大平台布局小程序，各大平台争夺小程序开发者和用户越来越激烈，中心化分发和推荐能让开发者启动初期获得更多流量曝光，很容易吸引开发者。以百度为例，百度智能小程序采用开源联盟+中心化分发的玩法，不仅主动开放千亿流量，在百度搜索、贴吧和信息流等地方为小程序提供中心化分发入口，还在其开源联盟如B站、58同城等上面也为百度智能小程序提供中心化分发入口，并支持关注小程序，这些举措让开发者无需为小程序启动期获取流量费神，相比而言微信小程序开发者还只能通过社交分享或者等待用户搜索来获取流量就很难受。面对类似百度这样的举动，微信也不可能无动于衷，为争夺开发者，助其热启动也是微信小程序向中心化靠拢的原因之一。其次，中心化和去中心化是相对而言，若把中心化比成“集权”，那去中心化就是“放权”。前者能够集中力量办大事，启动快，增长迅速，在小程序发展中后入局的平台往往不得不采用中心化运营追赶微信。以支付宝小程序为例，9月17日，支付宝事业群总裁倪行军宣布支付宝累计上线小程序数量超过100万，用一年时间就完成了微信两年的量。而且据QuestMobile数据显示，截至今年4月，微信和支付宝月活用户为9.47亿和6.47亿，两者小程序月活用户为6.81亿和4.01亿，渗透率分别是71.9%和62%，7日留存分别为23%和40%。虽说支付宝小程序在月活和渗透率上不如微信，但若从正式上线算起，取得这一成绩微信用了27个月，支付宝只用了7个月，发展速度无疑后者更快。并且用户粘性更高。出现该情况重要原因之一就是对小程序运营方式不同，支付宝采用中心化运营，而微信坚持去中心化。比如支付宝在首页顶部搜索栏，惠支付和生活服务频道等多处为小程序引流，给小程序留有固定入口【我的小程序】，并在【我的小程序】中的“发现”栏目对小程序进行分类和榜单推荐等，这些措施与微信相比能让小程序曝光量大增，并让用户发现和使用小程序更方便。这就是为何支付宝小程序能快速发展和用户留存较高的原因之一。可见，无论是具有先发优势的的微信小程序，还是后入的百度和支付宝等小程序平台，随着单个平台小程序的壮大，小程序行业不断繁荣，要想平衡小程序用户和开发者的需求，中心化运营将成为让小程序不可或缺的一环。美中不足，小程序中心化面临三大难题看起来，小程序中心化运营好处多多，不仅能让平台获得流量分发权；还能让新生小程序得以热启动，获取曝光的第一桶流量，帮助开发者获益；也可以让用户接触新小程序和优质小程序的路径变短。但就像有太阳就会有阴影，小程序中心化运营有优势自然也有弊端，否则张小龙又何必坚持让微信小程序去中心化？螳螂财经具体来看主要表现在以下3方面。1、读懂了认知闭合需求，中心化或让用户被同质化包围熟悉心理学的朋友都知道认知闭合需求，指个体在应对模糊性动机和愿望时有一种迫切需要找到确定答案的愿望，即使该答案并不一定优质，但也好过不确定，它反映出用户都很懒，只想不用思考即可获得答案的心理。用户面对小程序也是如此，比如当用户想通过小程序寻找餐馆和游戏时，他只有就餐和玩游戏的模糊愿望，并无吃什么食物或玩什么游戏的确定想法，而这通过搜索和线下扫描不一定能获取满意的小程序，若能提供基于好友使用人数推荐就很方便，这就是微信小程序即将上线的“大家在用”功能。以“跳一跳”小游戏为例，除了本身简单好玩外，好友排名是该游戏能迅速引爆的一个重点，它展示了两个信息，哪些好友在用和好友用得怎么样，这种中心化推荐设计有助于用户懂得自己的需求，也帮助小程序缩短触达用户的路径。但像今日头条并没有微信基于社交分发的基础，其小程序中心化分发属于算法分发，算法分发的好处是千人千面，为每个人定制个性化信息，但同时算法会强化个人需求，经常推荐同质化内容，看似也给了用户答案，但这让用户被同质化内容包围，体验未必好。比如在抖音里，你会发现经常刷到同质化的内容。2、冥次法则加剧，中心化或将伤及平台生态根据幂次法则（即二八法则）可知，一般行业20%的头部玩家会贡献80%的价值和获得80%的收益，这是比较正常发展情况，如果头部过于集中，平台资源将落在少数玩家手中，对平台生态并非好事，比如游戏直播平台大主播占据了大多数用户和流量，小主播很难发展起来，平台特别依赖大主播，如果大主播出走，则会对平台形成较大影响。截至2019年6月，微信小程序中月活超过500万的小程序为180个，月活在100万到500万的小程序为883个，月活在1万到100万之间的小程序共有4897个，这些头部数量与230万+微信小程序总量相比只是九牛一毛，可见如今的微信小程序头部玩家很集中，属于极端的幂次法则。若微信小程序后续通过中心化分发推荐，比如基于好友使用人数推荐，好友使用越多的小程序将得到更多曝光，于是将会加剧这种分布不均的情况，让强者俞强，弱者愈弱，进一步削弱长尾小程序的竞争力。比如当年微信推出“跳一跳”火了后，其实后面还推出很多小游戏，但在很长一段时间内用户只知道“跳一跳”，而给其它小游戏的推广造成阻碍。也很明显，在微信的生态中，一旦小程序中心化运营后，就再难出现拼多多这样的成功案例，微盟、有赞这样的娇子也很难诞生。3、中心化让平台集权，开发者忧心平台霸权据QuestMobile预测，到今年年底小程序数量预计将达到500万，届时很有可能会超过APP总量，未来有50%甚至更多APP预计会被小程序取代，但小程序会完全取代APP吗？显然不会。除小程序在功能上无法完全替代APP外，还因为小程序都只是建立在超级APP的基础上，那么小程序的发展天然会受到这些超级APP的影响，重则被其掌握生杀大权，比如被封杀，轻则在获取流量上受影响，比如小程序流量获取很大一部分来自超级APP的中心化分发入口。随便举几个例子，比如微信肯定不会支持小程序做社交危险到自己，而支付宝肯定也不会大力支持小程序做电商跟自己竞争。而中心化流量分发则会让平台权力增加，当这种权重过高则会反过来制约小程序的发展，这种制约在互联网领域随处可见，比如抖音的中心化分发机制让平台掌控了绝对的话语权，平台大V即使拥有优质内容和众多粉丝，如果与推荐机制不符，也很难获取大曝光。小程序在这方面也会面临同样的“中心化困境”，小程序开发者同样担心平台霸权。总之，微信目前对待小程序中心化的态度是“嘴里说不要，但身体却很诚实”，嘴上坚持小程序要去中心化，行动却在向中心化靠拢。小程序本质上作为“轻量APP”，虽不用像应用商店运营APP一样运营，但借鉴类似“中心化入口”等形式还是很符合用户需求的，当然这个“中心化入口”可以不止一个，而中心化运营不一定是各小程序平台的唯一，但却是必不可少的一环。本文为专栏作者授权创业邦发表，版权归原作者所有。文章系作者个人观点，不代表创业邦立场，转载请联系原作者。如有任何疑问，请联系editor@cyzone.cn。"}
{"title": "突发！模板消息重大调整，等了1年多的「订阅消息」终于来了！ ... ", "author": "Rolan", "pub_time": "2019-10-14 00:01", "content": "Bang！开发者们翘首以盼的小程序「订阅消息」能力，终于来了！据晓程序观察（yinghoo-tech）了解，小程序消息能力正式升级：微信对模板消息下发条件进行了调整，新上线的「订阅消息」支持一次性和长期性订阅消息。订阅消息由用户主动订阅，不但不限时长，部分场景还提供了长期订阅，实现消息高效触达。事实上，早在去年7月的微信公开课上海站，公开课讲师臧静就提到了「订阅消息」，那是其第一次“亮相”。今年初，「订阅消息」正式内测。彼时，不少人都发出疑问，微信为何要推出「订阅消息」，正式上线后，「模板消息」又该何去何从。为了打消大家的顾虑，我们找到了答案。与「模板消息」不同的是，其是在用户点击触发或者支付成功之后，开发者可在 7天内推送1-3条服务通知。而「订阅消息」则需要用户主动订阅消息通知，开发者才可向用户推送，但不受时间限制，具体发送信息条数根据该能力的不同类型有不同标准。此外，值得注意的是，使用「订阅消息」后，原小程序模板消息接口将于2020年1月10日下线，也就无法再使用原接口推送模板消息，开发者们需要注意及时调整接口。但是，微信服务号模板消息暂不受影响。那么，「订阅消息」，到底有何特别之处？晓程序观察（yinghoo-tech）请到几位订阅消息的“先行者”，来聊聊他们是怎么使用这一能力的，有哪些“坑”千万不能踩。1不受时间限制的“模板消息”「订阅消息」既然是由「模板消息」调整而来，那么，在谈「订阅消息」之前，就得从「模板消息」说起。“唤醒功能让小程序完美，完美得就像App”，小小包麻麻CEO贾万兴曾这样告诉我们，简简单单的一句话就道出了「模板消息」的至关重要。不得不说，「模板消息」在唤醒用户方面一直都效果显著，它可以让小程序得以形成一个完美的服务闭环，因此备受开发者青睐。但是，如此“完美”的能力，依然有一些痛点，主要体现在以下两个方面。有少量小程序把「模板消息」当成了营销工具，用来推送广告，甚至是不实信息，诱导用户点击。显然，这一做法就与「模板消息」的初衷背道而驰，极大影响用户的使用体验。「模板消息」已经难以满足开发者们日益增长的信息推送诉求。目前，其规则是，用户点击触发或支付成功之后，开发者可以在7天内向用户推送1-3条服务通知。但是，服务周期超过7天的小程序，「模板消息」就满足不了这一需求。现在，「订阅消息」的出现，完美弥补了以上两个的问题。与「模板消息」相同，升级后的「订阅消息」能力同样也是通过服务通知来触达用户，却具备以下2个独有优势。选择权回到用户手中。在小程序中，「订阅消息」像是一个开关，需要用户主动点击授权之后，小程序才能向其推送服务通知，当然，用户也可以随时拒收该小程序的服务通知。而此前，用户只能被动地接收消息。时长不受限制。「订阅消息」取消了7天内推送消息的时间限制，只要用户没有主动拒收消息推送，开发者就可以随时推送服务通知。对于服务周期超过7天的小程序而言，这就完美解决了此前的疑虑。我们了解到，「订阅消息」目前主要有两种消息类型可供开发者选择：1、一次性订阅消息：用户订阅一次后，开发者可下发一条消息，不限时间。若用户勾选了“总是保持以上选择，不再询问”且点击了允许，那么以后都默认同意订阅这条消息。用户不再做多次选择，开发者也避免了更繁琐的提醒。2、长期性订阅消息：用户订阅一次后，可长期下发多条消息。目前长期性订阅消息向政务、医疗、交通、金融、教育等线下公共服务开放，后续将综合评估行业需求和用户体验持续完善。值得注意的是，小游戏仅支持一次性订阅消息，不支持长期性订阅消息。使用过该能力的开发者告诉我们，这两种「订阅消息」，针对不同行业的小程序，微信都提供了消息模板，开发者可在后台选择相应的模板使用。比如，针对小游戏，微信就提供了排行榜、新功能发布、活动结束、版本更新、道具领取等14种通用模板。「订阅消息」上线后，这一消息推送能力不仅没了7天的时间限制，还能满足开发者和用户对于消息推送的多样化需求。在触达与唤醒用户上，就会更加高效，从而提升用户留存。2「订阅消息」两大要素场景和体验正因这种种优势，「订阅消息」的上线，让不少开发者喜出望外。其中，低频小程序尤其如此。“对于高频小程序而言，模板消息就足够用了，但是对于低频、长线服务的小程序而言，订阅消息就更重要”。不少开发者对晓程序观察（yinghoo-tech）表达了同样观点。某使用过「订阅消息」能力的小程序开发者向我们表示，“一般而言，低频类的服务都不可能是7天内就发生的。”这种情况下，「模板消息」能力就不那么够用了。话虽如此，但一些高频小程序也显现出了对「订阅消息」的浓烈兴趣：“模板消息将多种类型的服务集合式推送，比如电商小程序的发货通知、到货通知、降价通知等，但订阅消息可以引导用户在不同场景内去订阅，因此其推送的消息也可以更精准化、个性化。”那么，「订阅消息」该怎么用才好？1.以刚需场景切入“我们会将这一功能放在一些任务的关键路径上，如查询违章此类的服务。”有开发者向我们透漏了使用该能力的思路。此外，他们还做了一些活动营销或内容营销的场景探索。如下图所示，在活动页面下方添加了「结果通知我」按钮，引导用户订阅消息。总的来说，刚需的服务场景，天生就具备激发用户订阅消息的需求。有开发者估计，刚需类的场景，用户订阅率高达90%以上。对于电商小程序而言，刚需服务包括促销活动通知、到货通知等多场景，对于小游戏而言，刚需场景则更加多样，如组团打怪的场景下，组团成功的消息通知必然是刚需，养成系小游戏则可以在动物、植物的养成过程中多处植入订阅消息的引导。“如若是关键路径，通常我们会要求用户必须订阅，以保证用户不会错过服务通知，非强制的路径，转化率主要是看内容对用户的吸引程度。”某电商小程序开发者和我们说。2.用户体验和召回频次之间的平衡虽然对「订阅消息」等憧憬满满，但不少开发者也表示出一些顾虑：像「模板消息」那样，会不会有严格的推送规则，规则不够熟悉就会被封几天推送能力？不少已经使用该功能的开发者向我们表示，虽然微信现在还没有上线严格的规则，但如若使用过量，引起用户反感，被举报，肯定会受到影响。“微信注重用户体验，过度骚扰用户肯定不行，所以要想办法在用户体验和召回中达到平衡。”开发者们表示。一位开发者告诉我们，他们已经上线了推送管理机制：对每一个订阅消息模板做标记，哪些是营销类的，哪些是正常功能的，然后收拢所有召回推送的出口，根据模版类型来进行消息次数限制，例如营销类的每天有固定的次数限制。毫无疑问，「订阅消息」的推出，是微信在用户召回方面的又一次尝试，对实现小程序服务闭环无疑是一大利好，可以想象，微信还会进行更多的探索。而开发者对此也有一些建议，他们觉得接下来如果在这几个方面进行优化，将是再好不过：1、目前，「订阅消息」能力可用模版特别少，一个小程序可申请的模板数量上限为10个，对于服务场景较多的小程序而言，还远远不够；2、用户一旦取消订阅，开发者无法得到通知，因此很难排查该如何优化服务；3、同一个小程序都是共用一个订阅能力，同个小程序只允许用户订阅1次。这意味着，用户在小程序的某一场景里订阅消息后，就无法在其他场景使用该能力，这对多场景的小程序开发者而言，他们更能够多场景多召回。你还希望微信能在「订阅消息」能力方面有哪些优化？欢迎留言告诉我们！"}
{"title": "微信公布外链新规，本月28日实施倒计时开始！ ", "author": "Rolan", "pub_time": "2019-10-21 00:00", "content": "为了帮助外链服务提供方更好地理解规则，提升微信用户体验，我们将对《微信外部链接内容管理规范》进行升级，2019年10月28日，升级后的规范将正式投入使用。 为什么这则通告会让我们有靴子落地的感觉，这还得从国庆说起。每年国庆，在社交平台上，各种“互助抢火车票”都会形成一股“风潮”。朋友圈也好、会话框也好，总少不了“帮我助力抢票”、“帮我加速吧”等这样的链接“干扰”。 不仅如此，“下载XX可得XX”的运营玩法，一些虚假、欺诈、抽象性质、规则不清晰的拼团活动我们也见过不少，尽管微信在不断打击，但还是防不胜防。 虽然这类玩法是可以帮助企业做拉新，但却对用户体验造成了非常大的困扰。 此前，晓程序观察（yinghoo-tech）的小伙伴们聊天时就在纷纷猜测，以微信用户体验至上的价值观，不让用户收到不公平对待的理念，估计很快就要出台一些规则来约束企业在微信生态内的不合理商业行为，还用户“安全感”和体验舒适度。 现在，微信行动了。 在仔细研究了本次更新外链管理规范后，晓程序观察（yinghoo-tech）发现接下来四种玩法将被明确禁止，覆盖了拼团、助力、授权信息、跳转App等，均为非常稀松常见的玩法。 值得注意的是，新规将在本月28日开始实施，届时一经投诉，被禁封可以说是板上钉钉。我们建议开发者们在此之前做好调整。1这四种运营玩法被明文禁止拼团、助力、授权信息、跳转App，如此常见，玩法中哪些行为算违规？晓程序观察做了一次总结。 1.拼团不成功也不退钱的玩法 在本次更新中，最引人瞩目的便是拼团相关的条例，主要进行了以下的补充： 拼团活动无明确且清晰的活动规则，或规则未以显著方式向用户公示，可能误导用户参与拼团或进行支付的。例如在活动规则中约定用户拼团失败后，已支付的费用不退回，但活动规则未以显著方式向用户公示的。 拼团，已经成为电商平台运营活动中的常见玩法，遵守规则、把用户体验放在第一位的拼团活动，微信是支持的。 但是，一些违规拼团活动往往暗藏“玄机”，对于虚假、欺诈、抽奖性质、规则不清晰的拼团活动，微信对此是坚决反对的。此前，我们就知道这种拼团玩法在朋友圈内是不被允许的，而这次，则被明文写进了《微信外部链接内容管理规范》里。  如图所示的拼团玩法，其最大弊病当然就是存在抽奖行为。值得注意的是，该拼团活动并没有将活动规则展示清楚、位置非常不起眼，这就会导致很多用户都是在没有阅读规则、不知情的情况下开始拼团的，还也是微信所拒绝的。 从这次条例更新也可以看到，将知情权明确还给用户，将是微信接下来在维系用户体验方面重点关注的。 2.助力类玩法 本次更新对原条例的1.3进行了内容补充：通过利益诱惑，诱导用户分享以及传播外链内容的，包括但不限于：以金钱奖励、实物奖品、虚拟奖品（包括但不限于红包、优惠券、代金券、积分、话费、流量、信息）；声称分享可增加抽奖机会、中奖概率、成功可能；通过签到打卡、邀请好友协助（包括但不限于助力、砍价、加速）、设置收集任务（包括但不限于集赞、集卡、集福、集碎片）等形式利诱、诱导用户分享以及传播外链内容的。 可以看到，本次的更新主要是明确了好友助力、加速、砍价、任务收集等违规活动。 在这方面，最常见的案例便是旅游平台推出的助力抢火车票、电商类平台推出的砍价等运营活动。 携程小程序上线不久就早小程序中推出了“火车票加速”功能，具体玩法是：携程老用户使用“火车票加速”抢票，并把分享链接、小程序码发给好友助力加速，助力好友越多，抢到票的可能性就越高。 这样的玩法对于拉新而言确实行之有效，但由于越来越多的小程序纷纷采取了类似玩法，对于用户而言，本来有趣的玩法渐渐变成了不胜其烦。晓程序观察（yinghoo-tech）的一位小伙伴就曾吐槽，一天收到10个小程序卡片，有七八个都是助力抢东西、砍一刀。 可以说，现在助力玩法、砍价玩法等被列入了“诱导分享”的行列，开发者需要多多注意。 3.二次加工用户头像 在此次外链禁止规则修改中，新增了违规使用用户头像内容。除标识用户身份以外，禁止任何外链将通过授权获得的标识用户身份的信息（包括但不限于头像、昵称）作其他用途，例如获得授权后直接将该等信息作为二次加工素材；以帮助用户修改、美化、加工头像、昵称为名义，将拉取的用户头像、昵称直接予以使用。 一键授权用户信息是微信提供给开发者的一项重要能力，希望开发者能够利用它为用户提供一些有价值的服务。比如会员卡服务，在用户授权昵称、头像、地区、性别等个人信息后，商家将授权的用户信息应用在会员卡上，以免去用户手动编辑会员卡信息的麻烦，这类情况是被允许的。 但是，在获得授权后，开发者直接将用户信息作为二次加工素材则是被明令禁止的。今年国庆前夕，“给我一面国旗@微信官方”的刷屏活动就是一个典型案例，其原理便是，开发者在获得用户授权后，直接调用用户头像进行二次加工，即一键生成带有国旗的头像。此过程中，一旦用户头像被存储下来用作其他用途，用户隐私便受到了侵犯。  2017年圣诞节前，“@微信官方索要圣诞帽”活动也是同样的原理。其实，人脸识别技术正热的当下，开发者在获得授权后，拉取用户头像直接使用的做法是存在一定隐私风险的。 4.诱导用户下载App或跳转特定内容 此外，在本次发布的禁止外链的规则中，还增加了“诱导或误导下载/跳转类内容”。 外链内容所明示或暗示的金钱奖励、实物奖品、虚拟奖品（包括但不限于红包、优惠券、代金券、积分、话费、流量、信息）等利益内容，用户无法在微信内获得，而需要下载或跳转到外部APP，或需要用户离开微信、下载特定内容或完成特定操作，才能获得的；外链内容标题、页面文案、按钮说明、文字提示等与实际实现的效果不符，造成用户误解或误导用户点击，导致用户下载或者跳转到外部APP的，例如点击新闻标题后、点击“展开全文”后、点击“继续收听”后、点击“领取红包”后直接跳转到外部APP内或下载页等。 可见，外链内容中，以利益诱导用户离开微信下载App或其他内容都是不允许的。在这方面，拼多多等电商平台推出的运营活动中，这类玩法会很常见。 拼多多此前推出过一个“1分钱充话费”的活动，就存在引导用户下载App的做法。具体流程是，在用户在小程序内完成充话费后，却出现引导用户下载拼多多App的页面。 但是，有些情况是，用户需要获得更多服务，而小程序无法提供，所以开发者会引导用户进入App完成后续操作，这类情况是没有问题的。比如，在电商类小程序中，用户买完东西后，需要加入会员，但小程序上并没开发此类服务，所以需要进入App才能完成操作。2微信为什么一直坚持“用户至上”？经常研究微信生态，晓程序观察（yinghoo-tech）见过许多一直在研究微信，希望能从中获取一些利益的人。也经常有人会问我们，微信是什么样的？事实上，微信比任何互联网公司任何平台都简单，就两条：微信有着一条非常明确的价值观---“以用户体验、用户价值为核心目标”。所以，不管你想在微信上做什么，遵从这个价值观就不会跑偏；不管任何时候，这条价值观都奏效。这让晓程序观察想起了一个真事儿，同样是一家以社交为核心业务的公司，在股价稍有下幅时，老板就在财报电话会议中表示要快速商业化，此话一出，股价就能应声上涨。再来看微信，不管是受到外界追捧亦或是受到一些质疑时，“以用户体验为核心目标”这条价值观从来没有变过。事实上，微信一直是以用户体验为原则，来营造一个纯净的沟通环境。对于企业而言，在营销信息大量充斥，垃圾信息变多的环境下，用户也很难真的被留下。可以说，商业化与用户体验之间，想要达到一个平衡，需要平台与企业共同努力，而微信却是坚决以用户体验、用户价值为核心目标去做的。有的人可能会问，微信为什么有这样一个价值观？其实张小龙在许多公开场合都说过。晓程序观察（yinghoo-tech）认为，微信上的开发者和运营者应该都明白，不管是在微信上做服务还是做生意，你的上帝就是用户，而非微信。作为平台，微信也一直在让企业和开发者：慢下来，研究用户，从用户体验出发，原因很简单，微信是因为注重用户体验和尊重用户价值而成功的，现在，微信也想把自己摸索出来的“成功经验”传达给企业和开发者。"}
{"title": "3分钟教你学会使用路线规划小程序插件 ", "author": "Rolan", "pub_time": "2019-10-17 00:13", "content": "以下内容转载自微信开放社区腾讯位置服务官方文章《3分钟教你学会使用路线规划小程序插件》作者： 腾讯位置服务链接： https://developers.weixin.qq....来源：微信开放社区著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。路线规划小程序插件是腾讯位置服务开发的一款为用户规划驾车、公交、步行路线方案的插件。开发者可以直接在小程序内使用这个插件，从而为自己的用户提供多种出行方案选择。路线规划插件的功能路线规划插件能为用户规划驾车出行路线（如下图1所示），并且当行车起点和行车终点之间可以规划出多个方案时会展示多个方案及方案耗时。这些不同方案体现了不同的策略，例如根据实时路况时间最短、红绿灯数较少、少收费等策略。同时驾车路线在地图中会通过不同路线的颜色直观反映道路的拥堵情况，例如红色路线表示那段道路拥堵，这就能够让用户提前规避拥堵路段。路线规划插件也能为用户规划步行出行路线（如下图2所示），不仅显示了步行路线距离和耗时信息，还显示了用户步行过程中，走过的天桥、人行横道数量，更人性化的显示了步行消耗了多少卡路里。路线规划插件还能为用户规划公交出行路线（如下图所示），提供多种公交和地铁出行方案，并且用户可以根据自己的实际情况进行方案排序，例如时间短优先排序、少步行优先排序、少换乘优先排序。出行方案上也会有时间短这样的标志信息说明方案特点。路线规划插件的应用场景路线规划插件应用场景非常丰富，可以直接接入到餐饮、电影等各种类型的小程序中，让消费者在小程序中就能获得到达门店的路线规划方案，方便去门店消费。设想一个场景，小王周末想要吃一顿大餐，于是打开了某家餐厅小程序，当小王决定去这家餐厅时，不需要再打开地图软件去规划出行路线，通过我们的路线规划插件，在这家餐厅的小程序中就能直接规划小王目前的位置到餐厅的出行路线。小王可以选择开车去餐厅，如果今天车牌号限行，那么小王也可以选择公共交通出行，如果到餐厅的距离很近，那么小王可以选择步行方式到达餐厅。小程序只需要使用路线规划插件就能拥有这些全面精准规划路线能力。看了这些功能，是不是想马上体验呢？别急！接下来就介绍路线规划插件的使用方法。路线规划插件的使用方法1、申请路线规划插件在微信公众平台中， “微信小程序官方后台-设置-第三方设置-插件管理” 里点击 “添加插件”（如下图所示），搜索 “腾讯位置服务路线规划” ，选择添加插件，小程序开发者就可以在小程序内使用该插件了。2、申请key调用路线规划插件需要申请腾讯位置服务的服务账号，key是开发者的唯一标识，申请key请点击 这里 。申请key的具体步骤如下：2.1 填写申请信息2.2 创建key成功2.3 授权小程序appid开通微信小程序服务：控制台 -> key管理 -> 设置（使用该功能的key）-> 勾选“微信小程序” -> 填写“授权 APP ID” ->保存。2.4 勾选“WebService API”及“白名单”微信小程序插件需要使用WebService API的部分服务，所以使用该功能的key需要具备相应的权限。如果开发者之前是腾讯位置服务的用户并申请过key，则可以跳过上面2.1、2.2的步骤，直接进行2.3、2.4步骤的设置。3、在小程序中引入路线规划插件只需要在小程序的app.json文件做如下配置就可以在小程序中引入路线规划插件：// app.json\r\n{\r\n  \"plugins\": {\r\n    \"routePlan\": {\r\n      \"version\": \"1.0.0\",\r\n      \"provider\": \"wx50b5593e81dd937a\"\r\n    }\r\n  },\r\n  \"permission\": {\r\n    \"scope.userLocation\": {\r\n      \"desc\": \"你的位置信息将用于小程序定位\"\r\n    }\r\n  }\r\n}4、在小程序中调用路线规划插件在小程序中调用路线规划插件也非常简单：let plugin = requirePlugin('routePlan');\r\nlet key = '';  //使用在腾讯位置服务申请的key\r\nlet referer = '';   //调用插件的小程序的名称\r\nlet startPoint = JSON.stringify({  //起点\r\n  'name': '中国技术交易大厦',\r\n  'latitude': 39.984154,\r\n  'longitude': 116.30749\r\n});\r\nlet endPoint = JSON.stringify({  //终点\r\n  'name': '北京西站',\r\n  'latitude': 39.894806,\r\n  'longitude': 116.321592\r\n});\r\nwx.navigateTo({\r\n  url: 'plugin://routePlan/route-plan?key=' + key + '&referer=' + referer + '&endPoint=' + endPoint\r\n});如以上示例代码所示，只需要传4个参数，就能为小程序用户提供驾车、公交、步行路线规划信息了。这4个参数含义如下：key，开发者的唯一标识，第2步申请的keyreferer，调用插件的小程序的名称startPoint，起点名称和坐标信息，如果不传起点参数，则起点默认当前用户的真实位置endPoint，终点名称和坐标信息怎么样？看了上面的使用方法是不是觉得很简单呢？腾讯位置服务开发路线规划插件的目的就是为了减少开发者开发成本，解放开发者生产力，所以才把这些复杂的路线规划业务封装成了插件，方便小程序开发者使用。那么还犹豫什么呢？立即点击 这里 去体验使用吧！另外，腾讯位置服务还推出了 地铁图小程序插件 ，为用户提供查看各城市地铁线路的功能，还能帮用户检索到最优点地铁出行线路及每个站队的详情信息。后续，腾讯位置服务还会开发更多的关于地图相关的小程序插件，还请各位开发者持续关注我们的 服务商主页 ！"}
{"title": "模版消息变订阅消息，微信小程序现在该怎么玩？ ", "author": "Rolan", "pub_time": "2019-10-24 00:06", "content": "微信团队发出小程序模版消息能力调整通知，微信小程序“模版消息”即将变成“订阅消息”。消息发出后，议论纷纷。本文笔者对微信这一调整的反馈影响进行了探究与分析，与大家分享。他来了！他来了！订阅消息走来了！10月12日微信团队发出小程序模版消息能力调整通知，微信小程序“模版消息”即将变成“订阅消息”，并在消息中号称“模版消息”将在2020年1月份全部下线。有人拍手称快，“你是不知道以前的发送模板消息是多恶心，只访问过一次小程序就天天给我发模板消息，现在我可以选择不接收模板消息或接收我需要的模版消息，真是一次大快人心的改动”。有人则表示这次的调整后用户使用小程序时体验很差，“首先要授权获取用户信息然后有些还会授权申请位置信息或手机号授权，然后还需要再授权这一个个的订阅消息，提醒多了同样会遭到用户投诉”。这是我看到和听到了2种声音，此次调整到底是真的有伤用户体验还是一次成功的迭代？阅读前可以先思考以下几个问题：原模版消息和现订阅消息差异在哪？新的订阅消息如何提高授权通过率？如何让用户触达更多的订阅授权？微信团队为什么会有产生这次调整？原“模版消息”和现“订阅消息”的差异原模版消息在用户使用小程序过程中通过用户点击某组件来收集formid，后续利用该formid可以在7天内任意时间可以给该用户推送模版消息，但注意7天后则无法进行推送模版消息并且是否接收该模版消息的选择权不在用户手上。敲重点：用户被动选择接收、推送有效时间7天内。现订阅消息在用户使用小程序过程中点击某组件后会弹出一个授权框，框中会告知用户消息模版通知的标题，同意后小程序可在后续任意时间给该用户进行服务通知，通知条数可能不同小程序类型有不同标准，反正通知选择权这次回到用户手上，并且可钩上“总保持以上选择，不再询问”。敲重点：用户自主选择接收、推送时间不限制。除了订阅消息外，还更新了一次性订阅消息，顾名思义用户一次订阅小程序可长期推送多条消息。不过目前长期性订阅消息仅向政务民生、医疗、交通、金融、教育等线下公共服务开放，后期将逐步支持到其他线下公共服务业务，其余类型的小程序普及程度和时间还是未知。关于这次调整在产品角度需要考虑的相关事项1. 如何提高订阅通知通过率小程序以前模版消息属于被动接收，没有授权这一说，所以一般推送率是接近100%，现在需要用户主动订阅后才能下发消息，属于刚需服务类产品，比如订了个外卖，支付完成后弹窗授权外卖派送消息和支付成功消息，这也是绝大多数人所需要的，订阅通过率会高很多。但属于非刚需类的产品通知授权弹窗授权通过率如何得到保障，除了小程序本身特性和服务有足够吸引力外，还可以借助外部因素来提高通过率，比如“引导订阅”；所以首先得让用户主动触发订阅，再来谈订阅通过率多少，如果授权框都没弹通过率就是零，所以首先第一步是引导用户主动触发订阅。引导订阅可以在一些需要进行订阅的服务上文本、Badge组件加红点文字提示等进行引导。注意引导尺度，引导非诱导，如果利用诱导订阅手段容易进小黑屋。比如订阅了提高中奖机率、增加抽奖机会等等都是违规行为。当触发了消息订阅后，能传递给用户信息的可能有“消息订阅标题”、”消息订阅标题描述“。目前能影响用户抉择的只有这两个信息，有些消息模版光看标题还真不知道会推送些什么，所以如果标题右边的感叹号是关于订阅的描述，那订阅描述就要清晰明了，避免都到嘴里的瓜都跑了2. 如何让用户触达更多的订阅授权对于核心流程上的订阅用户触发授权的成本很低，所以不担心主流程触发订阅的问题，但对于一些非核心流程或页面路径长的订阅，该如何解决？比如在二级/三级页面的打卡提醒。从用户流程上分析弹出授权框的前提是进入了该页面，如果多数用户连这个页面都没来过就先好好反思产品设计上的问题，进入该页面后如何让用户感知到你这个服务是可以订阅的呢？在视觉上可以做成统一的消息订阅的品牌标识，当用户看到后就认知到如果需要通知提醒就要点它然后允许订阅，就能收到订阅消息。最后以一个局外人视角聊聊本次调整的背后的故事在用户角度看这次的调整，中间多了一步授权确认的操作，多了操作并不是坏事，操作成本变高，效率也会提升，用户没必要为了不重要的推送买单，只有重要用户所需的才唤起订阅，这也是微信团队所倡导的。在产品角度也算好事，不要为了促活疯狂收集formid，靠推送消息唤醒的老用户，得来的大多数也是“虚荣指标”，这样的留存不是长久之计，更重要的是小程序本身的特性和服务对用户有足够的帮助与吸引力。但从研发角度看就苦逼了一些，用户必须主动点击某组件才能弹出订阅通知，意味着很多情况下得把这个授权加到某些已有的事件上。人在家中坐，班从天上来，产品们抽屉里面多备一些零食吧。在微信团队的价值观来看，一切以用户价值为依归，在切实符合用户的合理需求和利益的前提下，通过微信小程序所提供的功能和服务；可见“恶意骚扰”频繁推送模版消息就不属于合理需求和利益的前提，符合用户的合理需求前提下就是需要推送时，唤起订阅告知用户，此订阅是用户所需时就会同意授权，从而收到小程序的推送消息，所以这次的调整“很微信”。团队的价值观是一条准绳，之前Google创始人提出了”永不作恶“的口号后面被归纳到谷歌核心价值观里面的第六点： “做正确的事：不恶。”所以就算谷歌最大的业务来源是广告服务，谷歌浏览器照样开发拦截广告插件-Adblock来屏蔽谷歌浏览器里面的广告，因为谷歌人认为这是在赚钱做好事。“从长远来看，我们会得到更好的回馈——即使我们放弃一些短期收益。”这是谷歌2004年招股书的一句话。所以我认为微信团队的本次订阅消息的调整，也如此。以上#专栏作家#动物园园长，微信公众号：首席吹牛官，人人都是产品经理专栏作家。互联网圈十八线作词人，国家一级退堂鼓表演艺术家。颜良而文丑，欢迎交流。本文原创发布于人人都是产品经理。未经许可，禁止转载题图来自Unsplash，基于CC0协议"}
{"title": "“小程序的三件事”，还有这些问题要考虑 ", "author": "Rolan", "pub_time": "2019-10-22 00:02", "content": "“微信之夜”的演讲结束了，关于小程序的思考没有停止。一、关于搜索、建立用户评价和小程序的找回“微信之夜”演讲提到，2019年小程序有几个重要的事去做：搜索的直达、完善用户的评价体系和小程序的找回。最新版的微信小程序已经有了搜索和查看我的小程序的功能。虽然搜索还未达到提出的“可以直接搜索到小程序里面的内容”的程度，目前还是根据“搜索小程序的功能”来找到小程序。拿演讲上举的例子来说，“输入一个航班号”搜到的小程序可以是有各种功能的，可以是查询航班号，可以是吐槽投诉该航班，还可以是想找到航班上的人或物等等，但用户通常是只想要某个功能的。所以我想，用户输入的真的会是一个航班号吗？或许他更多场景下输入的是想要的“某个功能或服务”，比如“航班查询”或“航班投诉”这样的描述一个小程序的功能的信息。那么需要小程序本身能提供这样的一个描述自己功能的信息，这一点小程序开发者通常都是有做到的。不过现在这一展示信息有一个不足的地方就是，如果描述语过多，会将过多的内容显示为省略号，但用户没法查看更多的内容（点进去之后是小程序的页面）。所以，这样的情况下，开发者提供的关于小程序功能的描述是失效的。但是，用户需要直接通过在搜索结果页面就能查看到完整的描述，才能更好地决定到底点不点进去这个具体的小程序。所以，建议可以添加个“更多描述”的按钮，可以展开完整的信息。图 1 搜索结果页面的显示此外，用户多数时候不止想看开发者是怎么描述小程序的，还想看到其他使用过的用户是怎么描述该小程序的，也就是“小程序需要一个完善的评价体系，使得用户可以作出选择”。既然这个评价的作用是帮助用户做出选择，那么它也是属于“描述小程序”的一部分，同样需要展示在搜索结果页。如果仅展示最热或最新的评论，无法较全面地展示这个小程序的功能和优缺点。如果想展示所有用户评价也是不行的，这个页面显然放不下所有的用户评价，而且也不需要放下所有的评价，因为多数评价都是没有明确表达信息的（参考类似场景下，用户在应用商店里的评价），用户通过这些评价来获取一个较完整的小程序的描述要花的成本很高。图 2 应用商店里的评价用户在留下评价时的表达是不明确的、不本质的，留下“好，体验很好”的评价，他可能是觉得功能很好，也可能是觉得界面很舒服；留下“不好，不要用”可能是觉得内容太少，也可能是功能不能满足需求；“垃圾，周杰伦的歌都没有”可能是想表达小程序大众音乐版权的缺失，“很好，XX的歌都有”可能是想说小众音乐内容很多等等。我们需要找出这些评价的本质是什么，用户到底想表达什么。我想到的一个方法是，在用户评价时，设置几个关键词，引导用户留下相应的评价。比如在听音乐的小程序中，可以有“内容完整度（曲库全与否）、歌词完整度、特色功能”等（根据不同类型的小程序设置不同的评价关键词，应该是较理想的。不过第一版可以从为所有小程序设置通用的评价关键词开始，之后再根据累积的用户评价逐渐完善不同类型小程序的关键词）。然后通过技术抓取和分析用户的关键词评价，来更全面、准确也更精炼地描述小程序的功能。同时，这些用户反馈也可以封装起来给开发者，让开发者更好地了解自己的用户使用情况以改进和迭代小程序。此外，如果是熟人使用过该小程序，还可以优先展示熟人的评价（不过在用户发表评价时，应该让用户选择是否愿意在熟人之间实名展示自己的评价；如果不愿意实名，此时对于用户A看到的应该是“匿名熟人”的评价），让用户更好地做出选择。还有一个场景，当用户分享某个小程序到朋友圈时，也是可以作为评价的一个来源，可询问用户“是否将此分享内容作为评价”。在“小程序的找回”中，目前没有搜索使用过的小程序的功能，但用户用过的小程序可能很多，不能一一查看，估计后续将有搜索功能的完善。在有了评价功能后，还可通过搜索用户自己的评价找回，毕竟有时用户并不太能记得小程序的名字，而评价会是一个较好的情景回顾，帮助用户回想起是哪个小程序。二、发现更多使用小程序的场景，从而扩展小程序的入口最新版微信中有个众望所归的浮窗功能，能很好地满足用户在使用小程序或者阅读文章时，还需要回复消息的场景下的快速切换需求。我在使用这一功能时有个想法，就是使用浮窗是从“使用小程序或者阅读文章时有消息需要回复”这一基本场景出发的，所以浮窗也是在小程序和公众号文章下才能找到（找到后将小程序和文章的入口“添加”进浮窗）。而在聊天页面、朋友圈页面并不能主动唤起（只能点击由小程序或公众号文章页面唤起的浮窗，进入这些预先留下的入口）。这可以很好地满足用户的切换需求，却没有对“扩展小程序的入口”起到太大帮助，因为这一场景下用户使用的，仍然是原本就使用的小程序，而没有去寻找新的小程序。如果要“扩展小程序的入口”，即让用户能除了搜索和顶部入口外，还去寻找新的小程序，需要挖掘更多用户可能使用到小程序的场景。比如，用户在聊天时、看文章时、逛朋友圈时，这些典型的场景下，有没有对某些小程序的需求？我想是有的。用户可能想听歌，但是又不想退出文章或朋友圈，或者看文章时想要找一下某个东西的解释，或者是看到了文章中提到的某个东西，想要在京东加个购物车。如果在聊天页面、朋友圈页面也能有主动唤起浮窗的功能，而且在浮窗中能默认有对小程序的查找功能，也许能让用户在聊天、看朋友圈这样的大场景下的众多细分场景中找到更多对小程序的需求。扩展浮窗的功能，不仅能从小程序、文章页面中唤起浮窗，并将正在使用的小程序和文章的入口添加进浮窗；还能在聊天、朋友圈、公众号文章页面中唤起浮窗来查找小程序。因为用户在这几个大的场景下还会有许多细分场景，在这些小场景中用户存在对某些小程序的需求，这些需求能有效扩展小程序的入口。以上是我对小程序的一点思考，还望各位不吝指教。 本文由@yoonri 原创发布于人人都是产品经理。未经许可，禁止转载题图来自Unsplash，基于CC0协议"}
{"title": "最前线 | 想知道小程序在行业什么水平？微信行业助手告诉你 ... ", "author": "Rolan", "pub_time": "2019-10-25 00:01", "content": "小程序从诞生到成为互联网公司业务标配，只花了短短两年的时间。而在小程序供给愈发充足的当下，如何识别有价值的小程序就成为各大公司的新课题。这一次掌握小程序话语权的微信再次率先出发了。36氪获悉，“微信行业助手小程序”正式发布 。 微信行业助手，就是一个小程序在垂直行业的“运营工具箱”。 行业从业人员、企业老板、市场人员、管理层 ， 都可以通过它了解小程序在所属行业运营状况评估、关键指标展示、运营改善建议、行业案例资讯及能力开通指引等与行业相关的数据资料。微信行业助手小程序界面目前，在公立医院、公交地铁、餐饮（ 茶饮、围餐、轻简快餐、烘焙、零食小吃） 、零售（超市、便利店）、品牌直营（服装、美妆洗护、轻奢奢侈、鞋靴箱包、运营户外家居、配饰、母婴）等17个行业，微信行业助手已经正式上线开放，其他行业也将陆续推出。在评估小程序的行业实力时，微信也给出了几个具体维度，包括获客能力、 变现能力、 促活能力， 透过以上数据，就可以看到自身与同行对比的运营状态以及近30天的运营趋势。微信主要参考的标准还是 “能否为用户提供优质的服务”，所以即使 体量不大的小程序也会因为用户活跃和留存度够好，而获得比较高的评价。此外，微信行业助手小程序还提供很多帮助，比如通过能力工具优化运营、拓宽渠道等。微信上线微信行业助手小程序，这与张小龙年初在微信公开课Pro演讲中所规划的相符。2019年微信有三个重点，小程序评价体系、小程序搜索直达和小程序的找回。他表示，小程序之所以需要一个完善的评价体系，因为这可以让用户可以作出选择。比如，当你要买一个家乡的土特产，你搜到那么多小程序，不知道哪个是可信的。但是如果你发现你的一个朋友在土特产小程序里买过并且有好的评价，那你就会很放心，这就是社交评价的作用。而如今的微信行业助手小程序，会更便于用户去甄别优质小程序。在行业里，微信最早发布小程序，而微信小程序的很多尝试，也给了其他厂商方向。小程序本质还是一个B端产品，想挖掘用户的深层价值，就需要提高小程序的服务能力。小程序评价体系，势必会成为其他公司未来要做的事情。根据《2019年上半年小程序行业发展白皮书》，微信小程序日活2.5亿，服务商家8200家，覆盖行业200多个；支付宝小程序日活2.3亿，小程序数量超过20万；百度小程序月活1.8亿，小程序数量超过10万。（题图来自视觉中国）"}
{"title": "抖音新增小程序桌面，留存一环终于补齐 ", "author": "Rolan", "pub_time": "2019-10-30 00:02", "content": "抖音小程序能力闭环已成！在经历半年的沉寂后，抖音小程序于近日正式上线“小程序桌面”，再次高调回归。一个是短视频的王者，话题热度常年居高不下，一个是移动互联网的流量新洼地，目前已吸引过百万开发者入驻。当王者踏入流量新洼地，无疑极具想象空间。一方面，抖音有趣有品的短视频内容和聚集红人的超强能力，天然契合游戏、泛娱乐和电商类小程序。另外，抖音5亿月活搭配上强大的内容推荐机制，又能保证这类小程序的分发和变现效率。两者相辅相成，可以相互成就。01 抖音小程序的快与慢抖音入局小程序，并不令人意外，毕竟如今有实力的互联网巨头都加入了战局。意外的是字节跳动的执行力——今日头条小程序上线不到一个月，抖音就开始行动了。2018年10月，抖音 iOS 3.0.0 新版中出现小程序入口，点击会出现“没有使用过的小程序”的提示，当时字节跳动工作人员对此表示：“抖音小程序还在小范围内测阶段”。▲抖音 iOS 3.0.0 新版中的小程序入口2个月后，“猫眼电影”作为首个小程序，正式出现在抖音 Android 3.7.0 版本，据36氪报道指出“小程序是张一鸣亲自盯的项目”，这在当时被普遍解读为挑战微信小程序的开端。进入2019年后，抖音更是狂飙突进。先是上线第一款小游戏“音跃球球”，接着开放商品搜索功能，用户搜索关键词即可获取商品的小程序链接，不久后正式接入一批小程序服务商。这是抖音小程序的“快”。“（抖音小程序）跟今日头条小程序用的是一套代码，”一位今日头条内部人士曾表示，目前字节跳动做小程序的模式，是头条小程序部门做一套技术，然后各个产品线开放小程序入口。也就是说，开发者在头条上做个小程序，可以直接复制到抖音，甚至西瓜视频、火山小视频等产品（目前火山小视频已经实现），其中没有技术改造的成本。▲火山小视频中的小程序入口但这种“快”，其实并未掩盖它在部分能力推进上的缓慢，甚至两相对比下似乎更显其“慢”。比如商户心心念念的“小程序收藏”，这一帮助商户留存用户的关键能力，直到一年后的近日才正式推出。要知道，“小程序收藏”已经成为当下所有小程序平台的标配，就算是今年6月份才入局的QQ小程序，在上线之初也已配置上了这一能力。“小程序收藏和小程序桌面的出现，证明抖音没有放弃小程序，对我们来说像注入了一技强心剂，毕竟我们前期投入了不少资源。”已入驻抖音小程序的多位商户在接受晓程序速报采访时均表示乐观。此外，也有不少商户表示苦恼，他们的共同点在于都看好抖音小程序，但都未能成功注册抖音小程序，“上线小程序收藏能力事小，放开抖音小程序注册事大。”据悉，抖音小程序目前在注册申请确实存在诸多限制，比如商城类目没法申请，整体申请数量有限等，这极大地影响了抖音小程序生态的快速发展。02 能力闭环已成尽管抖音小程序收藏能力迟到了，但庆幸的是，它没有缺席。它的到来，不仅如商户所言，极大地鼓舞了他们，而且也补齐了此前抖音小程序在留存环节的空位，实现抖音小程序的能力闭环。因为只有闭环的抖音小程序，才算真正意义上的“装备齐全”。“装备齐全”的说法并非无的放矢，在我们看来，抖音小程序的“装备”主要集中在“中心化流量获取”、“自运营工具”和“潜在运营工具”三方面。1. 中心化流量获取首先，“中心化流量获取”，抖音目前给出了两种渠道：挂载在短视频页面的抖音小程序，可以获得与短视频相同的流量推荐，不过这极为考验短视频内容本身；抖音官方上线了“抖音小游戏”这款小程序，作用类似应游戏应用商店，会对游戏类目的小程序进行中心化分发，而在此之前，官方是通过“抖音游戏”推荐小游戏。▲抖音小游戏中心化推荐入口的变化2. 自运营工具其次是“自运营工具”，抖音小程序给商户提供了解决拉新、留存和促活等关键环节的“工具箱”：（1）“拉新工具”上，目前存在搜索、拍视频/分享视频两大路径。搜索路径不必多讲，但可以重点关注其商品搜索功能，当用户形成在抖音购物习惯后，商品搜索给小程序带来的流量将相当可观。抖音小程序“拍视频/分享视频”的功能，形成了它独特的“小程序+短视频”打法，用户可以在小程序内选择拍视频晒好物，而这些晒出来的好物视频上会自动挂载相应的小程序，用户点击后又可跳转小程序。如此往复，将会对小程序起到“滚雪球”式的曝光效果，从裂变能力上看，似乎不输微信。此外，抖音小程序也支持社交分享，它不仅可以分享到抖音好友以及最新推出的群聊，还能够通过图片二维码的形式在微信和QQ中实现传播获客。当然这一点的获客能力要弱于前者。（2）“留存工具”方面，在“小程序桌面”上线之前，抖音小程序在这一块几乎是空白的。如果一定要较真，那达人主页也可以算上，因为用户也是可以通过达人主页的店铺入口和视频页入口触达小程序的，只不过这一路径对用户来说太长了。也正因如此，“小程序桌面”的出现才愈显意义非凡。“小程序桌面”的出现，使得抖音小程序有可能成为脱离具体达人账号的独立存在，后期如果能搭配上“抖音号-小程序相互关注”的能力，很大程度上能解决商户与达人在星图交易中出现的“只能给小程序带量却无法给商户抖音号带量，结果只能持续投广告”的尴尬场景。▲抖音小程序收藏功能、小程序桌面（位于抖音“我的-三-小程序”）（3）至于“促活工具”，抖音小程序在评论区顶部开辟了小程序固定入口，让用户在浏览评论时能够随时触达小程序。于内容平台而言，评论区是评估账号用户活跃度的一个重要指标，无论微信公众号、网易云村还是我们今天在谈论的抖音，他们的创作者都在有意识地运营评论区，只不过目前成型的只有网易云村而已。因此，未来运营好评论区这块区域，是很有可能成为抖音小程序商户的“杀手锏”的，简单如借助评论区置顶留言引导用户点击小程序，复杂点的在评论区利用小程序做抽奖活动、话题活动等，这是一块有待发掘的潜力区域。▲抖音评论区小程序入口3. 潜在运营工具最后是“潜在运营工具”，主要包括购物车、POI地址、抖店、商品识图、星图等，它们贯穿内容生产、IP包装、商品转化等环节，覆盖线上线下等众多营销场景。据悉，以上部分运营工具已经可以由抖音小程序承载。未来随着更多工具往小程序形态转化，抖音小程序完全可以作为平台最直接的抓手，将这些环节、场景更好地串联起来，并且通过多种能力更紧密的联动，帮助商家实现更有效的内容分发和商品变现。03 未来剑指何方？QuestMobile最新数据显示，用户在小程序上停留的时间越来越长，小程序的商业化变化方式也得以不断不断扩展。小程序已然成为新的创业孵化地。可以看到，在这块创业孵化地上，有着凭借小程序崛起的拼多多们，也存在着大量希冀通过小程序发展线上流量的品牌、门店。当这些创业者的需求汇集起来，对于互联网巨头来说就是流量变现的来源。此外，QuestMobile数据还指出，相较2018年，2019年腾讯系App使用时长占比降幅达3.7%，字节跳动系占比则增长3.1%，而对比2017年，2018年相应数据分别是-6.6%、+6.2%。这也就意味着，使用字节跳动产品的用户越来越多，并且正在逐渐蚕食原本属于BAT的部分流量。▲数据来源：QuestMobile而当下今日头条和抖音选择发展小程序，就是要继续增强字节跳动旗下产品与用户之间的粘性，提高用户在其产品上的停留时间。更多的时间，就意味着更多商业化变现动作可以提上日程，而这将有利于缓解字节跳动面临的IPO压力，也让字节跳动在其他产品孵化上有了更多尝试和腾挪的空间。不仅如此，小程序这把利器，也让今日头条和抖音有更多机会突破自身的产品限制，不止于内容资讯、短视频平台，而是往更加包罗万象的国民App进发。而这两大方向，或许才是字节跳动发力小程序未来剑指之处。 作者：RangeTsai， 公众号“晓程序速报”主笔，关注社交、短视频、小程序等领域。本文由@RangeTsai 原创发布于人人都是产品经理。未经许可，禁止转载。题图来自 Unsplash，基于 CC0 协议"}
{"title": "微信小程序订阅消息：我踩过的坑和解决办法都在这里！ ", "author": "Rolan", "pub_time": "2021-2-22 09:46", "content": "不同点与「模板消息」不同的是，其是在用户点击触发或者支付成功之后，开发者可在7天内推送1-3条服务通知。而「订阅消息」则需要用户主动订阅消息通知，开发者才可向用户推送，但不受时间限制，具体发送信息条数根据该能力的不同类型有不同标准。此外，值得注意的是，使用「订阅消息」后，原小程序模板消息接口于2020年1月10日下线，也就无法再使用原接口推送模板消息。但是，微信服务号模板消息暂不受影响。特点选择权回到用户手中。在小程序中，「订阅消息」像是一个开关，需要用户主动点击授权之后，小程序才能向其推送服务通知，当然，用户也可以随时拒收该小程序的服务通知。而此前，用户只能被动地接收消息。时长不受限制。「订阅消息」取消了7天内推送消息的时间限制，只要用户没有主动拒收消息推送，开发者就可以随时推送服务通知。对于服务周期超过7天的小程序而言，这就完美解决了此前的疑虑。好了那我们来看看如何使用这个订阅消息吧~1、简述大概流程小程序端发起的授权弹窗过程顺便说一下如何获取用户授权信息wx.getting，及当用户关闭授权如何跳到设置授权页一条龙服务，附上其他诸多问题授权后服务端下发订阅消息流程整理一下订阅发送各参数的具体意思，虽然文档有，但是有例子的话对着看更好理解小程序端发起的授权弹窗过程调起客户端小程序订阅消息界面，返回用户订阅消息的操作结果。当用户勾选了订阅面板中的“总是保持以上选择，不再询问”时，模板消息会被添加到用户的小程序设置页，通过 wx.getSetting 接口可获取用户对相关模板消息的订阅状态。留意文档中的这句话 → 如果用户之前设置过不在询问的话，其实是调不起授权弹窗的，那我们怎么获取用户的授权信息呢？wx.getSetting可以获取这些信息：对应的wx.getting文档文档后面有示例代码这边就不在贴出来了如果要获取 订阅消息的订阅状态 需要设置 withSubscriptions 为true即可（默认为false，不开不获取），成功获取后 authSetting 是有关于用户的一些权限，而 subscriptionsSetting 则是我们需要的订阅权限信息，里面有一个总开关 mainSwitch 就是你是否接受当前小程序的订阅信息，如果这个为false的话其实你根本调不起弹窗，那小伙伴就会问如果我要让他知道关闭了权限并且怎么引导他去开呢？先贴出代码：发送订阅消息逻辑处理const SUBSCRIBE_ID = 'RHPuVfEyGe0q0n7lZyzz4r-zyGe07lZyzz4r3' // 模板IDgoCollectSet() {    let that = this;    if (wx.requestSubscribeMessage) {      wx.requestSubscribeMessage({        tmplIds: [SUBSCRIBE_ID],        success(res) {          if (res[SUBSCRIBE_ID] === 'accept') {            // 用户主动点击同意...do something          } else if (res[SUBSCRIBE_ID] === 'reject') {            // 用户主动点击拒绝...do something          } else {            wx.showToast({              title: '授权订阅消息有误',              icon: 'none'            })          }        },        fail(res) {          // 20004:用户关闭了主开关，无法进行订阅,引导开启          if (res.errCode == 20004) {            // 显示引导设置弹窗            that.setData({              isShowSetModel: true            })          }else{            // 其他错误信息码，对应文档找出原因            wx.showModal({              title: '提示',              content: res.errMsg,              showCancel: false            })          }        }      });    } else {      wx.showModal({        title: '提示',        content: '请更新您微信版本，来获取订阅消息功能',        showCancel: false      })    }  }【wx.requestSubscribeMessage文档】简述一下上面的代码，goCollectSet 方法则是授权订阅消息权限执行的方法，由于 wx.requestSubscribeMessage 需要基础库 2.4.4 后才支持，因此我们要做个判断，如果发现用户当前微信没有此方法，则提示更新微信版本；然后 tmplIds Array字段里面是填对应的订阅模板ID【问】订阅模板ID哪里获取、哪里新建呢？·【答】微信公众号平台 登录后，如果有多个小程序，选择当前开发的小程序，成功进入界面后，在 功能 板块 -> 订阅消息，里面可以新建模板也可以使用公共订阅模板，有模板的话直接复制对应的ID即可然后如果此时用户开启了订阅消息通知权限的话，则会出现授权订阅消息的窗口啦，如图：如果此时用户点【允许】此时就会返回 accept 状态，反之点【取消】则返回 reject，具体的状态字段如图我们可以发现这个返回值，是用你的模板id作为键，所以获取的时候要根据模板ID获取，这边只说允许和拒绝的返回，对于 filter 的返回就是因为模板标题同名导致过滤的，所以新建的时候记得区分开已有的标题的模板禁止同名，success成功一般就这些，主要是用户自行的操作，【允许】后就会订阅一次，注意这里是说一次性订阅的订阅消息哦，关于区别可以看下面：【问】一次性订阅模板和永久性订阅有什么区别？如果我需要用永久性订阅怎么操作？【答】1、一次性订阅消息：用户订阅一次后，开发者可下发一条消息，不限时间。若用户勾选了“总是保持以上选择，不再询问”且点击了允许，那么以后都默认同意订阅这条消息。用户不再做多次选择，开发者也避免了更繁琐的提醒。2、长期性订阅消息：用户订阅一次后，可长期下发多条消息。目前长期性订阅消息向 政务、医疗、交通、金融、教育 等线下公共服务开放，后续将综合评估行业需求和用户体验持续完善。（长期订阅消息只针对特定行业开放，所以普通开发者并无法使用）好了回到正题，此时用户点击一次就相当于订阅了一次，相当于你拥有了一次获取系统通知的门票，理论上用户多次点击就相当于订阅了多次，此时是会将这些订阅次数储存起来，如果服务器下发通知时就会消耗一次订阅次数（理论上是这样的，文档也没有说，只要确保每次下发前触发一次订阅交互，所以想想还是长期性订阅香呀，一次授权终身使用~）其次说说弹窗下面的【总是保持以上选择，不再询问】如果没有勾选，每次订阅时都是会弹窗的，而如果用户勾选了，此时执行的逻辑是没有变的，你勾选后点【允许】其实就直接执行了 'accept' 里的逻辑反之如果你勾选了然后点了【取消】就是一直执行 reject 里的逻辑，所以有些小伙伴就会说，为什么每次授权时都没有弹窗还自动拒绝，其实【取消】就是拒绝的意思再加上勾选了不再询问就尴尬了…这个误操作成本就很高了，以后不再弹窗还直接拒绝，如果用户某天想订阅了就不知道哪里订阅了，知道哪里设置（设置页）开启还好，如果不知道就尴尬了，有小伙伴就说那我们再拒绝的逻辑上加上引导弹窗的话不就行了？但是从执行逻辑来看，有无勾选不再询问下点拒绝都是走 reject 的逻辑，如果这边就引导用户去设置页是不是有点奇怪，所以这边其实很蛋疼，只能祈求微信小程序开发大哥加个不再询问的拒绝返回标识多好，这样我们开发也可以根据对应标识返回来判断用户是普通的拒绝，还是不再询问的拒绝当然上面的问题并不是没有解决方法，只是需要自定义一个弹窗，这个下面细讲，我们慢慢来…我们先说 fail 失败的逻辑。能走到 fail 失败的逻辑直接查文档的错误代码表，这边就说几个常见的吧【问】返回错误代码 20001、20002、20003、20004什么意思，怎么解决？【答】20001 ：没有模板数据，一般是模板 ID 不存在 或者和模板类型不对应 导致的20001解决 ：一般要注意代码写入的模板id有没有在微信公众号中，如果没有就新建；还有注意 tmplIds: [‘订阅模板id1’, ‘订阅模板id2’] 这种格式不要写错20002 ：模板消息类型 既有一次性的又有永久的20002解决 ：文档已经说明不能混用，所以检查写入tmplIds中的id是否同一种类型20003 ：模板消息数量超过上限20003解决 ：需要订阅的消息模板的id的集合，一次调用最多可订阅3条消息（注意：iOS客户端7.0.6版本、Android客户端7.0.7版本之后的一次性订阅/长期订阅才支持多个模板消息，iOS客户端7.0.5版本、Android客户端7.0.6版本之前的一次订阅只支持一个模板消息）这个骚限制如果遇到的话，首先找产品开干，为什么这边要一下子搞那么多订阅一下让用户选择，能分开就分开；其次对于低版本的微信用户只支持一个模板消息的话，如果此时有必要两个一起订阅的话就直接提醒用户更新版本就行，否则会影响功能使用就行了·20004 ：用户关闭了主开关，无法进行订阅20004解决 ：这个就是用户设置页将订阅通知消息的总开关关闭了，这边就可以引导用户去设置页开启了好了，这边主要说 20004 的错误返回，也就是如何引导用户去设置页；不是网上那些用图案去引导操作，我们这边直接利用 微信中button标签 open-type=\"openSetting\" 直接直达，首先我们看看这个功能的基础库 2.0.7 ，丝毫不慌能用订阅模板消息 2.4.4 那这个功能也是可以用的，那我们看看wxml，对应的样式不贴出来了自定DIY引导跳授权设置wxml    <view class=\"jumpSetModel\" wx:if=\"{{isShowSetModel}}\">    <view class=\"jumpSetBox\">     <view class=\"m-title\">提示view>      <view class=\"m-content\">检测到您未开启订阅消息通知权限，是否去设置？view>      <view class=\"m-control\">        <button class=\"m-cancel\" catchtap=\"closeSetModel\">取消button>        <button class=\"m-confirm\" open-type=\"openSetting\" bindopensetting=\"openSetCallback\">去设置button>      view>    view>  view>如上图所示，如果返回 20004 的话我们就显示该弹窗，点去设置就会跳到设置页，舒服呀~有些小伙伴就会说，如果设置开启后，手势返回会不会监听到，这个你不用担心，自动刷新订阅通知总开关的状态的，不影响再次执行的逻辑好了，认真阅读的小伙伴是不是记得上面留了一个问题：如果用户点了不再询问并且取消的话，我们这样弹就行了（与普通拒绝一起使用）授权后服务端下发订阅消息流程调用消息订阅接口 wx.requestSubscribeMessage，获取下发权限后，接下来就是下发订阅消息啦~。通过文档我们可以知道有两种下发方式，一种是 HTTPS调用，另一种是使用 云函数小程序·云开发 – 云函数云调用是小程序·云开发提供的在云函数中调用微信开放接口的能力，需要在云函数中通过 wx-server-sdk 使用，云调用还可以免去了 access_token 的获取代码如下：const cloud = require('wx-server-sdk')cloud.init()exports.main = async (event, context) => {  try {    const result = await cloud.openapi.subscribeMessage.send({        touser: 'wx12345645645zawqead',  // 接受当前模板消息的用户openid        templateId: 'TEMPLATE_ID',   // 当前下发的模板ID，不可写多个，目前只支持一个        page: 'index?id=666',   // 定义用户点击该模板消息跳转的小程序路径        // 模板所需要的键值        data: {          thing1: {            value: '情感咨询课程'          },          amount1: {            value: '9.99'          },          date1: {            value: '2020-03-10 15:24:08'          }        }      })    return result  } catch (err) {    return err  }}这样就可以下发到对应的模板到制定的用户啦~后端服务器下发订阅消息 $data = json_decode(file_get_contents('php://input'), true); $post_data = array(  // 用户的 openID，可用过 wx.getUserInfo 获取  \"touser\"           => $data[\"touser\"],  // 小程序后台申添加的订阅消息模板 ID  \"template_id\"      => $data[\"template_id\"],  // 点击模板消息后跳转到的页面，可以传递参数  \"page\"             => $data[\"page\"],  // 发送给用户的数据  \"data\"             => $data[\"data\"] ); // 发送 POST 请求的函数function send_post($url, $post_data){  $options = array(    'http' => array(      'method'  => 'POST',      'header'  => 'Content-type:application/json',      'content' => $post_data,      'timeout' => 60    )  );   $context = stream_context_create($options);  $result = file_get_contents($url, false, $context);   return $result;} // 小程序 appID 和 appSecret 获取 tokenfunction getAccessToken($appid, $appsecret){  $url = 'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=' . $appid . '&secret=' . $appsecret;  $html = file_get_contents($url);  $output = json_decode($html, true);  $access_token = $output['access_token'];   return $access_token;} // 这里替换为你的 appID 和 appSecret$url = \"https://api.weixin.qq.com/cgi-bin/message/subscribe/send?access_token=\" . getAccessToken($appid, $appsecret); $data = json_encode($post_data, true); $return = send_post($url, $data);var_dump($return);这里贴出的是php的demo代码下发小程序订阅消息，关于 appID 和 appSecret 的获取可以在对应的 小程序公众号 里的开发设置中获取【问】小程序云函数如何创建？【答】关于使用小程序云开发创建云步骤可以参考该文章：微信小程序云开发之云函数的创建与环境配置【问】下发时报错了怎么回事，怎么解决？【答】40003 touser字段openid为空或者不正确40003解决 ：注意这里的openid是接受该订阅消息用户的43101 用户拒绝接受消息，如果用户之前曾经订阅过，则表示用户取消了订阅关系43101解决 ：这个报错就要注意在 小程序端发起的授权弹窗过程 中获取用户订阅授权是否成功，如果没有成功请在获取授权操作中查找问题47003 模板参数不准确，可能为空或者不满足规则，errmsg会提示具体是哪个字段出错47003解决：订阅了一次性消息，但是发送时也有可能会失败，这个可能就跟内容有关了，模板 data 参数务必参考对应的模板id开放出来的模板字段进行填写( 订阅消息的模板内容参数非常严格，多一个字符或者与参数规定值不符都导致发送失败，记得对字数进行判断。 填写时对应参数时根据后台的模板填写，比如说 thing03、name05，后面都是带数字的 )41030 page路径不正确，需要保证在线上版本小程序中存在，与app.json保持一致41030解决：必须要填对，路径要小程序有的关于服务器下发订阅消息的流程大概说到这里~2、搜集解疑各种疑难杂症订阅消息算是个大功能了，免不了开发时出现各种各样的问题，上面讲述流程中已经贴出了一些问题及对应的解决方法，这里就不在重复上面写的，这里就补充一下没有提及到的1、开发者工具无法调试后来试了一下在真机上可以吊起授权弹窗，逛了下开发社区才发现这是一个普遍的问题不过现在的提示已经很直白了，这锅我们不背，记得要在真机上调试！2、如果我发起两个订阅模板消息，但用户只收到其中一个，怎么回事？首先 要确保 tmplIds 字段中写入两个相同类型的模板id ['模板id1','模板id2'] ，代码上没写错就会正常吊起授权窗口（前提是用户没有勾选 总是保持以上选择的选项），如果用户要接收两个的话必选勾选两个模板的，如果用户取消了其中一个的话当然是接受不到对应的模板消息的，所以可以在 wx.requestSubscribeMessage 中 success 逻辑中对应处理返回值，如果请求授权多个模板id的话对应的返回也是根据模板id作为键来返回的，所以对应处理即可好了上面是用户没有勾选 「总是保持以上选项，不在询问」的情况，如果勾选了那就不会提示出弹窗，只能在「设置」界面重新打开，因为此时是不会弹窗的，关于引导在上面已经提及过了，这里就不在多诉还有用户还可以再发送订阅通知的微信服务号中，进行取消订阅通知，这个也是直接会把设置里对应的通知接收关闭，同理引导也是跟上面一样success(res) {   // 模板id1的处理逻辑   if (res['模板id1'] === 'accept') {     // 用户主动点击同意...do something   } else if (res['模板id1'] === 'reject') {     // 用户主动点击拒绝...do something   }     // 模板id2的处理逻辑   if (res['模板id2'] === 'accept') {     // 用户主动点击同意...do something   } else if (res['模板id2'] === 'reject') {     // 用户主动点击拒绝...do something     wx.showModal({       title: '提示',       content: '你取消了xxx的通知',       showCancel: false     })  } }3、为什么我使用 wx.requestSubscribeMessage 调试时执行成功了也没吊起授权框？首先要确保能调用成功（基础库支持，代码无错误），这时一般就是之前勾选过「总是保持以上选项，不在询问」这个选项，其次就是你的模板id是属于长期性订阅类型，这种类型，只要你一确认后就不会再给你弹授权窗了，只能根据状态让用户去设置中自行打开4、我同时填写多个模板id字段，报了错：Templates count out of max bounds（注意：iOS客户端7.0.6版本、Android客户端7.0.7版本之后的一次性订阅/长期订阅才支持多个模板消息，iOS客户端7.0.5版本、Android客户端7.0.6版本之前的一次订阅只支持一个模板消息）消息模板id在[微信公众平台-功能-订阅消息]中配置。每个tmplId对应的模板标题需要不相同，否则会被过滤，所以也有小伙伴说为什么我填了三个模板id最后只显示两个，那就要去公众号平台看看是不是出现了标题相同的问题~5、对于一次性订阅授权弹窗，为什么我点允许后，在该小程序设置里面没有看到该订阅消息呢？对应一次性订阅消息来说，如果不勾选\"总是保持以上选择，不再提示\"的话，是不会加入小程序设置页里的，反之勾选了，小程序才会存储该用户在该小程序里的默认授权操作；同理对于长期性订阅消息来说，用户允许或拒绝后都会直接存入设置中（可在设置中看到该长期性订阅的订阅状态）并且我们可以通过 wx.getSetting 接口可获取用户相关模板消息的订阅状态。具体可以看官方文档： wx.getSetting6. 如何获取用户openid？首先对应openid的获取，有三种方法：1、前台小程序通过 wx.login() 获取到的 code 用户登录凭证（有效期五分钟）。然后需要在开发者服务器后台调用auth.code2Session，使用code 换取 openid 和 session_key 等信息；【该操作是不需要用户授权的】2、如果你是用云开发的话，可以调用云函数来获取这些信息，具体代码如下：用这个云函数就可以啦 cloud.getWXContext() （对于云部署之类的就不细讲，有疑问的可以参考上面提到的云函数部署文章）在getopenid云函数的index.js中写好后记得上传部署该云函数// 云函数入口文件const cloud = require('wx-server-sdk')cloud.init()// 云函数入口函数exports.main = async (event, context) => {  const wxContext = cloud.getWXContext()  return {    event,    openid: wxContext.OPENID,    appid: wxContext.APPID,    unionid: wxContext.UNIONID,  }}然后在需要的获取的界面调用该云即可page{  data{    openid:'',  },  onLuanch(){    this.getopenid()  }  // 定义调用云函数获取openid  getOpenid(){    let page = this;    wx.cloud.callFunction({      name:'getOpenid',      complete:res=>{        var openid = res.result.openid        page.setData({          openid:openid        })      }    })  },}【该操作也是不需要用户授权的】3、通过 wx.getUserInfo 接口获取用户信息调用这个方法是需要用户授权的（就是平时我们看到的抽屉式授权信息弹窗），而且如果要获取像openid及其他敏感信息的话还要该参数 withCredentials 为 true 时，并且要求此前有调用过 wx.login 且登录态尚未过期，此时返回的数据会包含 encryptedData, iv 等敏感信息，然而接口返回的 openid 并非明文传输，还需要进行通过 加密数据解密算法 才能拿到明文值；所以如果你只是单单获取 openid 的话，就不需要如此大费周章，用第一二中方法即可；此外该操作还需要用户授权同意才行，如果用户拒绝直接走 fail 逻辑；用户openid会变吗还是唯一值？这个问题要分情况诉说：同一个用户访问同一个小程序，他的openid是不会变的，第一次进来的是什么，之后进来该小程序都是同一个openid（唯一性）同一个用户访问不同小程序，他的openid在各个小程序中都是不一样的不同用户访问同一个小程序，各自用户的openid是不一样的总结：每个小程序都有一个身份值且唯一，他就是appid（就像人民币一样不可能有同一个码，出现就是假钱），而openid是跟appid关联管理的，所以openid其实也是唯一值暂且列出这些问题，如果有其他问题可以一起讨论解决~"}
{"title": "小程序中场战事 ", "author": "Rolan", "pub_time": "2019-9-25 00:03", "content": "文 | 韩志鹏近几日，小程序赛道颇不宁静。前脚微信小程序刚宣布新增视频广告组件并支持嵌入腾讯直播，后脚支付宝小程序则宣布将与微博打通，这期间，头条系也来凑热闹，旗下火山小视频悄然上线小程序。中秋节后，这一波小程序热潮，几乎是过去一年这条赛道的缩影。2018年6月前，世人尽知微信小程序，2019年6月后，百度、阿里、今日头条相继上线小程序，瞬时间，赛道变得异常拥挤，微信与新入局的玩家们轮番上演好戏。一年前，小程序只是巨头暗战；如今，小程序已是一片激战。小程序战场继续硝烟四起，但资本的唱衰声仍此起彼伏，不少创业者带着希望而来却满载失望而归，小程序究竟要如何演化？未来的小程序战争又是何种态势？这或许是当下悬在巨头心间的一把达摩克利斯之剑。支付宝：\t急行军作为小程序后发者，支付宝这半年仿佛一支急行军。9月17日，在支付宝小程序年度峰会上，支付宝宣布平台已累计上线超100万个小程序，稳居行业第二，月活用户突破5亿，这一数字较今年6月净增长超过一个亿。要知道在一年前，支付宝小程序的数量仅有1-2万。一年之内规模激增达百万级，这离不开支付宝对小程序的持续加码。自2018年9月支付宝小程序公测以来，其先后提出20亿元扶持开发者的“繁星计划”、3年投入10亿元激励小程序创业者的“STS计划”等。各类计划呼啸而来之时，蚂蚁金服CEO井贤栋也在当时高度评价支付宝小程序：这一定是我们未来三年最重要的战略之一。支付宝小程序在过去一年如同火箭般飞速发展，在阿里体系内被提升至战略高度，这种变化的个中缘由与微信不无关系。作为超国民社交应用，微信与WeChat的合并月活用户已达到11亿，和支付宝同为“十亿俱乐部”的成员，但支付宝面临的挑战却与微信不同。微信起于社交，用户在此沉淀社交关系，并连接起稳定的社交网络，但支付宝兴于支付，其重在工具属性，并帮助用户完成交易行为的最后一环。简言之，你会天天刷微信，但不会天天刷支付宝。当然，所有的商业模式都离不开交易，支付宝正是聚焦于这一端，而在其将使用场景从支付延伸至生活服务、消费金融的过程中，消费需求被进一步撬动，例如淘票票近80%的流量来自于支付宝。支付宝流量的弊端也来源于此，生活服务场景吸引来的人群“用完即走”，但支付宝需要挖掘更大的流量价值，包括复用率、停留时间等，以及更广范围的流量生态联动。小程序正志在扭转这一局面。小程序提供了更便利的入口，例如“哈啰单车”小程序只需扫码即可使用，但入口背后连接的是服务场景与规模级流量，用户在小程序内便可完成开锁、还车、缴费的全过程，且截止今年6月，哈啰单车近60%流量来自支付宝小程序。但所谓开锁、缴费，App端也足以实现上述功能，而小程序的优势在于“短平快”，用户使用更为便捷，去中心化的设置让小程序能做到“无处不在”。这正是支付宝想看到的局面。借助小程序，支付宝挖掘出大量未被开放的“流量处女地”，例如2018年其开放 “支付成功页”入口，上线“支付后推荐”功能，用户在支付成功后可以继续探索更多服务。支付宝小程序“支付成功页”据了解，支付宝小程序“享物说好物互送”开通该功能两天后，访问人数提升478倍，收藏量提升4069倍。不止于支付成功页，支付宝为小程序开通了搜索、收藏、线下扫码等多个入口。据即速应用数据显示，支付宝上述三大小程序入口获取的外部流量占比为77%。依托小程序的“短平快”，用户享受各类服务时无需下载App，支付宝也通过开放入口来持续挖掘流量使用价值，由此创造更多用户场景。当然，支付宝小程序的上限不止于此。在2019年的支付宝小程序年度峰会上，支付宝小程序宣布与微博实现全面互通，其主要呈现入口包括：微博私信、用户主页和信息流。例如在私信分享中，用户可将支付宝小程序直接分享至微博私信界面，而在信息流界面中，微博开放了一批可直接进行分享的支付宝小程序，但分发频次被严格限制，例如1小时只能分享一次。而在未来，微博的热点内容也会出现在支付宝生活号、城市服务等主要入口，支付宝的热搜榜内容也将与微博的热搜打通或者结合。支付宝与微博，一方强于交易，一方强于社交，微博能为支付宝带来内容与社交流量，支付宝能帮助微博实现交易转化，二者各取所需。不止于微博，今年以来，支付宝小程序相继与高德地图、UC、钉钉等阿里系APP打通，并且表示未来还将打通饿了么、闲鱼等APP。从阿里的视角观察，这种打通意味深长。支付宝用户为线上支付而来，饿了么用户为外卖而来，它们聚焦起流量池，但却是一座又一座的孤岛，流量之间缺乏联动，难以产生规模效应。小程序便能解决这一问题，其短平快的模式联动起大量独立App，对支付宝而言，在亟需流量深耕的背景下，每款APP都是一个独立入口，背后都是一类消费场景，连接起来就能构成庞大的流量生态。以汉堡王为例，其到店前通过口碑端小程序完成线上团购，到店中通过高德端小程序引导办理会员卡，到店后通过支付宝小程序自助点餐，这使汉堡王在短时间内积累起千万用户。阿里系内流量、能力的多端打通，这正是支付宝小程序的关键使命。自公测以来，支付宝对小程序的加码力度远超当年的微信，因为在流量越来越金贵的年代里，入口转瞬即逝，支付宝就更要加速占领入口，连接更多场景，巩固用户流量的这张网。显然，支付宝还将在此道路继续急行。当然，从外部环境看，起步较晚的支付宝为追赶微信也必将加速，但对微信而言，正式公测已过两年的小程序，现今又将如何前行？微信：\t行至深水区开放公测超过两年，微信小程序的前行极为克制。这种克制体现在方方面面，当支付宝小程序公测不到半年就上线中心化入口后，微信小程序在公测两年后才上线下拉桌面，且仅呈现“收藏小程序”和“使用过的小程序”。同时，包括小程序搜索、多浮窗设置这些能力，微信也是逐步开放，而类似朋友圈分享、智能推荐等能力，微信仍未向小程序打开流量窗口。“克制”背后，其实是微信商业模式的独到之处。微信坐拥全球11亿月活数据，其庞大的流量效应已无需赘述，但正如张小龙所“吐槽”的：每天有一亿人教我做产品，微信的规模级用户也是一把枷锁。如前所述，微信小程序的迭代步伐相对支付宝、百度都更为缓慢，而微信自身在各种创新层面也并不激进，例如短视频，微信在近期才开放“朋友圈小视频”自动播放的功能，而这是抖音才上线之初便已实现的。作为超国民应用，微信从未停止创新，小程序、短视频皆是如此，只不过当一款产品坐拥十亿流量之时，其用户拓展、商业变现的节奏和方式都将有所差异。与支付宝相比，微信的流量优势在于用户忠诚度无法被撼动，你可以卸载支付宝，但无法卸载微信。但在多年的用户积累之下，微信也暴露出商业模式的短板，庞大流量需要变现。因此，基于腾讯“开放战略”的思路，微信敞开流量大门，让专业的人做专业的事，让自身转变为新商业模式的“处女地”。拼多多便是这一思路的优秀佐证，其借价格优势贴近下沉市场，通过游戏化购物形式在微信中裂变传播，而小程序也为拼多多创造出更多即时性购买场景，让更多对互联网不敏感的用户更便捷地购买商品。据QuestMobile数据显示，截止2018年3月，拼多多的APP端活跃用户约1.44亿，微信小程序端活跃用户约2.33亿。开放流量，开放支付，微信借此弥补自身在商业模式上的短板，将流量导向更多交易场景中，不断实现商业闭环。这也正是微信小程序发展的大逻辑。在微信小程序的发展道路上，服务商扮演着重要的角色，例如腾讯投资的微盟、有赞和SEE小电铺，它们在零售、媒体等维度具备专业服务能力，微信便开放流量让它们赋能商家。微信官方数据显示，截至今年6月，微信小程序共有8200家服务商，上线了 63万个小程序，占到小程序总量的约27%。显然，微信小程序是在“搭台唱戏”，其向商家提供H5、订阅号、微信支付、二维码等各类基础能力，包括群聊、朋友圈等社交场景，留给创业者自我发挥。以腾讯投资的二手书销售类小程序“多抓鱼”为例，其以公众号为主要流量获取通道，再将有需求的用户导向小程序，让手握大量闲置书籍的人群更高效便捷地出售旧书，实现二手书置换。同时，微信也在不断深化小程序服务能力，包括与腾讯直播打通、开放短视频广告组建等，其通过细化商业能力来为更多小程序玩家创造商业价值。正如张小龙对微信小程序的定义之一：创造价值。当然，在超过两年的发展过程中，微信小程序已是独霸天下，截止今年8月，微信小程序总量达236万个，用户量突破7亿。此外，据QuestMobile数据显示，截止今年6月，MAU在1万到100万之间的微信小程序为4897个，MAU大于100万的为883个，总占比不足1%。和支付宝小程序“急行军”状态不同的是，微信小程序已行至深水区，从中走出了拼多多、同程艺龙这样的平台，微盟、有赞这样的服务商，正是微信丰沃的流量土壤为它们 “扶上马送一程”。不只是流量的促进作用，微信小程序的崛起也将不少目光吸引到这条赛道之上，并且让其它巨头看到流量深耕与变现的机会，让小程序市场变得火热起来。但身处深水区之中，微信需要不断细化自身提供的服务与商业能力，包括直播、广告等，在经历游戏、电商等一波小程序类目的爆发后，微信小程序正在回归零售赋能、连接B端、流量转化的原点能力。这正是微信小程序在深水区的行动路线。微信小程序进入发展关键期，支付宝小程序一路急行，巨头们纷纷涌入这条赛道，持续火热的小程序市场又将去向何方？五强争霸资本狂热、巨头入场，仅仅不到两年时间，小程序就达到了今日的火爆，这背后的个中缘由是什么？自2018年至今，流量红利见顶的情况愈发严重，存量市场的机会愈发减少且被巨头垄断，不少互联网新贵开始剑走偏锋，例如拼多多进军下沉市场，抖音抓住年轻群体。红利见顶的背后，App获客难已成定局，即使出现了ZAO这样瞬间引爆的产品，但没有雄厚资本支撑，企业很难在App市场杀出重围，增量蛋糕并不容易被分食。每家平台都在焦虑“流量去哪了”，据QuestMobile《中国移动互联网2019春季报告》显示，中国移动互联网MAU达到11.38亿，同比增速首次跌破4%。这种背景下，巨头们也感受到流量蛋糕抢食者的威胁，字节跳动让腾讯和百度感受到危机，拼多多让阿里感受到危机，BAT与互联网新贵之间的流量游戏还在上演，线上流量的争夺愈发激烈。同样地，线下门店也面临流量危机。线下门店与商家虽存在增量机会，但其弊端在于线下供给相对分散，门店之间难现网络效应，在满足用户集中性需求时捉襟见肘。同时，线下门店在向线上进攻的过程中也缺乏有效载体，App开发周期长且拉新效果不佳，尤其是在用户即时消费的过程中，App难以大面积推广。可见，面对流量难题，线上平台需要继续深耕，线下门店需要触达更高的触达率，但在APP增长走入瓶颈期之时，线上线下无疑都需要新的载体。于是乎，小程序登台首秀。如前所述，支付宝和微信都在小程序维度不断破除自身流量问题，并且连接了大量线下门店供给与线上需求，实现流量的再次深耕。QusetMobile数据显示，月活用户大于 500 万的微信小程序中，生活服务类与移动购物类的总占比超过三成，而在20万个支付宝小程序中，商业生活服务类占比接近 7 成。小程序让线下门店看到了新的流量入口，也让线上平台看到了新的连接方式和新的流量转化场景，零售服务类小程序自然也就火爆起来。当然，巨头们在小程序赛道的玩法并不止于此。在腾讯和阿里之外，百度也是小程序赛道的一大玩家，其通过开放搜索入口，让用户得以探索更多小程序和配套服务，增强平台的用户停留时间，这和支付宝的出发点有异曲同工之处。据百度Q2财报显示，其智能小程序入驻数突破15万，月活用户2.7亿，环比增长约49%，稳居行业第三。BAT之外，今日头条和360也在入局。目前，字节跳动已在今日头条、抖音和火山小视频等App上线小程序，和微信类似，字节跳动坐拥丰富的流量池，但同样面临交易转化的问题，其自身也通过大量布局App来将流量导向交易场景，这之中，小程序也是重要一环。同时，基于字节跳动自身的强娱乐属性，抖音和火山小视频上线的小程序多以游戏为主，例如此前抖音上极为热门的“音跃球球”。小游戏会带来用户激增，但真正具备变现价值的场景还是零售、电商，字节跳动的小程序仍要在上述领域持续发力。字节跳动主攻移动端，但360却另辟蹊径进攻PC端。今年7月，360小程序正式公测，其自我定位于一款运行在360浏览器PC端的轻应用。在移动端小程序大行其道之时，360主打PC端也有难言之隐，其在移动端缺乏王牌产品，流量沉淀不足，但PC端已成为过去时，360的小程序之路仍险阻重重。可见，一年前，战场上的绝对主角是微信，小程序行业仍是暗流汹涌，一年后，小程序五强林立，战场激烈程度升级，战争行至中场。不过，为什么是BAT+360+字节跳动？在流量红利见顶的今天，BAT与字节跳动是移动流量蛋糕的最大分食者，360则是在PC端有所突破，而这五强更是背靠庞大流量池并打通了商业模式，例如阿里在电商端的成就，百度成为信息流广告一霸。当流量成为珍稀物种，小程序正式迈入“五强争霸”时代。如今，流量争夺的战争愈发激烈，巨头们都抄起了小程序这把武器，不断深化流量价值并广泛连接场景。但流量蛋糕毕竟有限，每家平台都在绞尽脑汁守护流量池，抢占用户时间，即使有小程序这把尖刀，巨头们也更致力于补齐自身短板与强化长板，小程序赛道呈现出各自为战的状态，而这也注定小程序将是一场没有硝烟的战争。"}
{"title": "微信小程序swiper实现 句子控app首页滑动卡片 ", "author": "Rolan", "pub_time": "2021-2-9 23:38", "content": "最近看到句子控APP首页的效果很清新，可是发现他的微信小程序端没有实现这个功能，我看了一下难度不大，于是尝试着去实现。实现效果如下：1、定义一个yiyancard自定义组件，在根目录下新建一个components文件夹并在其内部新建一个yiyancard文件夹。 2、在pages文件夹下新建一个home页面3、在home页面的json引入yiyancard组件，并在wxml中使用index.json{\r\n  \"usingComponents\": {\r\n    \"s-yiyancard\": \"../../components/yiyancard/index\"\r\n\r\n  }\r\n}index.wxml<view class=\"container\">\r\n  <s-yiyancard style=\"width:100vw\"> </s-yiyancard>\r\n</view>4、编写yiyancard相关代码index.jsPage({\r\n  lifetimes: {\r\n    attached: function () {\r\n      this.setData({\r\n        cardCur: 0\r\n      })\r\n    },\r\n    detached: function () {\r\n      // 在组件实例被从页面节点树移除时执行\r\n    },\r\n  },\r\n  pageLifetimes: {\r\n    show: function () {\r\n      this.setData({\r\n        cardCur: 0\r\n      })\r\n    },\r\n  },\r\n  data: {\r\n\r\n    cardCur: 0,\r\n    swiperList: [ {id: 0,\r\n      type: 'image',\r\n      yiyan: '没有无聊的人生，只有无聊的人生态度',\r\n      form: '刘瑜',\r\n      tag: \"励志鸡汤句子\",\r\n      liuyannum: \"36\",\r\n      likenum: \"2k\",\r\n\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 1,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/1.JPG?sign=6a578b89d06a74141a01b35b26684e04&t=1612536951',\r\n      yiyan: '没有任何一种逃避能得到赞赏，喜欢就去追，饿了就吃饭，管他是失败或是发胖',\r\n      form: '',\r\n      likenum: \"17K\",\r\n      liuyannum: \"126\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 2,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/2.JPG?sign=42c68e97e5fcd277e42bdc476a94cdb4&t=1612536964',\r\n      yiyan: '万物皆有裂痕，那是光进来的地方',\r\n      tag: \"励志\",\r\n      likenum: \"11K\",\r\n      liuyannum: \"31\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 3,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/3.JPG?sign=d607ee45937f227f8ae5fba4e9f846f4&t=1612536974',\r\n      yiyan: '不听命于自己者，就要受命于他人',\r\n\r\n      form: '尼采',\r\n      likenum: \"1.0K\",\r\n      liuyannum: \"112\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 4,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/4.JPG?sign=4c986f27559352bb5d9b42a96851ab22&t=1612536983',\r\n      yiyan: '我从不曾崩溃瓦解，因为我从不曾完好无缺',\r\n\r\n      form: '安迪·沃霍尔',\r\n      likenum: \"967\",\r\n      liuyannum: \"30\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 5,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/5.JPG?sign=22d43fff1c66594770c1c2b10cd8403c&t=1612537004',\r\n      yiyan: '总有人找你这可小星球，了解你的温柔和璀璨，即使旁边的宇宙再浪漫',\r\n      form: '',\r\n      likenum: \"19k\",\r\n      liuyannum: \"1514\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 5,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/5.JPG?sign=22d43fff1c66594770c1c2b10cd8403c&t=1612537004',\r\n      yiyan: '总有人找你这可小星球，了解你的温柔和璀璨，即使旁边的宇宙再浪漫',\r\n      form: '',\r\n      likenum: \"11k\",\r\n      liuyannum: \"1136\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 5,\r\n      type: 'image',\r\n      url: 'https://7368-shuyuabn-9gke6t6k962d48ca-1304045188.tcb.qcloud.la/image/5.JPG?sign=22d43fff1c66594770c1c2b10cd8403c&t=1612537004',\r\n      yiyan: '总有人找你这可小星球，了解你的温柔和璀璨，即使旁边的宇宙再浪漫',\r\n      form: '',\r\n      likenum: \"12K\",\r\n      liuyannum: \"306\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      id: 6,\r\n      type: 'image',\r\n\r\n      yiyan: '总有人找你这可小星球，了解你的温柔和璀璨，即使旁边的宇宙再浪漫',\r\n      form: '',\r\n      likenum: \"11K\",\r\n      liuyannum: \"391\",\r\n      iflike:\"false\"\r\n\r\n    }, {\r\n      ifend: true\r\n    }],\r\n  },\r\n  onLoad() {\r\n    this.towerSwiper('swiperList');\r\n    // 初始化towerSwiper 传已有的数组名即可\r\n  },\r\n  DotStyle(e) {\r\n    this.setData({\r\n      DotStyle: e.detail.value\r\n    })\r\n  },\r\n  // cardSwiper\r\n  cardSwiper(e) {\r\n    this.setData({\r\n      cardCur: e.detail.current\r\n    })\r\n  },\r\n  // towerSwiper\r\n  // 初始化towerSwiper\r\n  towerSwiper(name) {\r\n    let list = this.data[name];\r\n    for (let i = 0; i < list.length; i++) {\r\n      list[i].zIndex = parseInt(list.length / 2) + 1 - Math.abs(i - parseInt(list.length / 2))\r\n      list[i].mLeft = i - parseInt(list.length / 2)\r\n    }\r\n    this.setData({\r\n      swiperList: list\r\n    })\r\n  },\r\n  // towerSwiper触摸开始\r\n  towerStart(e) {\r\n    this.setData({\r\n      towerStart: e.touches[0].pageX\r\n    })\r\n  },\r\n  // towerSwiper计算方向\r\n  towerMove(e) {\r\n    this.setData({\r\n      direction: e.touches[0].pageX - this.data.towerStart > 0 ? 'right' : 'left'\r\n    })\r\n  },\r\n  // towerSwiper计算滚动\r\n  towerEnd(e) {\r\n    let direction = this.data.direction;\r\n    let list = this.data.swiperList;\r\n    if (direction == 'right') {\r\n      let mLeft = list[0].mLeft;\r\n      let zIndex = list[0].zIndex;\r\n      for (let i = 1; i < list.length; i++) {\r\n        list[i - 1].mLeft = list[i].mLeft\r\n        list[i - 1].zIndex = list[i].zIndex\r\n      }\r\n      list[list.length - 1].mLeft = mLeft;\r\n      list[list.length - 1].zIndex = zIndex;\r\n      this.setData({\r\n        swiperList: list\r\n      })\r\n    } else {\r\n      let mLeft = list[list.length - 1].mLeft;\r\n      let zIndex = list[list.length - 1].zIndex;\r\n      for (let i = list.length - 1; i > 0; i--) {\r\n        list[i].mLeft = list[i - 1].mLeft\r\n        list[i].zIndex = list[i - 1].zIndex\r\n      }\r\n      list[0].mLeft = mLeft;\r\n      list[0].zIndex = zIndex;\r\n      this.setData({\r\n        swiperList: list\r\n      })\r\n    }\r\n  },\r\n  like: function (event) {\r\n    const that = this\r\n    let likeid = event.currentTarget.dataset.likeid\r\n    var a = `swiperList[${likeid}].iflike`\r\n    var b =`that.data.swiperList[${likeid}].iflike`\r\n    console.log(a)\r\n    console.log(b)\r\n\r\n    if (that.data.swiperList[likeid].iflike=== \"false\") {\r\n      that.setData({\r\n      [a] : \"true\",\r\n      })\r\n    } else if (that.data.swiperList[likeid].iflike=== \"true\") {\r\n      that.setData({\r\n        [a]: \"false\",\r\n      })\r\n    }\r\n    \r\n    console.log(that.data.swiperList[likeid].iflike)\r\n  }\r\n}) index.json{\r\n  \"component\": true,\r\n  \"usingComponents\": {}\r\n}\r\nindex.wxss<swiper class=\"card-swiper \" duration=\"500\" bindchange=\"cardSwiper\">\r\n  <swiper-item wx:for=\"{{swiperList}}\" wx:key class=\"{{cardCur==index?'cur':''}}\">\r\n    <block wx:if=\"{{!item.ifend}}\" >\r\n      <view class=\"swiper-item other \">\r\n      <image src=\"{{item.url}}\" mode=\"aspectFill\" class=\"swiper-img\"></image>\r\n      <view class=\"yiyan-body\">{{item.yiyan}}</view>\r\n      <view wx:if=\"{{item.form}}\" class=\"yiyan-form\">- {{item.form}} -</view>\r\n      <view wx:if=\"{{!item.form}}\" class=\"zhanwei\"></view>\r\n      <view class=\"bottom-box\">\r\n        <view class=\"like juzhong\" bindtap=\"like\" data-likeid=\"{{item.id}}\">\r\n          <block wx:if=\"{{item.iflike =='false'}}\">\r\n            <image class=\"icon-img\" src=\"../../images/icon/xihuan.png\"></image>\r\n          </block>\r\n          <block wx:if=\"{{item.iflike =='true'}}\">\r\n            <image class=\"icon-img\" src=\"../../images/icon/xihuan2.png\"></image>\r\n          </block>\r\n          <view class=\"num\">{{item.likenum}}</view>\r\n        </view>\r\n        <view class=\"liuyan\">\r\n          <image class=\"icon-img2\" src=\"../../images/icon/liuyan.png\"></image>\r\n          <view class=\"num\">{{item.liuyannum}}</view>\r\n        </view>\r\n        <view class=\"biaoqian\">\r\n          <image class=\"icon-img\" src=\"../../images/icon/biaoqian.png\"></image>\r\n        </view>\r\n        <view class=\"zhuanfa\">\r\n          <image class=\"icon-img\" src=\"../../images/icon/zhuanfa.png\"></image>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    </block>\r\n    <block wx:if=\"{{item.ifend}}\">\r\n      <view class=\"swiper-item other juzhong\">\r\n        <view class=\"end-title\">每日十句精选投稿</view>\r\n        <view class=\"end-body\">\r\n          感谢支持，每天都有不同的收获。如果意犹未尽，可以点击底部按钮查看更多推荐\r\n        </view>\r\n        <view class=\"end-bottom\"> 去发现页查看更多推荐</view>\r\n      </view>\r\n    </block>\r\n  </swiper-item>\r\n</swiper>\r\n\r\n index.css/* ==================\r\n         轮播\r\n ==================== */\r\n\r\n.swiper-img {\r\n    height: 35% !important;\r\n\r\n}\r\n\r\n.swiper-item image,\r\n.swiper-item video {\r\n    width: 100%;\r\n    display: block;\r\n    height: 100%;\r\n    margin: 0;\r\n    pointer-events: none;\r\n}\r\n\r\n.card-swiper {\r\n\r\n    height: 85vh !important;\r\n}\r\n\r\n.card-swiper swiper-item {\r\n    width: 610rpx !important;\r\n    left: 70rpx;\r\n    box-sizing: border-box;\r\n    padding: 40rpx 0rpx 70rpx;\r\n    overflow: initial;\r\n}\r\n\r\n.card-swiper swiper-item .swiper-item {\r\n    width: 100%;\r\n    display: block;\r\n    height: 100%;\r\n    border-radius: 10rpx;\r\n    transform: scale(0.9);\r\n    transition: all 0.2s ease-in 0s;\r\n    overflow: hidden;\r\n}\r\n\r\n.card-swiper swiper-item.cur .swiper-item {\r\n    transform: none;\r\n    transition: all 0.2s ease-in 0s;\r\n}\r\n\r\nswiper {\r\n    margin-top: 15rpx !important;\r\n}\r\n\r\n.other {\r\n    position: relative;\r\n\r\n    background-color: #ffffff;\r\n    display: flex;\r\n    /*flex布局方法*/\r\n    flex-direction: column;\r\n    /*垂直布局*/\r\n    align-items: center;\r\n    /*水平方向居中*/\r\n\r\n    box-shadow: 0 6rpx 24rpx rgba(0, 0, 0, 0.08);\r\n    position: relative;\r\n\r\n}\r\n\r\n/* 内容 */\r\n.yiyan-body {\r\n    line-height: 46rpx;\r\n    letter-spacing: 5rpx;\r\n    margin-top: 38rpx;\r\n    font-size: 30rpx;\r\n    width: 90%;\r\n    height: 35%;\r\n    margin-left: 5%;\r\n    color: #3e3e3e;\r\n}\r\n\r\n.yiyan-form {\r\n    position: absolute;\r\n    bottom: 55px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-size: 25rpx;\r\n    color: #999999;\r\n    width: 50%;\r\n    margin-top: 20%;\r\n    margin-left: 25%;\r\n\r\n}\r\n\r\n\r\n/* 底部 */\r\n.bottom-box {\r\n    position: absolute;\r\n    bottom: 0px;\r\n    width: 100%;\r\n    height: 80rpx;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.juzhong {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.icon-img {\r\n    width: 30rpx !important;\r\n    height: 30rpx !important;\r\n}\r\n\r\n.icon-img2 {\r\n    width: 30rpx !important;\r\n    height: 30rpx !important;\r\n    /* margin-top: 5rpx !important; */\r\n}\r\n\r\n.like {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 27%;\r\n}\r\n\r\n.num {\r\n    font-size: smaller;\r\n    margin-top: 3rpx;\r\n    margin-left: 6rpx;\r\n    color: #b4b4b4;\r\n}\r\n\r\n.liuyan {\r\n    width: 27%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    align-items: center;\r\n}\r\n\r\n.biaoqian {\r\n    width: 23%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    align-items: center;\r\n}\r\n\r\n.zhuanfa {\r\n    width: 23%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    align-items: center;\r\n}\r\n/* 最后一页 */\r\n.end-title{\r\n    width: 60%;\r\n    margin-left: 20%;\r\n    font-size: 30rpx;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 100rpx;\r\n    margin-bottom: 100rpx;\r\n}\r\n.end-body{\r\n    width: 80%;\r\n    margin-left: 10%;\r\n    font-size: 27rpx;\r\n    color: #a7a7a7;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 40rpx;\r\n}\r\n.end-bottom{\r\n    position: absolute;\r\n    width: 70%;\r\n    left: 15%;\r\n    bottom: 60rpx;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 40rpx;\r\n    color: #7b9fcb;\r\n    font-size: 28rpx;\r\n} 编写完以上代码，相关功能就实现了。注意：为了方便以上data中的数据是直接在js中自定义好的。关于动态改变喜欢图标详情参见上一篇随笔。"}
{"title": "2018前端值得关注的技术 ", "author": "Rolan", "pub_time": "2018-1-9 00:34", "content": "1.前言2017悄然过去，2018已经来到。人在进步，技术在发展。2018年前端有哪些领域，技术值得关注，哪些技术会兴起，哪些技术会没落。下面就我个人的判断进行一个预测判断，希望能对大家起到一个参考作用！下面提及的技术，只是建议大家关注，也不是建议大家全部的都要学，而是建议大家按需学，自己觉得哪些需要学，对哪些有兴趣就学哪些！如果大家有什么工具，框架，库觉得可以推荐的，欢迎在评论区提点，让大家相互进步，学习！2.PWAPWA(Progressive Web Apps)由谷歌提出，用前沿的技术开发，让网页使用如同App般的体验的一系列方案。明确的一点就是：PWA就是一个网页, 可以通过前沿的技术开发出一个网页应用。自从谷歌提出PWA后，就持续的获得了业界的关注，热度可见一斑。就在今年，谷歌也宣布： PWA将获得与安卓原生应用同等的待遇与权限 。这就意味着以后的网页基本和APP将越发将近，那么关注度将会进一步的上升。资料参考：PWA 入门: 写个非常简单的 PWA 页面【转载】你的首个 Progressive Web App【转载】下一代Web应用模型：Progressive Web App3.typeScriptTypeScript由微软开发。它是JavaScript的一个超集，自由和开源的编程语言。在这个语言中，添加了可选的静态类型和基于类的面向对象编程。由下图说明typeScript和JavaScript的关系！（图片来源牧之-- 从 JavaScript 到 TypeScript ）angular已经开始使用typeScript进行开发，react和vue也进一步加深对typeScript的支持。不难发现，typeScript的火热程度！资料参考：TypeScript官方文档TypeScript 资源集从 JavaScript 到 TypeScript 1 - 什么是 TypeScript （看了第一篇，别落下这个系列的几篇文章）4.parcel能给webpack带来多大的威胁webpack 大家都知道是JavaScript模块打包工具，简单的来说就是把各个模块就行分析，编译，打包等，使产出的文件可以在浏览器中运行。（图片来源于菜鸟教程- Webpack入门教程 ）webpack的工作虽然是模块打包工具，但也能代替类似gulp等自动构建工具的部分功能！经过2017的发展，webpack的火热程度也是有目共睹。但是，但是。在2017末就出现了一个黑马： parcel 。parcel出乎了大多数人的意料，也算是2017的最大惊喜之一。说到parcel的最大优势，貌似就是webpack的最大劣势：配置和性能！parcel号称零配置，多核打包，并且使用文件缓存，在时间上比webpack快了将近10倍！（图片来源于neal的文章- 宣布 Parcel：一个快速，零配置的 Web 应用打包工具 ）从star上面而言，Parcel的关注度似乎超过了当时了webpack，热度仍在持续。webpack难用之处，我觉得就是配置繁琐，且文档不完善，看着也懵逼。至于打包时间方面，只能说没有对比就没有伤害吧。如果Parcel能做好这几点，说不准能从webpack里面分到不少肉。宣布 Parcel：一个快速，零配置的 Web 应用打包工具Parcel Vs Webpack5.WebAssembly由谷歌, 微软, Mozilla，苹果等公司合作的一个面向Web的通用二进制和文本格式的项目。引用腾讯IVWEB团队的说法：WebAssembly是一种新的字节码格式。它的缩写是\".wasm\"，.wasm 为文件名后缀，是一种新的底层安全的二进制语法。。它被定义为“精简、加载时间短的格式和执行模型”，并且被设计为Web 多编程语言目标文件格式。这意味着浏览器端的性能会得到极大提升，它也使得我们能够实现一个底层构建模块的集合，例如，强类型和块级作用域。WebAssembly刚出来的时候，甚至有开发者猜想，以后会不会是WebAssembly代替JavaScript。在这里，我的感觉就是JavaScript不会被WebAssembly代替，等待没落，而是和WebAssembly共存的关系！2017年，chrome，火狐，IE，Safari四个浏览器统一通过了WebAssembly的方案，这是很少见的情况，我所了解的是第一次出现这样的统一情况，可见四个浏览器厂商对WebAssembly的重视。至于2018年，WebAssembly会有如何的发展，这个难说，初步预测应该还是普及推广，但是还没有到普及开发使用的阶段。但是无论如果，这个都值得关注！来谈谈 WebAssembly 是个啥？为何说它会影响每一个 Web 开发者？WebAssembly 实践：如何写代码6.react,angular,vue三驾马车2017年，react发展的迅猛，vue更是扮演框架黑马的角色，而angular虽然关注度不如以前，但是不容忽视！在2017的调查报告里面可以看到，趋势基本上是react已经占据主流，不使用框架位居第二，angular1，angular2分列三四。中国的情况就是，react第一，vue第二vue在2017年很火，但在2018年vue的潜力不容小觑如下图（有1.2W人想使用vue）。虽然超过react的可能性不是很大，但是位置依然会提升参考资料2017JavaScript调查报告前端领域2017年有哪些变化，2018年又有怎样的期待？2017 前端大事件和趋势回顾，2018 何去何从？2017 JavaScript 现状报告：询问了23000名开发者，他们给出了这样的答案2018 年最值得关注的 JavaScript 趋势无论如何，框架这个我觉得没有最好，只有最适合。三驾马车也没有说一定要全部都要会！一下就是，如果js基础好，学习框架会比较容易上手。如果极端得不学js，直接上手框架，会很吃力，很容易懵。7.人工智能和大数据人工智能和大数据，不是一门技术，而是一个领域，最近两年都很火，也不止于前端。我也觉得是互联网下一波的红利。非常值得关注与学习！这也是一个流行的趋势，因此一些数据可视化的工具（echart，D3等）和人工智能的库都得以收到关注！8.yarn VS npm相信接触到前端工程化，模块化的开发者都不可避免的使用npm进行功能包的安装依赖。尤其是在node.js的初期，npm就是工程化的一个标配。但是2017年，npm的地位显然是收到了yarn的威胁！今年的调查结果，yarn还超越了npm。yarn的优势在于：快，安全，和一些感人细节！如果照着情况下去，差距会逐渐变大！参考资料yarn, 不是又一个 npm 第三方客户端Yarn vs npm: 你需要知道的一切9.css in js依然备受争议？前端领域，一向是推荐结构层(html)，表现层(css)，行为层(javascript)分离。但是在react出来之后，这个准则就貌似被推翻了！因为react的组件结构，要求把html，css，javascript写在一起。很多开发者对css in js不适应甚至反对。那么在新的2018年，是否还是继续的争议下去？参考资料CSS in JS 简介精读《请停止 css-in-js 的行为》大家对CSS in JS怎么看？不要再在JavaScript中写 CSS了10.flex和grid布局更加流行以前前端页面布局的时候，inline-block，float，postion布局等。但是有了flex和grid，布局变得更加的简单。首先flex基本已经被所有的浏览器支持的，其方便的特性也受到了很多开发者的热捧！（图片来源于阮一峰的网络日记-- Flex 布局教程：语法篇 ）而grid，网格布局号称是下一代的布局方式，但是浏览器兼容方面就没有flex那么好。但是这个也是有必要了解的。毕竟已经被W3C纳入标准了。兼容性也是进一步增强。参考资料Flex 布局教程：语法篇Flex 布局教程：实例篇CSS Grid布局：什么是网格布局 （看完这篇，建议连着看下面的几篇，都是大漠写的一个系列的文章，质量非常高）CSS Grid VS Flexbox：实例对比11.rxjsrxjs我有稍微了解一下，但是还没用上，可能是大家对这个也是比较陌生，但是我在这里提出来，是因为觉得rxjs还是值得推荐的。引用官网的说法：RxJS 是使用 Observables 的响应式编程的库，它使编写异步或基于回调的代码更容易。这个项目是 Reactive-Extensions/RxJS(RxJS 4) 的重写，具有更好的性能、更好的模块性、更好的可调试调用堆栈，同时保持大部分向后兼容，只有一些破坏性的变更(breaking changes)是为了减少外层的 API 。参考资料rxjs中文文档rxjs简单入门通俗的方式理解RxJS12.其它方面受限于篇幅，还有几个我也认为是可以关注的简单说下。如下小程序首先微信小程序，自打微信小程序一出来，很多前端就吐槽。跟别人群聊的时候，很多人也提到：小程序一出来，我就认为是没前途的玩意。或者就是：灭绝APP不可能，小程序只是一个阉割版的APP，竞争厂商也不会开发小程序。还有就是：学习这个还不如关注了PWA，那个比这个更加有意义。谈到的话语大概就是这个意思，2017年，我也是比较介意开发小程序，以至于2017我压根就学过小程序。但是就在17年第四季度还是年末，微信先后宣布可以内嵌html5页面，也可以开发小游戏。让我看过了小程序又有了刚发布的热度。在18年，小程序发展如何，我是否会接触和学习开发小程序，走着瞧。但是无论都值得关注。其次是支付宝的小程序，虽然感觉没什么新闻，但是毕竟是大厂的玩意。关注是值得关注的。至于学不学，开发不开发，另一回事！Electron号称开发桌面应用的一大神器。也尝试了几个官方的实例，运行很流畅，只是因为暂时不开发桌面应用，所以没怎么关注，也没学习过。2018年依然关注，甚至会学习开发！WebVR 与 WebAR看了所谓的相关实例，那些VR和AR的效果并不能引起我的兴趣，虽然那些实例，我也没了解过时怎么开发的。但是，对于这一块，关注还是值得的。毕竟这也算是WebVR和WebAR刚起步而已。13.哪些技术会没落/下滑angular前面还说到angular在前端框架里面还有很大的使用率。谷歌方面也是出到了5.x，居然在这里会出现？这里只是一个小小预测而已。2017讨论angular的情况已经是比较少了，在2018年里面angular的使用率觉得会继续下滑，但不会没落，并且在前端框架里面依然有很大的一个地位。18年，angular还是会和react和vue齐名的三大框架，只是使用者不如react和vue那样多。jqueryjquery在2018年也不会没落，只是使用率还是会进一步的减少。说到jquery，还真是一个时代的转变，在我刚接触前端的时候，jquery打天下。那个时候相对于其他的库和框架，jquery就是一个巨无霸，使用率遥遥领先。就连微软是在.net平台上支持了jquery。在刚工作的时候，潜规则就是：不会jquery，没人承认你是前端。可见当时的jquery的地位。也相信很多人对有jquery情怀。只是技术不讲情怀！es5以下版本语法本段内容提及的es6代表es6以上的语法，包括es7,es8。es5代表es5以下的语法，包括es3es6经过两年的发展，方便和实用性得到了众多开发者的欢迎。2017应该是es6语法的使用比率首次超es5，在2018年，es6语法使用比率会继续的升高。而es5等语法的使用比率会继续的下滑。即使就目前开发而言，还是要使用babel把es6的语法编译成es5。grunt在gulp发布时，grunt的地址就已经很受影响了，现在又有打包工具代替了自动构建工具的部分工具，就显得自动构建工具的作用不如以前了，更别说市场有一个更好的构建工具了--gulp。sea.jssea.js由国人开发，当时使用的时候还满心欢喜，终于有国人的东西登上舞台了。sea.js凭借简单，轻量等优势火极一时。但是有了es6的模块化之后，就连sea.js的作者玉伯也在微博发言：应该给 Sea.js 和 KISSY 也树一块墓碑了。14.小结好了，关于2018的的个人对于前端这一方面的预测和一些推荐关注的就写到这里了！虽然写了这么多，但是我并不是说所有都要学，要会，而是建议大家关注，学习哪些技术看自己所需，看自己兴趣。文章提及的也只是我平常关注的，有些只是我也是只是了解，但并没有深入学或者使用。也觉得在前端这一方面，没有什么最好的工具，框架，库等，只有最适合自己的。最后，如果大家有什么工具，框架，库或者其它的技术，欢迎在评论区内指点提出。让大家相互学习，相互进步！-------------------------华丽的分割线--------------------想了解更多，关注关注我的微信公众号：守候书阁"}
